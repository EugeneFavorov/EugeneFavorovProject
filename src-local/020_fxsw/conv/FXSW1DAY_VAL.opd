[OpKindList 4.1d] // Экспорт данных произвел 0000BAV 12/07/2016 09:41:43 БД "-db /home2/bis/quit41d/db/bisquit,-ld bisquit,-L 200000,-n 500,-B 8000,-omsize 1400,-spin 10000,-U qbis,-P,-n 500"
// ***************************************************************************
FXSW1DAY_VAL:
DO TRANSACTION EXECUTABLE:
   /// <tr_package>
   /// 000.FXSW1DAY_VAL
   /// </tr_package>

   /// <tr_name-opkind>
   /// Сделка SWAP заключение валюта (день 1-й)
   /// </tr_name-opkind>

   /// <tr_details>
   /// Назначение - реализация открытия срочных счетов для сделки класса loan-fx-tom, loan-fx-spot или loan-fx-frw, выбранной в вызывающей транзакции. Вызывается в FX2040, в FX209910 и в FX209941. Описание шаблонов, приведенное ниже, делается в порядке их следования в транзакции. Данная транзакция реализует способ учета, когда срочные счета открываются в разрезе  сделок. В "FX209920/Выполнить до" назначается переменная для имени транзакции, используемая в ш.filter для контроля на повтор исполнения операции. В "FX209920/Выполнить после" производится выдача на экран о завершении операции.
   /// 
   /// - Шаблон класса filter производит проверку по Журналу операций наличия реализованной ранее операции учета на сроч.счетах для данной сделки в данном опердне (см.рекв.where). Если такая операция не обнаружена, то производится запуск функции ГР_ТРАНЗАКЦИЯ() в Вып.после шаблона, которая после запуска фиктивной подтранзакции FX989910 возвращает нуль, в результате чего исполнение шаблона завершается и производится переход к следующему шаблону. Если операция обнаружена, то ГР_ТРАНЗАКЦИЯ() возвращает не-нуль, выдается предупреждение и транзакция откатывается (ф-ция BREAK()), что приводит к завершению всей операции. Вспомогательным назначением шаблона является в Выполнить до выдача на экран (в протокол) номера обрабатываемой сделки. Шаблон одинаков в FX209920, FX309920, FX359920, FX409920. 
   /// 
   /// - Шаблон класса banks отыскивает объект для контрагента. Вспомогательным назначением шаблона является реализация операторов в Выполнить до: определение мин.и макс.дат валютирования, формирование  в @details1 и в @details-kr стандартной части текста для Примечания к генерируемому документу (для использ.в шаблонах класса opf), определение в @buy-rub_ekv и в @sell-rub_ekv рублевых эквивалентов для валютных сумм, формирование в в @vid-kr вида курсовой разницы, в @kr - величины курсовой разницы.
   /// 
   /// -Шаблоны bal-acct с действием Поиск отыскивают объекты счетов 2-го порядка для требования и обязательства с требуемым сроком. 
   /// 
   /// -Шаблоны loan-acct с действием Поиск с ош. отыскивают привязанные к сделке объекты ролей счетов для требования и обязательства.
   /// 
   /// -Шаблоны счетов класса acctf открывают счета для требования и обязательства. Вспомогательным назначением шаблонов является осуществляемая в Выполнить до проверка события, обнаружены ли роли счетов для требования и обязательства. Если в ходе операции должен быть открыт новый счет, и счет с соответствующим номером 2-го порядка обнаружен уже открытым и привязанным к сделке, то выдается сообщение об ошибке, и транзакция откатывается.
   /// 
   /// -Шаблоны loan-acct с действием Создание генерируют объекты ролей счетов (в привязке к сделке) и привязывают к ним вновь открытые счета. 
   /// 
   /// 
   /// </tr_details>

   /// <tr_parent>
   /// 000
   /// </tr_parent>

   /// <tr_module>
   /// base
   /// </tr_module>

   /// <tr_proc>
   /// g-trans
   /// </tr_proc>

   /// <tr_DisplayForms>
   /// Нет
   /// </tr_DisplayForms>

   /// <tr_ProgressBar>
   /// Да
   /// </tr_ProgressBar>

   /// <tr_СС_ВыводВФайл>
   /// Да
   /// </tr_СС_ВыводВФайл>

   /// <tr_СС_ВыводНаЭкран>
   /// Да
   /// </tr_СС_ВыводНаЭкран>

   /// <tr_СС_ВыводПрткл>
   /// Нет
   /// </tr_СС_ВыводПрткл>

   // Библиотека функций парсера для счетов договора
   LIBRARY plact.

   // Библиотека функций парсера для работы с датами
   LIBRARY pdate.

   // Библиотека парсера SWIFT
   LIBRARY pswft.

   // Библиотека функций парсера для лицевых и счетов 2-го порядка.
   LIBRARY pacct.

   // Библиотека функций для конверсионных сделок.
   LIBRARY pfx.

   DO BEFORE:
      @__par = PROMPT("logical!character!decimal!character!decimal",
               "Тип сделки!Валюта сделки (840/978/398)!Сумма сделки!" +
                          "Валюта расчета (840/978/398)!Сумма расчета", 
               "Покупка/Продажа!x(3)!>,>>>,>>>,>>9.99!x(3)!>,>>>,>>>,>>9.99",
               "Покупка!840!0!978!0",
               "ВВЕДИТЕ ПАРАМЕТРЫ СДЕЛКИ",50,"!","F1=sb_f1log!!!!");
      
      IF @__par == @__ERROR THEN 0 ELSE (
      
        @TypeOper = ENTRY(1,@__par,"!");
        @CurrFX   = ENTRY(2,@__par,"!");
        @SummFX   = DEC(ENTRY(3,@__par,"!"));
        @CurrRS   = ENTRY(4,@__par,"!");
        @SummRS   = DEC(ENTRY(5,@__par,"!"));
        @__summ1  = _if(@TypeOper, @SummFX, @SummRS);
        @__summ2  = _if(@TypeOper, @SummRS, @SummFX);
      
      //  IF NOT (CAN-DO("840,978,398", @CurrFX)
      //        & CAN-DO("840,978,398", @CurrRS)) THEN
      //    MESSAGE("",)
        @cust-id  = 139690;
        @filial   = ФИЛИАЛ();
        @DetailsA = "Требования по поставке денежных средств НКЦ от " + ДАТА();
        @DetailsL = "Обязательства по поставке денежных средств НКЦ от "
                  + ДАТА();
        @details1 = "Согласно сделке SWAP, заключенной на ЕТС с НКЦ, "
                  + "отражение требований по поставке денежных средств "
                  + "на основании распоряжения от " + ДАТА();
        @details2 = "Согласно сделке SWAP, заключенной на ЕТС с НКЦ, "
                  + "отражение обязательств по поставке денежных средств "
                  + "на основании распоряжения от " + ДАТА()
      ) ENDIF;
   END BEFORE.

   110:
   DO TEMPLATE CLASS acctf ACTION Создание ROLE Счет NO-TRANSACTION:
      /// <tm_AttrOptimized>
      /// Нет
      /// </tm_AttrOptimized>

      /// <tm_PrepareForm>
      /// 1100
      /// </tm_PrepareForm>

      // РЕКВИЗИТ: bal-acct (константа) #1
      @bal-acct = [93901]
      // РЕКВИЗИТ: currency (формула) #2
      @currency = _if(@TypeOper, @CurrFX, @CurrRS)

      // РЕКВИЗИТ: acct-cat (константа) #3
      @acct-cat = [f]
      // РЕКВИЗИТ: cust-cat (константа) #4
      @cust-cat = [Б]
      // РЕКВИЗИТ: cust-id (формула) #5
      @cust-id = @cust-id

      // РЕКВИЗИТ: acct (формула) #6
      @acct =
      DO:
         НОМЕР_СЧЕТА("acctf", @bal-acct(110), @currency(110),
           ДАТА(), @cust-cat(110), @cust-id(110),
           "бббббвввк" + @filial + "ссссссс")
      END.

      // РЕКВИЗИТ: open-date (формула) #7
      @open-date = ДАТА()

      // РЕКВИЗИТ: Details (формула) #8
      @Details = @DetailsA

      // РЕКВИЗИТ: branch-id (формула) #9
      @branch-id = ФИЛИАЛ()

      // РЕКВИЗИТ: side (константа) #10
      @side = [А]
      // РЕКВИЗИТ: rate-type (формула) #11
      @rate-type = _if(@currency=="","","УЧЕТНЫЙ")

      // РЕКВИЗИТ: number (формула) #12
      @number = @acct

      // РЕКВИЗИТ: filial-id (формула) #13
      @filial-id = ФИЛИАЛ()


   END TEMPLATE. // ШАБЛОН:   110  - КОНЕЦ

   120:
   DO TEMPLATE CLASS acctf ACTION Создание ROLE Счет NO-TRANSACTION:
      /// <tm_AttrOptimized>
      /// Нет
      /// </tm_AttrOptimized>

      /// <tm_PrepareForm>
      /// 1100
      /// </tm_PrepareForm>

      // РЕКВИЗИТ: bal-acct (константа) #1
      @bal-acct = [96901]
      // РЕКВИЗИТ: currency (формула) #2
      @currency = _if(@TypeOper, @CurrRS, @CurrFX)

      // РЕКВИЗИТ: acct-cat (константа) #3
      @acct-cat = [f]
      // РЕКВИЗИТ: cust-cat (константа) #4
      @cust-cat = [Б]
      // РЕКВИЗИТ: cust-id (формула) #5
      @cust-id = @cust-id

      // РЕКВИЗИТ: acct (формула) #6
      @acct =
      DO:
         НОМЕР_СЧЕТА("acctf", @bal-acct(120), @currency(120),
           ДАТА(), @cust-cat(120), @cust-id(120),
           "бббббвввк" + @filial + "ссссссс")
      END.

      // РЕКВИЗИТ: open-date (формула) #7
      @open-date = ДАТА()

      // РЕКВИЗИТ: Details (формула) #8
      @Details = @DetailsL

      // РЕКВИЗИТ: branch-id (формула) #9
      @branch-id = ФИЛИАЛ()

      // РЕКВИЗИТ: side (константа) #10
      @side = [П]
      // РЕКВИЗИТ: rate-type (формула) #11
      @rate-type = _if(@currency=="","","УЧЕТНЫЙ")

      // РЕКВИЗИТ: number (формула) #12
      @number = @acct

      // РЕКВИЗИТ: filial-id (формула) #13
      @filial-id = ФИЛИАЛ()


   END TEMPLATE. // ШАБЛОН:   120  - КОНЕЦ

   130:
   DO TEMPLATE CLASS opf ACTION ЭкранныйВвод ROLE Ввод данных:
      /// <tm_AttrOptimized>
      /// Нет
      /// </tm_AttrOptimized>

      // РЕКВИЗИТ: acct-cat (константа) #1
      @acct-cat = [f]
      // РЕКВИЗИТ: doc-type (константа) #2
      @doc-type = [06]
      // РЕКВИЗИТ: doc-date (формула) #3
      @doc-date = ДАТА()

      // РЕКВИЗИТ: ins-date (формула) #4
      @ins-date = ДАТА()

      // РЕКВИЗИТ: op-value-date (формула) #5
      @op-value-date = ДАТА()

      // РЕКВИЗИТ: op-date (формула) #6
      @op-date = ДАТА()

      // РЕКВИЗИТ: due-date (формула) #7
      @due-date = ДАТА()

      // РЕКВИЗИТ: contract-date (формула) #8
      @contract-date = ДАТА()

      // РЕКВИЗИТ: order-pay (константа) #9
      @order-pay = [5]
      // РЕКВИЗИТ: op-status (константа) #10
      @op-status = [√]
      // РЕКВИЗИТ: details (формула) #12
      @details = @details1

      150:
      DO TEMPLATE CLASS op-entry ACTION ЭкранныйВвод ROLE op-entry1:
         // РЕКВИЗИТ: acct-db (формула) #1
         @acct-db =
         DO:
            @acct(110)
         END.

         // РЕКВИЗИТ: currency (формула) #2
         @currency = @currFX

         // РЕКВИЗИТ: amt-cur (формула) #3
         @amt-cur = @SummFX

         // РЕКВИЗИТ: amt-rub (константа) #4
         @amt-rub = []
         // РЕКВИЗИТ: op-date (формула) #5
         @op-date = ДАТА()

         // РЕКВИЗИТ: value-date (формула) #6
         @value-date = ДАТА()

         // РЕКВИЗИТ: op-cod (константа) #7
         @op-cod = [000000]
         // РЕКВИЗИТ: acct-cat (константа) #8
         @acct-cat = [f]
         // РЕКВИЗИТ: op-status (константа) #9
         @op-status = [√]

      END TEMPLATE. // ШАБЛОН:   150  - КОНЕЦ

      160:
      DO TEMPLATE CLASS op-entry ACTION ЭкранныйВвод ROLE op-entry2:
         // РЕКВИЗИТ: acct-cr (формула) #1
         @acct-cr =
         DO:
            @acct(120)
         END.

         // РЕКВИЗИТ: amt-rub (константа) #2
         @amt-rub = []
         // РЕКВИЗИТ: currency (формула) #3
         @currency = @currRS

         // РЕКВИЗИТ: amt-cur (формула) #4
         @amt-cur = @SummRS


      END TEMPLATE. // ШАБЛОН:   160  - КОНЕЦ


   END TEMPLATE. // ШАБЛОН:   130  - КОНЕЦ

   190:
   DO TEMPLATE CLASS opf ACTION Создание ROLE Ввод данных:
      /// <tm_AttrOptimized>
      /// Нет
      /// </tm_AttrOptimized>

      // РЕКВИЗИТ: acct-cat (константа) #1
      @acct-cat = [f]
      // РЕКВИЗИТ: doc-type (константа) #2
      @doc-type = [06]
      // РЕКВИЗИТ: doc-date (формула) #3
      @doc-date = ДАТА()

      // РЕКВИЗИТ: ins-date (формула) #4
      @ins-date = ДАТА()

      // РЕКВИЗИТ: op-value-date (формула) #5
      @op-value-date = ДАТА()

      // РЕКВИЗИТ: op-date (формула) #6
      @op-date = ДАТА()

      // РЕКВИЗИТ: due-date (формула) #7
      @due-date = ДАТА()

      // РЕКВИЗИТ: contract-date (формула) #8
      @contract-date = ДАТА()

      // РЕКВИЗИТ: order-pay (константа) #9
      @order-pay = [5]
      // РЕКВИЗИТ: op-status (константа) #10
      @op-status = [√]
      // РЕКВИЗИТ: doc-num (константа) #11
      @doc-num = []
      // РЕКВИЗИТ: details (формула) #12
      @details = @details1

      200:
      DO TEMPLATE CLASS op-entry ACTION Создание ROLE op-entry:
         // РЕКВИЗИТ: acct-db (формула) #1
         @acct-db = @acct(110)

         // РЕКВИЗИТ: acct-cr (константа) #2
         @acct-cr = [99997810602200010001     @0000]
         // РЕКВИЗИТ: amt-cur (формула) #3
         @amt-cur = _if(@currency(110) == "", DEC(0.00), @__summ1)

         // РЕКВИЗИТ: amt-rub (формула) #4
         @amt-rub =
         DO:
            _if(@currency(110) == "", @__summ1,
                ПЕРЕСЧЕТ(@__summ1,@currency(110),""))
         END.

         // РЕКВИЗИТ: currency (формула) #5
         @currency = @currency(110)

         // РЕКВИЗИТ: value-date (формула) #6
         @value-date = ДАТА()

         // РЕКВИЗИТ: op-cod (константа) #7
         @op-cod = [000000]
         // РЕКВИЗИТ: op-date (формула) #8
         @op-date = ДАТА()

         // РЕКВИЗИТ: acct-cat (формула) #9
         @acct-cat = @acct-cat(110)


      END TEMPLATE. // ШАБЛОН:   200  - КОНЕЦ


   END TEMPLATE. // ШАБЛОН:   190  - КОНЕЦ

   220:
   DO TEMPLATE CLASS opf ACTION Создание ROLE Ввод данных:
      /// <tm_AttrOptimized>
      /// Нет
      /// </tm_AttrOptimized>

      // РЕКВИЗИТ: acct-cat (константа) #1
      @acct-cat = [f]
      // РЕКВИЗИТ: doc-type (константа) #2
      @doc-type = [06]
      // РЕКВИЗИТ: doc-date (формула) #3
      @doc-date = ДАТА()

      // РЕКВИЗИТ: ins-date (формула) #4
      @ins-date = ДАТА()

      // РЕКВИЗИТ: op-value-date (формула) #5
      @op-value-date = ДАТА()

      // РЕКВИЗИТ: op-date (формула) #6
      @op-date = ДАТА()

      // РЕКВИЗИТ: due-date (формула) #7
      @due-date = ДАТА()

      // РЕКВИЗИТ: contract-date (формула) #8
      @contract-date = ДАТА()

      // РЕКВИЗИТ: order-pay (константа) #9
      @order-pay = [5]
      // РЕКВИЗИТ: op-status (константа) #10
      @op-status = [√]
      // РЕКВИЗИТ: doc-num (константа) #11
      @doc-num = []
      // РЕКВИЗИТ: details (формула) #12
      @details = @details2

      230:
      DO TEMPLATE CLASS op-entry ACTION Создание ROLE op-entry:
         // РЕКВИЗИТ: acct-db (константа) #1
         @acct-db = [99996810302200010001     @0000]
         // РЕКВИЗИТ: acct-cr (формула) #2
         @acct-cr = @acct(120)

         // РЕКВИЗИТ: amt-cur (формула) #3
         @amt-cur = _if(@currency(120) == "", DEC(0.00), @__summ2)

         // РЕКВИЗИТ: amt-rub (формула) #4
         @amt-rub =
         DO:
            _if(@currency(120) == "", @__summ2,
                ПЕРЕСЧЕТ(@__summ2,@currency(120),""))
         END.

         // РЕКВИЗИТ: currency (формула) #5
         @currency = @currency(120)

         // РЕКВИЗИТ: value-date (формула) #6
         @value-date = ДАТА()

         // РЕКВИЗИТ: op-cod (константа) #7
         @op-cod = [000000]
         // РЕКВИЗИТ: op-date (формула) #8
         @op-date = ДАТА()

         // РЕКВИЗИТ: acct-cat (формула) #9
         @acct-cat = @acct-cat(120)


      END TEMPLATE. // ШАБЛОН:   230  - КОНЕЦ


   END TEMPLATE. // ШАБЛОН:   220  - КОНЕЦ

   DO AFTER:
      MESSAGE('Обработка успешно завершена.',INFORMATION);
      STATUS('')
   END AFTER.

END TRANSACTION. // ТРАНЗАКЦИЯ FXSW1DAY_VAL - КОНЕЦ 
// ***************************************************************************




