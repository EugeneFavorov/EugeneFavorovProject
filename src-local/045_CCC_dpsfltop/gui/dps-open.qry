/* Возвращет WHERE выражение, полностью заменяющее сформированное. */
FUNCTION SET-WHERE RETURN CHAR (
   INPUT iQryNum  AS INT64,  /* Номер запроса. */
   INPUT iBufName AS CHAR  /* Название буффера. */
):
   IF       iBufName             EQ "op-entry"
      AND   iQryNum              EQ 0
      AND   GetFltVal ('sv-9')   NE 'NO'
      THEN RETURN "WHERE RECID (op-entry) EQ tt-obj.OpEnRecid". 
   RETURN "".
END FUNCTION.

FUNCTION Use-Outer-Join-PackObject RETURN LOGICAL.
   RETURN NOT (   IsBookMarkChange(8)
               OR IsBookMarkChange(10)
               OR IsBookMarkChange(11)
              ) .
END FUNCTION.

FUNCTION Use-Outer-Join-cust-role RETURN LOGICAL.
   RETURN NOT IsBookmarkChange(12).
END FUNCTION.

FUNCTION Use-Outer-Join-dbAcct RETURN LOGICAL.
   RETURN NOT (      IsFieldChange ("sv-1")
               OR    IsFieldChange ("sv-3")
               OR    IsFieldChange ("sv-7")
               OR   (IsFieldChange ("sv-10") AND GetFltVal('SrcClass') NE "acct")
              ).
END FUNCTION.

FUNCTION Use-Outer-Join-crAcct RETURN LOGICAL.
   RETURN NOT (      IsFieldChange ("sv-2")
               OR    IsFieldChange ("sv-4")
               OR    IsFieldChange ("sv-8")
               OR   (IsFieldChange ("sv-10") AND GetFltVal('SrcClass') NE "acct")
              ).
END FUNCTION.

FUNCTION Use-Outer-Join-bTtObj RETURN LOGICAL.
   RETURN NOT (      IsFieldChange ("file-name")
               OR    IsFieldChange ("surrogate"))
               AND   IsFieldChange ("sv-9").
END FUNCTION.

&glob   firstwhere (IF rightview EQ '*'                                           ~
                    THEN ''                                                       ~
                    ELSE 'can-do(""' + rightview + '"",op-entry.op-status) and '  ~
                   ) +                                                            ~
                   (IF GetFltVal('IsEndDte') EQ 'no'                              ~
                    THEN (IF DATE(GetFltVal('op-date1')) EQ DATE(GetFltVal('op-date2')) ~
                          THEN ( ' op-entry.op-date EQ ' +                              ~
                                 (IF GetFltVal('op-date1') EQ ''                        ~
                                  THEN '?'                                              ~
                                  ELSE GetFltVal('op-date1')                            ~
                                 )                                                      ~
                               )                                                        ~
                          ELSE ( ' op-entry.op-date >= ' +                              ~
                                 (IF GetFltVal('op-date1') EQ ''                        ~
                                  THEN '?'                                              ~
                                  ELSE GetFltVal('op-date1')                            ~
                                  ) +                                                   ~
                                 ' and op-entry.op-date <= ' +                          ~
                                 (IF GetFltVal('op-date2') EQ ''                        ~
                                  THEN '?'                                              ~
                                  ELSE GetFltVal('op-date2')                            ~
                                 )                                                      ~
                               )                                                        ~
                         )                                                              ~
                    ELSE 'true'                                                         ~
                   )


/* Данный запрос используется для
** отбор проводок по операции и / или
** отбору проводок документа (Весь документ = "ДА"). */

{qrdef.i
   &buff-list       = "tt-obj op-entry ttRights bTtObj op obj-transaction op-bank op-impexp PackObject Packet Seance Reference cust-role cstrlopentry"
   &need-buff-list  = "tt-obj,op-entry,ttRights,bTtObj,op,obj-transaction,op-bank,op-impexp,PackObject,Packet,Seance,Reference,cust-role,cstrlopentry"
   &Join-list       = "each,each,first,first,first,first,first,first,each,first,first,each,first,first"
   &Outer-join-buff = "bTtObj,obj-transaction,op-bank,op-impexp,PackObject,Packet,Seance,Reference,cust-role,cstrlopentry"
   &fixed-where     = "'|WHERE ' + {&firstwhere} + '
                        |
                        |
                        |OF op-entry
                        |WHERE obj-transaction.op-transaction EQ op.op-transaction
                        |OF op
                        |OF op
                        |WHERE PackObject.file-name EQ ""op-entry"" AND PackObject.Surrogate EQ STRING(op-entry.op) + "","" + STRING(op-entry.op-entry)
                        |WHERE Packet.PacketID      EQ PackObject.PacketID 
                        |WHERE Seance.SeanceID      EQ PackObject.SeanceID
                        |WHERE Reference.PacketID   EQ PackObject.PacketID 
                        |WHERE cust-role.file-name  EQ ""op""
                           AND cust-role.surrogate  EQ STRING(op.op)
                        |WHERE cstrlopentry.file-name  EQ ""op-entry""
                           AND cstrlopentry.surrogate  EQ STRING(op-entry.op) + "","" + STRING(op-entry.op-entry)  '"
   &Fields-Manual   = ",acct-db*acct-cr kau-cr*kau-db user-id acct-cat op-entry,,,op-error,surrogate"
   &Fields-Ignore   = ",op-date,,,acct-cat op-date"
   &Fields-Mandatory = "op-entry"
   &Use-Index        = ",,,,,,op-bank"
   &condition       = "(   IsFieldChange ('file-name')
                        OR IsFieldChange ('surrogate')
                        OR GetFltVal ('sv-9') EQ 'YES')"
}

{qrdef.i
   &buff-list       = "op-entry op obj-transaction op-bank op-impexp PackObject Packet Seance Reference cust-role cstrlopentry dbAcct crAcct ttRights"
   &need-buff-list  = "op-entry,op,obj-transaction,op-bank,op-impexp,PackObject,Packet,Seance,Reference,cust-role,cstrlopentry,dbAcct,crAcct,ttRights"
   &Join-list       = "each,first,first,first,first,each,first,first,each,first,first,first,first,first"
   &Outer-join-buff = "obj-transaction,op-bank,op-impexp,PackObject,Packet,Seance,Reference,cust-role,cstrlopentry,dbAcct,crAcct"
   &fixed-where     = "'WHERE ' + {&firstwhere} + '
                        |OF op-entry
                        |WHERE obj-transaction.op-transaction EQ op.op-transaction
                        |OF op
                        |OF op
                        |WHERE PackObject.file-name EQ ""op-entry"" AND PackObject.Surrogate EQ STRING(op-entry.op) + "","" + STRING(op-entry.op-entry)
                        |WHERE Packet.PacketID      EQ PackObject.PacketID 
                        |WHERE Seance.SeanceID      EQ PackObject.SeanceID
                        |WHERE Reference.PacketID   EQ PackObject.PacketID
                        |WHERE cust-role.file-name  EQ ""op""
                           AND cust-role.surrogate  EQ STRING(op.op) 
                        |WHERE cstrlopentry.file-name  EQ ""op-entry""
                           AND cstrlopentry.surrogate  EQ STRING(op-entry.op) + "","" + STRING(op-entry.op-entry)
                        |OUTER-JOIN WHERE
                               dbAcct.acct            EQ       op-entry.acct-db
                           AND ' + 
                        &IF DEFINED(ORACLE) EQ 0 
                        &THEN 'op-entry.currency      BEGINS   dbAcct.currency'
                        &ELSE '(dbAcct.currency EQ op-entry.currency OR dbAcct.currency EQ """")'
                        &ENDIF   + '
                        |OUTER-JOIN WHERE
                               crAcct.acct            EQ       op-entry.acct-cr
                           AND ' + 
                        &IF DEFINED(ORACLE) EQ 0 
                        &THEN 'op-entry.currency      BEGINS   crAcct.currency'
                        &ELSE '(crAcct.currency EQ op-entry.currency OR crAcct.currency EQ """")'
                        &ENDIF   + '
                      | '"
  &Fields-Manual   = "acct-db*acct-cr kau-cr*kau-db user-id acct-cat op-entry,op-error,surrogate"
  &Fields-Ignore   = "op-date,acct-cat op-date"
  &Fields-Mandatory = "op-entry"
  &Use-Index        = ",,,op-bank"
  &condition       = "YES"
}

/* Сбрасывается dynqr.PermBuf для того чтобы при фильтрации по счету
   отключалась фильтрация по филиалу, т.к. у проводок счета всегда
   филиал такой же как и у счета, а при появлении фильтра по счета
   и фильтра по acct-db и acct-cr в запросе подхватывается индекс
   filial-id вместо мультииндекса acct-db + acct-cr */
DEFINE VAR mFndOpEntryCntToDrop AS INT64 NO-UNDO.
IF  shMode
AND (   (INDEX(GetFltVal("acct-db"),"@")      > 0
         AND IsAttrFld("acct-db","sensitive") = "no")
     OR (INDEX(GetFltVal("acct-cr"),"@")      > 0
         AND IsAttrFld("acct-cr","sensitive") = "no"))
THEN DO:
   _drop_permbuf:
   FOR EACH dynqr WHERE dynqr.PermBuf = "op-entry":
      DO mFndOpEntryCntToDrop = 1 TO NUM-ENTRIES(dynqr.buff-list):
         IF dynqr.hdl-list[mFndOpEntryCntToDrop]:NAME = dynqr.PermBuf THEN DO:
            dynqr.PermBuf = "".
            NEXT _drop_permbuf.
         END.
      END.
   END.
END.

/* Только для проводок. */
PROCEDURE PostSelectQuery:

   /* Отображать все проводки документа. */
   IF GetFltVal ("sv-9") EQ "YES"
      THEN RUN FillTempRecidOp.
      
   /* Сбор проводок по транзакции. */
   IF    IsFieldChange ("file-name")
      OR IsFieldChange ("surrogate")
   THEN RUN FillTTObj.

   /* Устранение дублирования */
   mIsExDblPO = (    (Use-Outer-Join-PackObject() = NO)
                 AND (GetFltVal("avail_seance")  <> "YES")).
   RUN SetFltFieldList ("mExDblPO", STRING(mIsExDblPO)).
   RUN SetFltField     ("mExDblPO", STRING(mIsExDblPO)).
   {empty ttExDblPO}

   RUN FrameSetting.
                        /* Очистим временную таблицу с правами на объекты подчин. */
   RUN ResetTTRights.
                        /* Удалим константу, чтобы перечитать список подчиненных */
   &UNDEFINE FirstCheckUser
   {checkusr}           /* Перечитываем переменные */
   {brwsubright.str }   /* Перечитываем временную таблицу */

                        /* Включены ли ограничения на чтение групп счетов */
   mAcctGrOn = UserAcctGroupLimitsEnabled ('r', USERID("bisquit")).
                              /* Фильтрация по группам только для админов */
/*   IF IsUserAdm(USERID("bisquit")) THEN*/
      RUN FillttOpGroupAcct.
   RETURN.
END PROCEDURE.

/* Отобразить все проводки,если хоть одна подходит под условие фильтра. */
PROCEDURE FillTempRecidOp.
   DEF BUFFER AllOpEntry FOR op-entry. /* Локализация буфера. */
   DEFINE VARIABLE curop LIKE op.op NO-UNDO.

                        /* Обнуление данных. */
   EMPTY TEMP-TABLE tt-obj.
                        /* Поиск последнего запроса. */
   FIND FIRST dynqr WHERE
              dynqr.q-num EQ 1
   NO-ERROR.
   IF AVAIL dynqr THEN
   DO:
      curop = ?.
      {qropen.i &nosort}
      {for_dqry.i h_query}
         IF curop = op-entry.op 
         THEN h_query:GET-NEXT().
         ELSE curop = op-entry.op.

         FOR EACH AllOpEntry WHERE 
                  AllOpEntry.op EQ op-entry.op
         NO-LOCK:
            FIND FIRST tt-obj WHERE 
                       tt-obj.OpEnRecid  EQ RECID (AllOpEntry)
            NO-LOCK NO-ERROR.
            IF NOT AVAIL tt-obj
            THEN DO:
               CREATE tt-obj.
               ASSIGN
                  tt-obj.OpEnRecid =  RECID(AllOpEntry)
                  tt-obj.op        =  ?
               .
            END.
         END.
      END.
   END.
   RETURN.
END PROCEDURE.

/* Заполнение временной таблицы ROWID'ов счетов при фильтрации по группам доступа */
PROCEDURE FillttOpGroupAcct PRIVATE.
   DEF VAR vHQry         AS HANDLE NO-UNDO.
   DEF VAR vHBufLinks    AS HANDLE NO-UNDO.
   DEF VAR vHBuf         AS HANDLE NO-UNDO.
   DEF VAR vFltGroupList AS CHAR   NO-UNDO.
   DEF VAR vFltGroupType AS CHAR   NO-UNDO.
   DEF VAR vGroupList    AS CHAR   NO-UNDO.
   DEF VAR vi            AS INT64  NO-UNDO.
   DEF VAR vOK           AS LOG    NO-UNDO.

   DEF BUFFER flt-attr FOR flt-attr.

   EMPTY TEMP-TABLE ttOpGroupAcct.
   EMPTY TEMP-TABLE LocalTmpObj.
                        /* Восстанавливаем фильтрацию про временной таблице, заданную 
                        ** при запуске браузера, или сбрасываем ее вообще если при запуске ее не было */
   RUN SetFltField ("UseTmpObjInQuery",STRING (mHTmpObj)).
                        /* Если заданы группы для фильтрации */
   IF GetFltVal ("GroupList") NE "*" THEN
   DO:
      ASSIGN
         vFltGroupList = GetFltVal("GroupList")     /* список групп счетов */
         vFltGroupType = GetFltVal("GroupFltType"). /* способ фильтрации по группам */

      CREATE QUERY vHQry.
      CREATE BUFFER vHBufLinks FOR TABLE "links".
      CREATE BUFFER vHBuf      FOR TABLE "op-entry".
      vHQry:SET-BUFFERS(vHBufLinks, vHBuf).
      
      vHQry:QUERY-PREPARE("FOR EACH links WHERE links.link-id   EQ "  + STRING(GetXLinkID("acct","acct-group")) + 
                                          " AND " + DYNAMIC-FUNCTION ("GetDynWhr" IN h_dynqr, "",
                                                    "links.target-id",
                                                    GetFltVal ("GroupList") + CHR (1) + CHR (1), "CHARACTER")   +
                          " NO-LOCK," +
                          " EACH op-entry WHERE op-entry.op-date GE " + GetFltVal('op-date1') +
                          " AND op-entry.op-date LE " + GetFltVal('op-date2') +
                          " AND op-entry.acct-db EQ ENTRY(1,links.source-id) " +
                          " OR op-entry.op-date GE " + GetFltVal('op-date1') +
                          " AND op-entry.op-date LE " + GetFltVal('op-date2') +
                          " AND op-entry.acct-cr EQ ENTRY(1,links.source-id) " +
                          " NO-LOCK").
                         
/*      vHQry:QUERY-PREPARE("FOR EACH links WHERE links.link-id   EQ "  + STRING(GetXLinkID("acct","acct-group")) +*/
/*                                          " AND " + DYNAMIC-FUNCTION ("GetDynWhr" IN h_dynqr, "",                */
/*                                                    "links.target-id",                                           */
/*                                                    GetFltVal ("GroupList") + CHR (1) + CHR (1), "CHARACTER")   +*/
/*                         " NO-LOCK," +                                                                           */
/*                          "EACH op-entry WHERE op-entry.acct-db     EQ ENTRY (1,links.source-id) " +             */
/*                                          " OR op-entry.acct-cr     EQ ENTRY (1,links.source-id) NO-LOCK").      */
      
/*MESSAGE vHQry:PREPARE-STRING*/
/*VIEW-AS ALERT-BOX.          */
      
      vHQry:QUERY-OPEN().
      vHQry:GET-FIRST().
      DO WHILE NOT vHQry:QUERY-OFF-END:
         IF NOT CAN-FIND (FIRST ttOpGroupAcct WHERE ttOpGroupAcct.id EQ vHBuf:RECID) THEN
         DO:
                              /* "Отбирать счета принадлежащие: (X)Только указанным группам" -
                              ** Все группы счета принадлежат списку */
            IF vFltGroupType EQ "all" THEN
            DO:
               vGroupList = GetLinks ("acct",vHBufLinks::source-id,"S","acct-group",",",?).
               GRLST:
               DO vi = 1 TO NUM-ENTRIES(vGroupList):
                  IF NOT CAN-DO(vFltGroupList, ENTRY (vi,vGroupList)) THEN
                  DO:
                     vGroupList = ?.
                     LEAVE GRLST.
                  END.
               END.
            END.

            IF    vGroupList    NE ?
               OR vFltGroupType NE "all"
            THEN DO:
               CREATE ttOpGroupAcct.
               ASSIGN ttOpGroupAcct.id = vHBuf:RECID.
            END.
         END.
         vHQry:GET-NEXT().
      END.
      vHQry:QUERY-CLOSE().
      DELETE OBJECT vHQry      NO-ERROR.
      DELETE OBJECT vHBufLinks NO-ERROR.
      DELETE OBJECT vHBuf      NO-ERROR.

      IF mFltTmpObj THEN
         vHBuf = mHTmpObj:DEFAULT-BUFFER-HANDLE.
                        /* Перекладываем идентификаторы записей в локальную временную 
                        ** таблицу LocalTmpObj, по которой будем осуществлять фильтрацию,
                        ** с учетом того, что уже может быть включена фильтрация по TmpObj извне */
      FOR EACH ttOpGroupAcct:
                        /* Если фильтрация по TmpObj включена при запуске браузера,
                        ** то собираем только записи из ttOpGroupAcct, которые есть в TmpObj,
                        ** т.е. пересечение ttOpGroupAcct и TmpObj */
         IF mFltTmpObj THEN
            vOK = vHBuf:FIND-FIRST ("WHERE " + mHTmpObj:NAME + ".rid EQ " + STRING (ttOpGroupAcct.id), NO-LOCK) NO-ERROR.
         ELSE vOK = YES.
         IF NOT vOK THEN NEXT.

         CREATE LocalTmpObj.
         ASSIGN LocalTmpObj.rid = ttOpGroupAcct.id.
      END.
      DELETE OBJECT vHBuf NO-ERROR.

                        /* Устанавливаем фильтрацию по временной таблице LocalTmpObj */
      FIND FIRST flt-attr WHERE
         flt-attr.attr-code EQ "UseTmpObjInQuery"
      NO-ERROR.
      IF NOT AVAIL flt-attr THEN
      DO:
         CREATE flt-attr.
         ASSIGN
            flt-attr.attr-code      = "UseTmpObjInQuery"
            flt-attr.attr-hidden    = YES
            flt-attr.attr-sensitive = NO
            flt-attr.attr-initial   = "*"
         .
      END.
      flt-attr.attr-code-value = STRING (mLocalTmpObjHand).
   END.
   RETURN.
END PROCEDURE.


