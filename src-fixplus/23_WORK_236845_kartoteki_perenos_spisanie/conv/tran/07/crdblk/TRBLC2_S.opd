[OpKindList 4.1d] // Экспорт данных произвел I0400SGI 22/03/2016 14:12:59 БД "-db /home2/bis/quit41d/db/bisquit,-ld bisquit,-L 200000,-n 500,-B 8000,-omsize 1400,-spin 10000,-U qbis,-P,-n 500"
// ***************************************************************************
TRBLC2_S:
DO TRANSACTION EXECUTABLE:
   /// <tr_package>
   /// 07.CrdBlk.TRBLC2_S
   /// </tr_package>

   /// <tr_name-opkind>
   /// Списание документов с КБС или перенос в К2 Доработанная
   /// </tr_name-opkind>

   /// <tr_parent>
   /// CrdBlk
   /// </tr_parent>

   /// <tr_module>
   /// BASE
   /// </tr_module>

   /// <tr_proc>
   /// g-trans
   /// </tr_proc>

   /// <tr_DisplayForms>
   /// Нет
   /// </tr_DisplayForms>

   /// <tr_NoBlockMsg>
   /// Да
   /// </tr_NoBlockMsg>

   /// <tr_ProgressBar>
   /// Да
   /// </tr_ProgressBar>

   /// <tr_РучВводНР>
   /// Да
   /// </tr_РучВводНР>

   /// <tr_СС_АвтоОтвет>
   /// core20=Продолжить,core21=Поставить на картотеку 2,core23=Продолжить,core25=Продолжить,core54=Продолжить,core55=Поставить на картотеку КартБлСч,core60=no
   /// </tr_СС_АвтоОтвет>

   /// <tr_СС_ВыводНаЭкран>
   /// Нет
   /// </tr_СС_ВыводНаЭкран>

   // Библиотека функций парсера для лицевых и счетов 2-го порядка.
   LIBRARY pacct.

   // Библиотека функций для работы с картотеками.
   LIBRARY pcrd.

   // Библиотека функций парсера для документов
   LIBRARY pop.

   DO BEFORE:
      @pick-value = RUN('tr_cblc2','',ДА);
      
      if @pick-value == ?
         then break(1);
         else 1;
      endif;
      
      IF NUM-ENTRIES(@pick-value,",") <> 4 
         THEN message("Ошибка получения параметров из процедуры!", -1);
              BREAK(1);
         ELSE
              @iCrtacct = ENTRY(1,@pick-value,",");  // это счет КБС 90901
              @iblAcct = ENTRY(2,@pick-value,",");   // это счет К2 90902
              @iCurrency = ENTRY(3,@pick-value,","); // это валюта счета КБС 
              @iRegimAuto = no;                      // режим списания
              @iOpKind = '_BLC2_2S';              
              @iAcct   = ENTRY(4,@pick-value,",");   // заблокированный Р/С
      
              @iBlockSummArest = БлокСумма(@iAcct,@iCurrency,ДАТА(),"-1");
              @iBlockSumm = БлокСумма(@iAcct,@iCurrency,ДАТА(),"*");
              @Ost = ДОСТ_ОСТАТОК(@iAcct,@iCurrency,дата(),дата(),
                                  настройка("СтандТр","AccessStatus","П"),                                     "П","cli-pos",НЕТ,"*");
              @iMaxOrderPay = "0"; 
              @LstBlockArest = БЛОК_СЧ_ОП(@iAcct,@iCurrency,"-1");
      ENDIF;
   END BEFORE.

   DO AFTER:
      IF CAN-DO(@LstBlockArest,"БлокДб") || CAN-DO(@LstBlockArest,"Блок")THEN message("Списание невозможно: Счет " + @iAcct + " арестован",warning);          
      ELSE 
      (if (mod(dec(@ost)) <= mod(dec(@iblocksummarest))) &
         (dec(@iblocksummarest) <> dec(0))
         then message("Списание невозможно: блокированная сумма равна или превышает доступный остаток по счету!",warning);
              break();
         else
      //       (if neg(dec(@ost)) > dec(0) 
      //           then 
      ТРАНЗАКЦИЯ('_BL_SL1S');                    
      //           else ТРАНЗАКЦИЯ('_BL_SLS');                    
      //        endif);                                            
      endif);
      ENDIF;
      //ТРАНЗАКЦИЯ('_BL_SL1S');
      //ТРАНЗАКЦИЯ('_BL_SLS');
   END AFTER.

END TRANSACTION. // ТРАНЗАКЦИЯ TRBLC2_S - КОНЕЦ 
// ***************************************************************************




