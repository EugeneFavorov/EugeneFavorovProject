/* pda
   Проверочный отчет
*/

{globals.i}
{tmprecid.def}
{sh-defs.i}
{ksh-defs.i NEW}
{intrface.get xclass}
{intrface.get comm}
{param-dog.p}

/* Временная таблица для отчета */
DEFINE TEMP-TABLE ttReportpdg NO-UNDO
   FIELD since       AS DATE LABEL "Срок оплаты" /* Дата пересчета договора */
   FIELD param_id    AS CHAR /* Идентификатор параметра */
   FIELD param_value AS DEC  FORMAT "->>>>>>>>9.99" LABEL "Сумма" /* Значение параметра */
   FIELD name-par    AS CHAR LABEL "Наименование параметра" /* наименование параметра (параметров). Если параметров много, то выводим наименования параметров через "," */
.

/*Функция, возвращающая количество рабочих дней между двумя указанными датами.*/
FUNCTION NumWorkday RETURN INT64 (INPUT in-date-from AS DATE,INPUT in-date-to AS DATE).
  DEF VAR vDate AS DATE  NO-UNDO.
  DEF VAR i     AS INT64 NO-UNDO.
  DO vDate = in-date-from TO in-date-to:
    IF NOT HOLIDAY(vDate) THEN i = i + 1.
  END.
  RETURN i.
END FUNCTION.

function calcppdg returns decimal:
   
def var ipCountTypeChar as char no-undo.
ipCountTypeChar = "0+2+7+8+233+9+10+12+18+26+82+210+16+13+14+15+48+248+29+229+519+509+530+373+777+4".

DEFINE VARIABLE vCountInt   as INT64    INIT 0 no-undo. /* Счетчик */
DEFINE VARIABLE vCustName   AS CHAR     NO-UNDO.   /* Наименование клиента */
DEFINE VARIABLE out_Result  AS DECIMAL  NO-UNDO.
DEFINE VARIABLE vDbOpDec    AS DECIMAL  NO-UNDO.
DEFINE VARIABLE vCrOpDec    AS DECIMAL  NO-UNDO.
DEFINE VARIABLE mSum-prosr  AS DECIMAL  label "" init 0  NO-UNDO.
DEFINE VARIABLE mSum-all    AS DECIMAL  label "" INIT 0  NO-UNDO.
DEFINE VARIABLE mSum-annu   AS DECIMAL  label "" INIT 0  NO-UNDO.
DEFINE VARIABLE mdate       AS DATE     NO-UNDO.
DEFINE VARIABLE mRs-acct    AS CHAR     NO-UNDO.   /* Расчетный счет */
DEFINE VARIABLE mVkl-acct   AS CHAR     NO-UNDO.   /* Расчетный счет */
DEFINE VARIABLE e-date      AS DATE     LABEL "" NO-UNDO.
DEFINE VARIABLE mRs-ost     AS DECIMAL  label "" INIT 0  NO-UNDO.
DEFINE VARIABLE mVkl-ost    AS DECIMAL  label "" INIT 0  NO-UNDO.
DEFINE VARIABLE i           AS INTEGER  NO-UNDO.
DEFINE VARIABLE iPar        AS CHAR     NO-UNDO.
DEFINE VARIABLE mSumFullComm AS DECIMAL INIT 0  NO-UNDO.
DEFINE VARIABLE mSumComm    AS DECIMAL  INIT 0  NO-UNDO.
DEFINE VARIABLE firstDate   AS DATE     NO-UNDO.
DEFINE VARIABLE not0        AS LOGICAL  NO-UNDO.

DEFINE BUFFER   term-obl    FOR term-obl.
DEFINE BUFFER   bterm-obl   FOR term-obl.
DEFINE BUFFER   bLA         FOR loan-acct.

not0 = TRUE.
{empty ttReportpdg}
   /* Бегущая строка - индикатор работы процесса */
/*      {move-bar.i vLnCountInt vLnTotalInt}
*/
   mdate = loan.since.
   mSum-all = 0.
   mSumComm = 0.
   mSumFullComm = 0.
   mSum-prosr = 0.
   out_result = 0.
   mSum-annu = 0.
   DO vCountInt = 1 TO NUM-ENTRIES (ipCountTypeChar,"+"):

      /* Получение значения параметра */
      iPar = ENTRY(vCountInt, ipCountTypeChar, "+").
      RUN PRM(loan.Contract,          /* Назначение договора */
            loan.Cont-Code,         /* Номер договора */
            INTEGER(iPar),          /* Код параметра  */
            loan.since,             /* Значение параметра на дату пересчета договора */
            TRUE,                   /* считать % */
            OUTPUT out_result).     /* Значение параметра без loan.interest[i] */


      CREATE ttReportpdg.
      ASSIGN
         ttReportpdg.since       = loan.since
         ttReportpdg.param_id    = iPar
         ttReportpdg.param_value = out_result
         .

      /* Получим наименование параметра по справочнику */
      FIND FIRST loan-par
         WHERE loan-par.amt-id EQ INTEGER(iPar)
         NO-LOCK NO-ERROR.
      IF AVAIL loan-par
      THEN ttReportpdg.name-par = ttReportpdg.param_id + " - " + loan-par.NAME.

      /* Корректировка 4 параметра */
      IF (iPar EQ "4")
      THEN DO:
         DO i = 32 TO 35:
            RUN PRM(loan.Contract, loan.Cont-Code, i, loan.since, TRUE, OUTPUT out_result).
            ttReportpdg.param_value = ttReportpdg.param_value + out_result.
         END.
      END.

      /* Корректировка 29 параметра */
      IF (iPar EQ "29")
      THEN DO:
         FOR EACH loan-int OF loan
            WHERE (loan-int.mdate   EQ loan.since)
            NO-LOCK,
         FIRST chowhe
            WHERE (chowhe.id-d      EQ loan-int.id-d)
              AND (chowhe.id-k      EQ loan-int.id-k)
              AND (chowhe.id-op     EQ 83)
            NO-LOCK:

            ttReportpdg.param_value = ttReportpdg.param_value - loan-int.amt-rub.
         END.
      END.
      
      /* Корректировка 229 параметра */
      IF (iPar EQ "229")
      THEN DO:
         FOR EACH loan-int OF loan
            WHERE (loan-int.mdate   EQ loan.since)
            NO-LOCK,
         FIRST chowhe
            WHERE (chowhe.id-d      EQ loan-int.id-d)
              AND (chowhe.id-k      EQ loan-int.id-k)
              AND (chowhe.id-op     EQ 283)
            NO-LOCK:

            ttReportpdg.param_value = ttReportpdg.param_value - loan-int.amt-rub.
         END.
      END.
   END. /* DO vCountInt = 1 TO ... */

   mSumComm = 0.
   FIND FIRST term-obl
      WHERE term-obl.contract  EQ loan.contract
        AND term-obl.cont-code EQ loan.cont-code
        AND term-obl.idnt      EQ 10
        NO-LOCK NO-ERROR.
   IF AVAIL term-obl
   THEN DO:
      mSumFullComm = term-obl.amt-rub.

      RUN RE_FIRST_TERM_OBL IN h_loan (loan.contract, loan.cont-code, 3, loan.open-date, BUFFER term-obl).
      RUN RE_FIRST_TERM_OBL IN h_loan (loan.contract, loan.cont-code, 1, loan.open-date, BUFFER bterm-obl).

      IF AVAIL term-obl AND
         term-obl.dsc-beg-date <=
         (IF AVAIL bterm-obl THEN bterm-obl.dsc-beg-date ELSE term-obl.dsc-beg-date)
      THEN firstDate   = term-obl.dsc-beg-date.

      IF AVAIL bterm-obl AND
         bterm-obl.dsc-beg-date <=
            (IF AVAIL term-obl THEN term-obl.dsc-beg-date ELSE bterm-obl.dsc-beg-date)
      THEN firstDate   = bterm-obl.dsc-beg-date.

      IF firstDate > loan.since
      THEN DO:
         mSumComm = (mSumFullComm / (firstDate - loan.open-date)) * (loan.since - loan.open-date).
         FOR EACH loan-int OF loan
            WHERE loan-int.id-k = 377
              AND loan-int.mdate <= loan.since
              NO-LOCK:
            
            mSumComm = mSumComm - loan-int.amt-rub.
         END.
         not0 = FALSE.
      END.
   END.

   FIND FIRST loan-acct OF loan
      WHERE loan-acct.acct-type = 'КредБудКом'
      NO-LOCK NO-ERROR.
   IF AVAIL loan-acct
   THEN DO:
      RUN acct-pos IN h_base (loan-acct.acct, loan-acct.currency, mdate, mdate, ?).
      IF not0 OR mSumComm > ABSOLUTE(sh-bal)
      THEN mSumComm = ABSOLUTE(sh-bal).

      CREATE ttReportpdg.
      ASSIGN
         ttReportpdg.since        = loan.since
         ttReportpdg.param_id     = "777"
         ttReportpdg.param_value  = mSumComm
        /*ttReportpdg.name-par   = " Комиссия со счета " + ENTRY(1, acct.acct, "@") + " - "*/
                          /* 1234567890123456789012345678901234567890 */
         ttReportpdg.name-par     = " Платеж процентов за первый процентный период"
         .
   END.

   RUN RE_L_ACCT(loan.Contract,loan.Cont-Code,"КредРасч",loan.since,BUFFER bLA).
   IF AVAILABLE bLA
   THEN DO:
      mRs-acct = "   Текущий счет " + ENTRY(1, bLA.acct, "@").
      RUN acct-pos IN h_base (bLA.acct, loan.currency, mdate, mdate, ?).
      mRs-ost = ABSOLUTE(sh-bal).
   END.
   ELSE mRs-acct = "   Расчетный счет НЕ ПРИВЯЗАН К ДОГОВОРУ".

   RUN RE_L_ACCT(loan.Contract,loan.Cont-Code,"КредРасч1",loan.since,BUFFER bLA).
   IF AVAILABLE bLA
   THEN DO:
      mVkl-acct = "Обязательства заемщика вклад " + ENTRY(1, bLA.acct, "@").
      RUN acct-pos IN h_base (bLA.acct, loan.currency, mdate, mdate, ?).
      mVkl-ost = ABSOLUTE(sh-bal).
   END.
   ELSE mVkl-acct = "   Вклад НЕ ПРИВЯЗАН К ДОГОВОРУ".

   FOR EACH ttReportpdg
      SHARE-LOCK
      BY INTEGER(ttReportpdg.param_id): /* 5 */

      IF INTEGER(ttReportpdg.param_id) LT 555
      THEN mSum-prosr = mSum-prosr + ttReportpdg.param_value.

      IF INTEGER(ttReportpdg.param_id) EQ 555
      THEN DO:
         ttReportpdg.param_value = mSum-prosr.
       /*   PUT UNFORMATTED FILL("-",71). */
      END.
      ELSE mSum-all = mSum-all + ttReportpdg.param_value.
     
   END.  /* 5 */

   return mSum-all.
end.

DEFINE BUFFER bsigns FOR signs.

DEFINE TEMP-TABLE otch
      FIELD cont_code    AS CHAR           /* номер КД */
      FIELD fio          AS CHAR           /* ФИО заемщика */
      FIELD tel          AS CHAR           /* телефон заемщика */
      FIELD plan_date    AS DATE           /* ближайшая плановая дата */
      FIELD since        AS DATE           /* дата пересчета */
      FIELD rateperc     AS DECIMAL        /* текущая ставка %%*/
      FIELD cred-date    AS CHAR           /* день гашения од */ 
      FIELD annuit       AS DECIMAL        /* размер аннуитета */
      FIELD acct408      AS CHAR           /* номер счета 408 КредРасч */ 
      FIELD ost408       AS DECIMAL        /* остаток 408 КредРасч */
      FIELD acct408_s    AS CHAR           /* номер счета 408 КредРасч1 */ 
      FIELD ost408_s     AS DECIMAL        /* остаток 408 КредРасч1 */
      FIELD ostRasch1    AS DECIMAL        /* остаток */
      FIELD ost455       AS DECIMAL        /* остаток 455 */
      FIELD ost458       AS DECIMAL        /* остаток 458 */
      FIELD ost459       AS DECIMAL        /* остаток 458 */
      FIELD ost91604     AS DECIMAL        /* остаток 458 */
      FIELD ost91604Pr   AS DECIMAL        /* остаток 458 */
      FIELD ost91315     AS DECIMAL        /* остаток 91315 */
      FIELD ost91312     AS DECIMAL        /* остаток 91312 */
      FIELD ost913121    AS DECIMAL        /* остаток 91312 */
      FIELD ost47427     AS DECIMAL        /* остаток 47427 */
      FIELD acct90909    AS CHAR           /* номер счета 90909 */  
      FIELD ost90909     AS DECIMAL        /* остаток 90909 */
      FIELD acct90909_s  AS CHAR           /* номер счета 90909 */  
      FIELD ost90909_s   AS DECIMAL        /* остаток 90909 */
      FIELD acct47401    AS CHAR           /* номер счета 47401 */  
      FIELD priznak      AS CHAR           /* ДР priznak */  
      FIELD sud          AS CHAR           /* ДР sud */  
      FIELD acct60323    AS CHAR           /* номер счета 60323 */ 
      FIELD ost60323     AS DECIMAL        /* остаток 60323 */
      FIELD opendate     AS DATE
      FIELD DatePodZay   AS CHAR           /* Дата подачи заявления */   
      FIELD DateTimeIn   AS CHAR           /* Время ввода параметров ДГ */   
      FIELD DateDG       AS CHAR           /* Дата досрочного гашения */
      FIELD SummDosrG    AS CHAR           /* Сумма досрочного гашения */
      FIELD TypeDosrG    AS CHAR           /* Тип досрочного гашения */
      FIELD TypeDosrG2   AS CHAR           /* После ДГ уменьшить */
      FIELD Perechisl    AS CHAR           /* Перечисление */
      FIELD chdg30       AS CHAR           /* ЧДГ до 30 дней с выдачи */
      FIELD DateIspDG    AS CHAR           /* Дата исполнения ДГ */
      FIELD IspDG        AS CHAR           /* Исполнить ПДГ/ЧДГ */
      FIELD PerDateDG    AS CHAR           /* Перенос Даты исполнения ДГ */
      FIELD Spis90909    AS CHAR           /* Списание заявлений с ВБ (сч. 90909) */
      FIELD sum-all      AS DECIMAL        /* Общая задолженность по договору */
      INDEX cont_code cont_code       
   .


{empty otch}

def var nameCl as char no-undo.
def var telCl as char no-undo.
def var plan_date as date no-undo.
def var annuit as decimal no-undo.
def var acct408 as char no-undo.
def var ost408_s as decimal no-undo.
def var acct408_s as char no-undo.
def var ost408 as decimal no-undo.
def var ostRasch1 as decimal no-undo.
def var ost455 as decimal no-undo.
def var ost458 as decimal no-undo.
def var ost459 as decimal no-undo.
def var ost91604 as decimal no-undo.
def var ost91604Pr as decimal no-undo.
def var ost91315 as decimal no-undo.
def var ost91312 as decimal no-undo.
def var ost913121 as decimal no-undo.
def var ost47427 as decimal no-undo.
def var ost90909 as decimal no-undo.
def var acct90909 as char no-undo.
def var ost90909_s as decimal no-undo.
def var acct90909_s as char no-undo.
def var acct47401 as char no-undo.
def var mcommrate as decimal no-undo.
def var mcred-date as char no-undo.
def var ost60323 as decimal no-undo.
def var acct60323 as char no-undo.

def var opendate as date no-undo.
def var vDateIspDG as char no-undo.
def var vPerDateDG as char no-undo.
def var vDateDG as char no-undo.
def var vDatePodZay as char no-undo.
DEF VAR fname AS CHAR NO-UNDO.
DEF VAR vContCode AS CHAR NO-UNDO.
DEF VAR fstr AS CHAR INIT '' NO-UNDO.
DEF NEW SHARED STREAM vvs.
 
define var vCountInt    as INT64 no-undo. /* Счетчик */
DEFINE VARIABLE mSum-all AS DECIMAL NO-UNDO.
def var out_result as decimal no-undo.
def var ipCountTypeChar as char no-undo. /* Алгоритм расчета ведомости */
ipCountTypeChar =   '0+4+7+8+32+33+34+35+233+9+10+12+18+26+82+210+16+13+14+15+48+248+29+229+519+509+530+373+777'.
 
 {getdate.i}

FOR EACH bsigns
   WHERE bsigns.file-name   EQ "loan"
     AND bsigns.code        EQ "dg_summ_dosr_g"
     AND bsigns.xattr-value NE ?
   NO-LOCK,
   /* находим КД */
   FIRST loan
   WHERE loan.contract  EQ ENTRY(1, bsigns.surrogate)
    AND  loan.cont-code EQ ENTRY(2, bsigns.surrogate)
NO-LOCK:

/* По отмеченным клиентам */
/* FOR EACH tmprecid NO-LOCK,
   FIRST loan WHERE RECID(loan) = tmprecid.id NO-LOCK: */

      if loan.since <> end-date then do:

      RUN l-calc2.p ("Кредит",       /* Назначение договора. */
               loan.cont-code,      /* Номер договора. */
               end-date,   /* Окончание договора + день для выполнения автом. */
               FALSE,               /* включать/не включать пересчет течений договора */
               TRUE).               /* выводить/ не выводить протокол на экран */
      end.
   mSum-all = 0.
/*   DO vCountInt = 1 TO NUM-ENTRIES (ipCountTypeChar,"+"): /* 4 */
         
   /* Получение значения параметра */
   RUN PRM(
      loan.Contract,            /* Назначение договора */
      loan.Cont-Code,            /* Номер договора */
      INTEGER(ENTRY(vCountInt,ipCountTypeChar,"+")),        /* Код параметра  */
      loan.since,                /* Значение параметра на дату состояния договора */
      TRUE,                   /* считать % */
      OUTPUT out_result).    /* Значение параметра без loan.interest[i] */

      mSum-all = mSum-all + out_result.
    end.
*/
mSum-all = calcppdg().

   RUN GetName(INPUT loan.cust-cat, INPUT loan.cust-id, OUTPUT nameCl).
   RUN GetTel(INPUT loan.cust-cat, INPUT loan.cust-id, OUTPUT telCl).
   mcred-date = "".
   
   opendate = loan.open-date.
   find first loan-int where loan-int.cont-code = loan.cont-code 
         and loan-int.contract = 'Кредит'
         and loan-int.id-k = 3
         and loan-int.id-d = 0
         and loan-int.mdate >= loan.open-date
         and loan-int.amt-rub <> 0
         no-lock no-error.
   if avail loan-int then opendate = loan-int.mdate.
   
   plan_date = DATE("01.01.1970"). 
   /* ПЛАНОВОЕ ПОГАШЕНИЕ ССУДЫ */
   FOR EACH term-obl WHERE /*term-obl.amt-rub <> 0 AND */
         term-obl.contract = loan.contract
      AND term-obl.cont-code = loan.cont-code
      AND term-obl.idnt = 3
      AND term-obl.end-date <> ?
      AND term-obl.end-date >= end-date  NO-LOCK
      BY term-obl.end-date:
         plan_date = term-obl.end-date.
         LEAVE.
   END.
   /* ПЛАТЕЖЕЙ ПО ПРОЦЕНТАМ */
   FOR EACH term-obl WHERE /*term-obl.amt-rub <> 0 AND */
         term-obl.contract = 'Кредит'
      AND term-obl.cont-code = loan.cont-code
      AND term-obl.idnt = 1
   AND term-obl.end-date <> ?
      AND term-obl.end-date >= end-date NO-LOCK
      BY term-obl.end-date:
         IF plan_date EQ DATE("01.01.1970") THEN
           plan_date = term-obl.end-date.
         ELSE
           plan_date = MIN(term-obl.end-date,plan_date).
        LEAVE.
   END.

   annuit = 0.
   FIND LAST loan-cond WHERE loan-cond.contract = loan.contract
      AND loan-cond.cont-code = loan.cont-code
      AND loan-cond.since <= end-date NO-LOCK NO-ERROR.
      IF AVAIL loan-cond THEN DO:
         FIND FIRST signs WHERE signs.file-name = 'loan-cond'
            AND signs.code = 'аннуитплат'
            AND signs.surrogate = loan.contract + ',' + loan.cont-code + ',' + STRING(DAY(loan-cond.since),"99") + '/' + STRING(MONTH(loan-cond.since),"99") + '/' + SUBSTRING(STRING(YEAR(loan-cond.since),"9999"),3) 
            NO-LOCK NO-ERROR.
            IF AVAIL signs THEN annuit = signs.dec-value.
               mcred-date = STRING(loan-cond.cred-date).
      END.

   ost408 = 0.
   acct408 = ''.
   FIND LAST loan-acct OF loan WHERE 
      loan-acct.since <= end-date 
      AND loan-acct.acct-type = 'КредРасч'
   NO-LOCK NO-ERROR.
   IF AVAIL loan-acct THEN DO:
      acct408 = loan-acct.acct.
      RUN acct-pos IN h_base (loan-acct.acct, loan-acct.currency, end-date, end-date, ?).
      IF loan-acct.currency = '' THEN
         ost408 = abs(sh-bal).
      ELSE ost408 = abs(sh-val).
   END.

   ost408_s = 0.
   acct408_s = ''.
   FIND LAST loan-acct OF loan WHERE 
     loan-acct.since <= end-date 
     AND loan-acct.acct-type = 'КредРасч1'
   NO-LOCK NO-ERROR.
   IF AVAIL loan-acct THEN DO:
     acct408_s = loan-acct.acct.
     RUN acct-pos IN h_base (loan-acct.acct, loan-acct.currency, end-date, end-date, ?).
     IF loan-acct.currency = '' THEN
       ost408_s = abs(sh-bal).
     ELSE ost408_s = abs(sh-val).
   END.

   ost90909 = 0.
   acct90909 = ''.
   FIND LAST loan-acct OF loan WHERE 
      loan-acct.since <= end-date 
      AND loan-acct.acct-type = 'КредРасп'
   NO-LOCK NO-ERROR.
   IF AVAIL loan-acct THEN DO:
      acct90909 = loan-acct.acct.
     RUN acct-pos IN h_base (loan-acct.acct, loan-acct.currency, end-date, end-date, ?).
      IF loan-acct.currency = '' THEN
         ost90909 = abs(sh-bal).
      ELSE ost90909 = abs(sh-val).
   END.

   ost90909_s = 0.
   acct90909_s = ''.
   FIND LAST loan-acct OF loan WHERE 
     loan-acct.since <= end-date 
     AND loan-acct.acct-type = 'КредРасп2'
   NO-LOCK NO-ERROR.
   IF AVAIL loan-acct THEN DO:
     acct90909_s = loan-acct.acct.
     RUN acct-pos IN h_base (loan-acct.acct, loan-acct.currency, end-date, end-date, ?).
     IF loan-acct.currency = '' THEN
       ost90909_s = abs(sh-bal).
     ELSE ost90909_s = abs(sh-val).
   END.  

   /*след. план. дата*/
   FIND FIRST term-obl WHERE term-obl.contract EQ loan.contract
          AND term-obl.cont-code EQ loan.cont-code
          AND term-obl.end-date > (today + 3)
          AND term-obl.idnt EQ 1 NO-LOCK NO-ERROR.

  /*  mcommrate = GET_COMM("%Кред",
                  ?,
                  loan.currency,
                  loan.contract + "," + loan.cont-code,
                  0.00,
                  0,
                  end-date). */
   
   ASSIGN
      vDateDG     = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_Date_dosr_g","01.01.1970")
      vDatePodZay = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_Date_pod_zay",?)
      vContCode   = TRIM(ENTRY(1,loan.cont-code,"@"))
   .

   /*дата досрочного гашения*/
   IF DATE(vDateDG) NE DATE("01.01.1970")
      THEN vDateIspDG = IF DATE(vDateDG) > loan.since THEN "ПДГ" ELSE STRING(plan_date,"99.99.9999").
   ELSE IF NumWorkDay(DATE(vDatePodZay) + 1,plan_date) < 3  
      THEN vDateIspDG = IF avail term-obl THEN STRING(term-obl.end-date,"99.99.9999") ELSE "".
   ELSE IF NumWorkDay(DATE(vDatePodZay) + 1,plan_date) >= 3      
      THEN vDateIspDG = STRING(plan_date,"99.99.9999").
   /*
   IF DATE(vDateDG) EQ DATE("01.01.1970") 
   OR DATE(vDateDG) <= loan.since 
      THEN vDateIspDG = STRING(plan_date,"99.99.9999"). 
   ELSE IF DATE(vDateDG) >  loan.since
      THEN vDateIspDG = "ПДГ".
   */
   IF vDateIspDG NE "ПДГ"
      THEN vPerDateDG = IF DATE(vDateIspDG) > DATE(vDateDG) THEN "ПД" ELSE "". 
   

   CREATE otch.
   ASSIGN
      otch.fio         = nameCl
      otch.tel         = telCl
      otch.cont_code   = vContCode
      otch.opendate    = opendate
      otch.priznak     = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"priznak","")
      otch.since       = loan.since
      otch.annuit      = annuit
      otch.plan_date   = plan_date
      otch.DatePodZay  = vDatePodZay
      otch.DateTimeIn  = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_datetime_in","-")
      otch.chdg30      = IF ABS(DATE(vDateDG) - (opendate + 1)) <= 30 THEN "ЧДГ30" ELSE ""
      otch.SummDosrG   = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_summ_dosr_g","")
      otch.ost408      = ost408
      otch.Sum-all     = mSum-all
      otch.IspDG       = IF (ost408 + ost408_s) >= mSum-all THEN "ПДГ" ELSE ""
      otch.DateDG      = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_Date_dosr_g","-")
      otch.DateIspDG   = vDateIspDG
      otch.PerDateDG   = vPerDateDG
      otch.ost90909    = ost90909
      otch.ost90909_s  = ost90909_s
      otch.TypeDosrG   = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_type_dosr_g","")
      otch.Perechisl   = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_perechisl","")
      
      otch.cred-date   = mcred-date
      otch.acct408     = TRIM(ENTRY(1,acct408," "))
      otch.acct408_s   = TRIM(ENTRY(1,acct408_s," "))
      otch.ost408_s    = ost408_s
      otch.ostRasch1   = ostRasch1
      otch.acct90909   = TRIM(ENTRY(1,acct90909," "))
      otch.acct90909_s = TRIM(ENTRY(1,acct90909_s," "))
      otch.acct47401   = TRIM(ENTRY(1,acct47401," "))
      otch.TypeDosrG2  = GetXattrValueEx("loan",loan.contract + "," + loan.cont-code,"dg_type_dosr_g2","")
      otch.acct60323   = TRIM(ENTRY(1,acct60323," "))
      otch.ost60323    = ost60323
   .
END.

/* выводим в ексель */
   fname = "./otch"  + "_" + USERID('bisquit') + ".xml".
         output stream vvs to value (fname)
      UNBUFFERED  CONVERT  TARGET "UTF-8"  SOURCE "IBM866".

   PUT STREAM vvs UNFORMATTED
'
<?xml version="1.0"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <Created>2014-04-24T09:54:07Z</Created>
  <Version>14.00</Version>
 </DocumentProperties>
 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">
  <AllowPNG/>
 </OfficeDocumentSettings>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>12075</WindowHeight>
  <WindowWidth>15315</WindowWidth>
  <WindowTopX>360</WindowTopX>
  <WindowTopY>90</WindowTopY>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>
 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Arial Cyr" x:CharSet="204"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s62" ss:Name="qwe">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Calibri" x:CharSet="204" x:Family="Swiss" ss:Size="11"
   ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="left">
   <NumberFormat ss:Format="@"/>
   <Alignment ss:Horizontal="Left" ss:Vertical="Bottom" ss:WrapText="1"/>
  </Style>
  <Style ss:ID="right">
   <Alignment ss:Horizontal="Right" ss:Vertical="Bottom" ss:WrapText="1"/>
   <NumberFormat ss:Format="0"/>
  </Style>
  <Style ss:ID="s63">
   <NumberFormat ss:Format="@"/>
   <Alignment ss:Horizontal="Right" ss:Vertical="Bottom" ss:WrapText="1"/>
  </Style>
  <Style ss:ID="date_r">
   <NumberFormat ss:Format="Short Date"/>
   <Alignment ss:Horizontal="Right" ss:Vertical="Bottom" ss:WrapText="1"/>
  </Style>
  <Style ss:ID="s65">
   <NumberFormat ss:Format="Fixed"/>
  </Style>
  <Style ss:ID="s66" ss:Parent="s62">
   <Alignment ss:Horizontal="Center" ss:Vertical="Bottom" ss:WrapText="1"/>
   <Borders>
   <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Left"   ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Right"  ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Top"    ss:LineStyle="Continuous" ss:Weight="1"/>
   </Borders>
   <Font ss:FontName="Times New Roman" x:CharSet="204" x:Family="Roman"
   ss:Size="10" ss:Bold="1"/>
   <Interior ss:Color="#bee8e8" ss:Pattern="Solid"/>
   <NumberFormat ss:Format="Standard"/>
  </Style>
  <Style ss:ID="s67" ss:Parent="s62">
   <Alignment ss:Horizontal="Center" ss:Vertical="Bottom" ss:WrapText="1"/>
   <Borders>
   <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Left"   ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Right"  ss:LineStyle="Continuous" ss:Weight="1"/>
   <Border ss:Position="Top"    ss:LineStyle="Continuous" ss:Weight="1"/>
   </Borders>
   <Font ss:FontName="Times New Roman" x:CharSet="204" x:Family="Roman"
   ss:Size="10" ss:Bold="1"/>
   <Interior ss:Color="#bee8e8" ss:Pattern="Solid"/>
   <NumberFormat ss:Format="Short Date"/>
  </Style>

 </Styles>
 <Worksheet ss:Name="lll">
  <Table >
   <Column ss:StyleID="left"   ss:AutoFitWidth="0" ss:Width="170.00"/>
   <Column ss:StyleID="left"   ss:AutoFitWidth="0" ss:Width="80.00"/>
   <Column ss:StyleID="left"   ss:AutoFitWidth="0" ss:Width="110.00"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="70"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="70"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="80"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="100"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="111"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="111"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="100"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="80"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="100"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="60"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="date_r" ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="110"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="111"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="80"/>
   <Column ss:StyleID="right"  ss:AutoFitWidth="0" ss:Width="100"/>
   <Row ss:AutoFitHeight="1">
     <Cell ss:StyleID="s66"><Data ss:Type="String">ФИО</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Телефон</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Номер КД</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Дата выдачи</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Признак</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Дата пересчета КД</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Размер аннуитета</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Ближайшая ПД</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Дата приема заявления</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Время ввода заявления в БИС</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">ЧДГ до 30 дней</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Сумма по заявлению (п.1)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Остаток 408 (КредРасч)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Остаток 408 (КредРасч1)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Общая задолженность на дату пересчета</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Исполнить ПДГ/ЧДГ</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Дата по заявлению (п.2)</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Дата исполнения ДГ</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">Перенос даты исполнения ДГ</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Остаток на сч. 90909 (1)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Остаток на сч. 90909 (2)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Уменьшить (платеж/ срок)</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">Перечисление по реквизитам</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="1">
     <Cell ss:StyleID="s66"><Data ss:Type="String">1</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">2</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">3</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">4</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">5</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">6</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">7</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">8</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">9</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">10</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">11</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">12</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">13</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">14</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">15</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">16</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">17</Data></Cell>
     <Cell ss:StyleID="s67"><Data ss:Type="String">18</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">19</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">20</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">21</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">22</Data></Cell>
     <Cell ss:StyleID="s66"><Data ss:Type="String">23</Data></Cell>
   </Row>\n'.

FOR EACH otch NO-LOCK BY otch.cont_code BY cont_code:
   PUT STREAM vvs UNFORMATTED '<Row ss:AutoFitHeight="0">'.
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.fio + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.tel + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.cont_code + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.opendate,"99.99.9999") + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.priznak + '</Data></Cell>\n'.                              /*5*/
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="DateTime">'.
     PUT STREAM vvs UNFORMATTED ISO-DATE(DATETIME(otch.since)) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.annuit) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.plan_date,"99.99.9999") + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.DatePodZay + '</Data></Cell>\n'.                           
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.DateTimeIn + '</Data></Cell>\n'.                          /*10*/
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.chdg30 + '</Data></Cell>\n'.                              
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.SummDosrG) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.ost408) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.ost408_s) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.sum-all) + '</Data></Cell>\n'.                    /*15*/
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.IspDG + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.                             
     PUT STREAM vvs UNFORMATTED otch.DateDG + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.DateIspDG + '</Data></Cell>\n'.  
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.PerDateDG + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="Number">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.ost90909) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED  '<Cell><Data ss:Type="Number">'.
     PUT STREAM vvs UNFORMATTED STRING(otch.ost90909_s) + '</Data></Cell>\n'.
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.TypeDosrG2 + '</Data></Cell>\n'.    
     PUT STREAM vvs UNFORMATTED '<Cell><Data ss:Type="String">'.
     PUT STREAM vvs UNFORMATTED otch.Perechisl + '</Data></Cell>\n'.
   PUT STREAM vvs UNFORMATTED '</Row>\n'.
END.    

PUT STREAM vvs UNFORMATTED 
'  </Table>
 </Worksheet>
</Workbook>
' .

OUTPUT STREAM vvs CLOSE.
RUN sndbispc ("file=" + fname + ";class=bq").
{intrface.del}

PROCEDURE GetTel:
 DEF INPUT PARAMETER cat AS CHARACTER.
 DEF INPUT PARAMETER id AS INT64.
 DEF OUTPUT PARAMETER mSignsV AS CHARACTER.
 def var mSignVL as char no-undo.
 def var mSignsF as char no-undo.
   mSignVL = "".
   mSignsV = "".
   mSignsF = "".
   IF loan.cust-cat = 'Ч' THEN DO:
      FIND FIRST person WHERE person.person-id = loan.cust-id NO-LOCK NO-ERROR.
      mSignVL = GetXAttrValueEx("person",
              STRING(person.person-id),
              "cell-phone",
              "").
      IF {assigned mSignVL} THEN
      mSignsV = mSignVL.
         ELSE IF  {assigned person.phone[1]}
         AND NUM-ENTRIES(person.phone[1]) GT 1
         AND {assigned ENTRY(2,person.phone[1])} THEN
            mSignsV = ENTRY(2, person.phone[1]).
         ELSE IF {assigned person.phone[1]} THEN
            mSignsV = ENTRY(1, STRING(person.phone[1])).
      
      IF {assigned person.phone[2]} THEN
         mSignsV = mSignsV + ' ' + ENTRY(1, STRING(person.phone[2])).
      mSignsF = GetXAttrValueEx("person",
                                STRING(person.person-id),
                                "fax",
                                "").
      mSignsV = mSignsV + ' ' + mSignsF.  
      mSignsF = GetXAttrValueEx("person",
                                STRING(person.person-id),
                                "РаботаТел",
                                "").
      mSignsV = mSignsV + ' ' + mSignsF.
      mSignsV = TRIM(mSignsV).  
   END.
   ELSE IF loan.cust-cat = 'Ю' THEN 
   DO:
      mSignsV = GetXAttrValueEx("cust-corp", 
         STRING(cust-corp.cust-id), 
         "tel", 
         "").
      mSignsF = GetXAttrValueEx("cust-corp", 
         STRING(cust-corp.cust-id), 
         "fax", 
         "").
      mSignsV = mSignsV + ' ' + mSignsF.
      mSignsV = TRIM(mSignsV). 
   END.
END PROCEDURE.

/* PROCEDURE GetTel:
DEF INPUT  PARAMETER cat AS CHARACTER.
DEF INPUT  PARAMETER id AS INT64.
DEF OUTPUT PARAMETER mSignsV AS CHARACTER.

DEF VAR i AS INT NO-UNDO.
DEF VAR mSignsVal AS CHAR NO-UNDO.

   IF cat = "Ч" THEN
   DO:
      FIND FIRST person 
           WHERE person.person-id = id
      NO-LOCK NO-ERROR.
      IF AVAIL person THEN 
      DO:
         /* телефон клиента */
         {additem.i mSignsV person.phone[1]}
         {additem.i mSignsV person.phone[2]}
         /* может есть еще Доп. рек. */
         DO i = 1 TO NUM-ENTRIES("РаботаТел,cell-phone"):
            mSignsVal = GetXAttrValueEx("person",
                                        STRING(person.person-id),
                                        ENTRY(i,"РаботаТел,cell-phone"),
                                        "").
            {additem.i mSignsV mSignsVal}
         END.
         mSignsV = TRIM(mSignsV,",").
      END.
   END.
END PROCEDURE. */

PROCEDURE GetName:
 DEF INPUT PARAMETER cat AS CHARACTER.
 DEF INPUT PARAMETER id AS INT64.
 DEF OUTPUT PARAMETER sname AS CHARACTER.
 
 IF cat = "Ч" THEN
  DO:
   FIND FIRST PERSON 
   WHERE PERSON.PERSON-ID = id
   NO-LOCK NO-ERROR.
   IF AVAIL PERSON THEN
   /* ФИО клиента */
   sname = PERSON.NAME-LAST + " " + PERSON.FIRST-NAMES.
  END.
 ELSE
  DO:
   FIND FIRST CUST-CORP 
   WHERE CUST-CORP.CUST-ID = id
   NO-LOCK NO-ERROR.
   IF AVAIL CUST-CORP THEN
   /* наименование организации */
   sname = CUST-CORP.CUST-STAT + " " + CUST-CORP.NAME-CORP.
  END.
END PROCEDURE.