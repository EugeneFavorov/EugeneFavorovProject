/*
               Банковская интегрированная система БИСквит
    Copyright: (C) 1992-2016 ЗАО "Банковские информационные системы"
     Filename: RST-136I.P
      Comment: реестр операций 136-И
   Parameters: user-proc.params
         Uses:
      Used by:
      Created: 19.10.2010 16:22 elus    
     Modified: 19.10.2010 16:22 elus    
     Modified: 05/05/2014 kraw (0223830) Изменение заголовка справки об отсутствии...
*/
&IF DEFINED (leg407re) EQ 0 &THEN
DEFINE INPUT  PARAMETER iParam AS CHARACTER   NO-UNDO.
&ENDIF
{globals.i}     /* Здесь почти все */
{wordwrap.def}

FUNCTION GetPassport  CHAR (INT64) FORWARD.
FUNCTION CutFio       CHAR (CHARACTER) FORWARD.

DEFINE VARIABLE mLines     AS CHARACTER   NO-UNDO EXTENT 32. /* Табличка */
DEFINE VARIABLE mCLines    AS CHARACTER   NO-UNDO EXTENT 30. /* Столбец комиссий */
DEFINE VARIABLE mCols      AS INT64       NO-UNDO. /* Ширина отчета */

DEFINE VARIABLE mIsCheckBuy AS LOGICAL   NO-UNDO. /* Yes - ежели чеков купили */
DEFINE VARIABLE mIsCheckSel AS LOGICAL   NO-UNDO. /* Yes - ежели чеков продали */
DEFINE VARIABLE mLogComm    AS LOGICAL   NO-UNDO. /* Реестр с комиссиями */
DEFINE VARIABLE mCommCol    AS LOGICAL   NO-UNDO. /* Вставлять столбец комиссий */
DEFINE VARIABLE mAlterForm  AS LOGICAL   NO-UNDO. /* Альтернативная форма итогов */
DEFINE VARIABLE mStatus     AS CHARACTER NO-UNDO. /* Статус документов попадающих в реестр */
DEFINE VARIABLE mSpace      AS CHARACTER NO-UNDO.
DEFINE VARIABLE mCodeRes    AS CHARACTER NO-UNDO.
DEFINE VARIABLE mDispProxy  AS LOGICAL   NO-UNDO. /* Отображать реквизиты доверенных лиц */
DEFINE VARIABLE mOperAcct   AS CHARACTER NO-UNDO.
 
DEFINE TEMP-TABLE ttRegister  NO-UNDO
   FIELD op       AS INT64     /* id документа          */
   FIELD doc-num  AS CHARACTER /* Номер документа       */
   FIELD doc-time AS INT64     /* Время операции        */
   FIELD doc-date AS DATE      /* Дата создания докум   */
   FIELD doc-kind AS CHARACTER /* ВидОпНалВ             */
   FIELD rate     AS DECIMAL   /* Курс                  */
   FIELD ChRate   AS CHARACTER
   FIELD curr-db  AS CHARACTER /* Валюта принято        */
   FIELD amt-db   AS DECIMAL   /* Сумма принято         */
   FIELD curr-cr  AS CHARACTER /* Валюта выдано         */
   FIELD amt-cr   AS DECIMAL   /* Сумма выдано          */
   FIELD card     AS LOGICAL   /* Признак операции с пк */
   FIELD cheq-qty AS DECIMAL   /* Колво чеков           */
   FIELD currcheq AS CHARACTER /* Валюта чеков          */
   FIELD amt-cheq AS DECIMAL   /* Сумма чеков           */
   FIELD acct     AS CHARACTER /* Счет физ. лица        */
   FIELD dover    AS LOGICAL   /* Доверенность          */
   FIELD country  AS CHARACTER /* Код страны ф.л.       */
   FIELD dpr-id   AS INT64     /* id смены документа    */
   FIELD forminfo AS CHARACTER /* Информация по чекам на будующее  */
   FIELD vain     AS LOGICAL   /* Пустой */
   FIELD curr-com AS CHARACTER /* Валюта комиссии       */
   FIELD amt-com  AS DECIMAL   /* Сумма комиссии        */
   FIELD resident AS CHARACTER
   FIELD op-date  AS DATE
   FIELD num-pp   AS INT64
   FIELD f407re   AS LOGICAL
   INDEX idx dpr-id doc-date doc-time
   .

DEFINE TEMP-TABLE ttRegItog  NO-UNDO
   FIELD doc-date AS DATE      /* Дата реестра          */
   FIELD doc-kind AS CHARACTER /* ВидОпНалВ             */
   FIELD ChRate   AS CHARACTER
   FIELD curr-db  AS CHARACTER /* Валюта принято        */
   FIELD amt-db   AS DECIMAL   /* Сумма принято         */
   FIELD curr-cr  AS CHARACTER /* Валюта выдано         */
   FIELD amt-cr   AS DECIMAL   /* Сумма выдано          */
   FIELD cheq-qty AS DECIMAL   /* Колво чеков           */
   FIELD currcheq AS CHARACTER /* Валюта чеков          */
   FIELD amt-cheq AS DECIMAL   /* Сумма чеков           */
   FIELD curr-com AS CHARACTER /* Валюта комиссии       */
   FIELD amt-com  AS DECIMAL   /* Сумма комиссии        */
   FIELD resident AS CHARACTER
   FIELD count    AS INT64 
   INDEX idx doc-date doc-kind curr-db curr-cr currcheq curr-com
   .

DEFINE TEMP-TABLE ttReg-Det NO-UNDO

   FIELD Op       AS INT64      LABEL "Номер операции"     
   FIELD Currency AS CHARACTER  LABEL "Код валюты"         
   FIELD SummSign AS CHARACTER  LABEL "Признак суммы"
   FIELD Summa    AS DECIMAL    LABEL "Сумма "             
   FIELD SummaR   AS DECIMAL    LABEL "Рублевый эквивалент"

   INDEX idx Op Currency SummSign
   .


   &IF DEFINED (leg407re) EQ 0 &THEN
   mLogComm = ENTRY(1,iParam,";") EQ "Комиссии".
   IF NUM-ENTRIES(iParam,";") > 1  THEN
      mStatus  = ENTRY(2,iParam,";"). 
   IF NUM-ENTRIES(iParam,";") > 2 THEN
      mSpace   = FILL(" ",INT64(ENTRY(3,iParam,";"))).
   &ELSE
       FIND FIRST user-proc WHERE 
                  user-proc.module    EQ "vok" 
              AND user-proc.procedure EQ "rst-136i"
       NO-LOCK NO-ERROR.
       IF AVAIL user-proc THEN
          mStatus = IF NUM-ENTRIES(user-proc.params,";") > 1
                    THEN ENTRY(2, user-proc.params,";") 
                    ELSE "". 

   &ENDIF
   
   IF NOT CAN-FIND(FIRST code WHERE 
                         code.class  EQ "Статус"
                     AND code.code   EQ mStatus)
   THEN
      mStatus  = CHR(251).
ASSIGN
   mCodeRes   = FGetSetting("КодРез","","RUS")
   mAlterForm = (FGetSetting("Реестр136-И","АльтернФорма","НЕТ") EQ "ДА")
   mDispProxy = (FGetSetting("Реестр136-И","ВывДовЛиц","Да") EQ "Да")
   mOperAcct  = FGetSetting("Реестр136-И","ОперКлСч","51,52,53,54,59,60,61,62,63,64,65")
   mCommCol   = mLogComm AND (fGetSetting("ВидРеестр136и","","Нет") EQ "Да").
   

ASSIGN
   mCLines[ 1] = IF mCommCol THEN "┬───────────────────────" ELSE "".
   mCLines[ 2] = IF mCommCol THEN "│         Комиссия      " ELSE "".
   mCLines[ 3] = IF mCommCol THEN "│                       " ELSE "".
   mCLines[ 4] = IF mCommCol THEN "│       взимаемая за    " ELSE "".
   mCLines[ 5] = IF mCommCol THEN "│                       " ELSE "".
   mCLines[ 6] = IF mCommCol THEN "│      осущ. перевода   " ELSE "".
   mCLines[ 7] = IF mCommCol THEN "│                       " ELSE "".
   mCLines[ 8] = IF mCommCol THEN "│                       " ELSE "".
   mCLines[ 9] = IF mCommCol THEN "┼──────┬────────────────" ELSE "".
   mCLines[10] = IF mCommCol THEN "│ Код  │      сумма     " ELSE "".
   mCLines[11] = IF mCommCol THEN "│валюты│                " ELSE "".
 /*mCLines[12] = IF mCommCol THEN "│      │                " ELSE "".*/
 /*mCLines[13] = IF mCommCol THEN "│      │                " ELSE "".*/
   mCLines[14] = IF mCommCol THEN "┼──────┼────────────────" ELSE "".
   mCLines[15] = IF mCommCol THEN "│  16  │        17      " ELSE "".
   mCLines[21] = IF mCommCol THEN "┼──────┼────────────────" ELSE "".
   mCLines[22] = IF mCommCol THEN "│      │                " ELSE "".
   mCLines[23] = IF mCommCol THEN "┴──────┴────────────────" ELSE "".
   mCLines[24] = IF mCommCol THEN "┴──────┴────────────────" ELSE "".
   mCLines[25] = IF mCommCol THEN "┼──────┼────────────────" ELSE "".
   mCLines[26] = IF mCommCol THEN "┼──────┼────────────────" ELSE "".
   mCLines[27] = IF mCommCol THEN "│      │                " ELSE "".
   mCLines[28] = IF mCommCol THEN "┴──────┴────────────────" ELSE "".
   mCLines[29] = IF mCommCol THEN "┬──────┬────────────────" ELSE "".
.

FIND FIRST _user WHERE _user._userid EQ userid("bisquit") NO-LOCK NO-ERROR.

ASSIGN
   mLines[ 1] = "┌────────┬────────┬────┬───────┬─────────────────────────────────────────┬────┬───────────────────────────┬────────────────────┬─────┬─────┬────────────────────┬──────────────────────────────┬─────────────────────────┬────────────────┬──────┐"
   mLines[ 2] = "│Порядков│Время   │Код │ Курс  │        Наличные денежные средства       │Пла-│Принято (выдано) кассовым  │    Номер счета     │Дове-│Граж-│    ФИО физиче-     │   Документ,удостоверяющий    │   Адрес места житель-   │Дата и место    │Комис-│"
   mLines[ 3] = "│ый номер│соверше-│вида│ ино-  ├────────────────────┬────────────────────┤теж-│работником чеков (в том    │                    │рен- │дан- │    ского лица      │   личность                   │   ства (место пребы-    │рождения физи-  │сия   │"
   mLines[ 4] = "│операции│ния опе-│опе-│ стран-│    принято         │    выдано          │ная │числе дорожных чеков),     │                    │ность│ство │                    │                              │   вания)                │ческого лица    │по    │"
   mLines[ 5] = "│        │рации   │ра- │ ной   │    кассовым        │    кассовым        │кар-│номинальная стоимость кото-│                    │     │физи-│                    │                              │                         │                │опера-│"
   mLines[ 6] = "│        │ ЧЧ.ММ  │ции │ валюты│    работником      │    работником      │та  │рых указана в иностранной  │                    │     │че-  │                    │                              │                         │                │циям  │"
   mLines[ 7] = IF CAN-DO('0516,0517', STRING(GetXattrValueEx("_user",STRING(_user._userid),"Отделение",""))) THEN
                "│        │(время  │    │(кросс-│                    │                    │    │валюте                     │                    │     │ско- │                    │                              │                         │                │      │"
                ELSE 
                "│        │        │    │(кросс-│                    │                    │    │валюте                     │                    │     │ско- │                    │                              │                         │                │      │"
   mLines[ 8] = IF CAN-DO('0516,0517', STRING(GetXattrValueEx("_user",STRING(_user._userid),"Отделение",""))) THEN
                "│        │Омское) │    │ -курс)├─────┬──────────────┼─────┬──────────────┼────┼──────┬─────┬──────────────│                    │     │го   │                    │                              │                         │                │      │"
                ELSE
                "│        │        │    │ -курс)├─────┬──────────────┼─────┬──────────────┼────┼──────┬─────┬──────────────│                    │     │го   │                    │                              │                         │                │      │"
   mLines[ 9] = "│        │        │    │ по оп-│код  │              │код  │              │    │коли- │код  │              │                    │     │лица │                    │                              │                         │                │      │"
   mLines[10] = "│        │        │    │ ерации│валю-│    сумма     │валю-│    сумма     │    │чество│валю-│    сумма     │                    │     │     │                    │                              │                         │                │      │"
   mLines[11] = "│        │        │    │       │ты   │              │ты   │              │    │чеков │ты   │              │                    │     │     │                    │                              │                         │                │      │"
   mLines[14] = "├────────┼────────┼────┼───────┼─────┼──────────────┼─────┼──────────────┼────┼──────┼─────┼──────────────┼────────────────────┼─────┼─────┼────────────────────┼──────────────────────────────┤─────────────────────────┼────────────────┼──────┤"
   mLines[15] = "│   1    │    2   │ 3  │   4   │  5  │      6       │  7  │      8       │  9 │  10  │ 11  │      12      │         13         │ 14  │ 15  │        16          │              17              │           18            │       19       │  20  │"
   mLines[21] = "├────────┼────────┼────┼───────┼─────┼──────────────┼─────┼──────────────┼────┼──────┼─────┼──────────────┼────────────────────┼─────┼─────┼────────────────────┼──────────────────────────────┼─────────────────────────┼────────────────┼──────┤"
   mLines[22] = "│        │        │    │       │ ,   │            , │     │              │    │      │     │              │                    │     │     │                    │                              │                         │                │      │"
   mLines[23] = "└────────,────────┴────┴───────┴─────┴──────────────┴─────┴──────────────┴────┴──────┴─────┴──────────────┴────────────────────┴─────┴─────┴────────────────────┴──────────────────────────────┴─────────────────────────┴────────────────┴──────┘"
   mLines[24] = "└────────┴── ─────┴────┴───────┴─────┴──────────────┴─────┴──────────────┴────┴──────┴─────┴──────────────┴────────────────────┴─────┴─────┴────────────────────┴──────────────────────────────┴─────────────────────────┴────────────────┴──────┘"
   mLines[25] = "├────────┴────────┼────┼───────┼─────┼──────────────┼─────┼──────────────┼────┼──────┼─────┼──────────────┼────────────────────┼─────┼─────┼────────────────────┼──────────────────────────────┼─────────────────────────┼────────────────┼──────┤"
   mLines[26] = "├────────,────────┼────┼───────┼─────┼──────────────┼─────┼──────────────┼────┼──────┼─────┼──────────────┼────────────────────┼─────┼─────┼────────────────────┼──────────────────────────────┼─────────────────────────┼────────────────┼──────┤"
   mLines[27] = "│Итого по Реестру:│ ,  │       │     │              │     │              │    │      │     │             ,│                    │     │    ,│                    │                              │                         │                │,     │"
   mLines[28] = "├─────────────────┴────┴───────┴─────┴──────────────┴─────┴──────────────┴────┴──────┴─────┴──────────────┴────────────────────┴─────┴─────┴────────────────────┴──────────────────────────────┴─────────────────────────┴────────────────┴──────┤"
   mLines[29] = "├────────┬────────┬────┬───────┬─────┬──────────────┬─────┬──────────────┬────┬──────┬─────┬──────────────┬────────────────────┬─────┬─────┬────────────────────┬──────────────────────────────┬─────────────────────────┬────────────────┬──────┤"
   mLines[30] = "│        │        │    │       │     │              │     │              │    │      │     │              │                    │     │     │,                   │                              │                         │                │      │"
   mLines[31] = "├──────────┬────────┐                                                                                                                                                                                  "
   mLines[32] = "│ Резидент │ Кол-во │     Итого по Реестру                                                                                                                                                             "
   mCols      = LENGTH(mSpace + mLines[1])
   .



&GLOBAL-DEFINE cols mCols

&IF DEFINED (leg407re) EQ 0 &THEN
{agr-beg.def 
   &NameTitle = "РЕЕСТР ОПЕРАЦИЙ С ВАЛЮТОЙ И ЧЕКАМИ 136-И"
   &TypeDoc   = '"book"'
   &NameRep   = "'ВОКРст136'"}

{limitsum.chk}
{rst-tab.fun}   /* Определение сумм, кодов валют и кол-ва чеков для единого реестра */
{agr-beg.i}

RUN CreateTemp-Table.
{agr-end.i 
   &OnePageRep  = "YES"
   &OnePageName = "PrintRst"}
{intrface.del}
&ELSE
{agr-beg.def 
   &NameTitle = "РЕЕСТР ОПЕРАЦИЙ С ВАЛЮТОЙ И ЧЕКАМИ 136-И"
   &TypeDoc   = '"book"'
   &NameRep   = "'ВОКРст136'"}
    
{limitsum.chk}
{rst-tab.fun} 
&ENDIF

PROCEDURE PrintRst.
   DEFINE VARIABLE vREGN       AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vLogDocNum  AS LOGICAL     NO-UNDO.
   DEFINE VARIABLE vAdresPch   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vBank       AS CHARACTER   NO-UNDO EXTENT 2.
   DEFINE VARIABLE vBranchAttr AS CHARACTER   NO-UNDO EXTENT 2.
   DEFINE VARIABLE vRstNum     AS INT64       NO-UNDO.
   DEFINE VARIABLE vDocNum     AS INT64       NO-UNDO.
   DEFINE VARIABLE vStrDate    AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vFirst      AS LOGICAL     NO-UNDO.
   DEFINE VARIABLE vFio        AS CHARACTER   NO-UNDO EXTENT 5.
   DEFINE VARIABLE vPasport    AS CHARACTER   NO-UNDO EXTENT 5.
   DEFINE VARIABLE vAdress     AS CHARACTER   NO-UNDO EXTENT 5.
   DEFINE VARIABLE vBirthDay   AS CHARACTER   NO-UNDO EXTENT 5.
   DEFINE VARIABLE vSessBrnch  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vKodFil     AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOperAcct   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vLinePtint  AS INT64       NO-UNDO.
   DEFINE VARIABLE vDoverNum   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vDoverCid   AS INT64       NO-UNDO.
   
   DEFINE BUFFER bttRegister FOR ttRegister.
   DEFINE BUFFER bsessions   FOR sessions.

   FIND FIRST bsessions WHERE bsessions.dpr-id EQ INT64(mCuDprID) NO-LOCK NO-ERROR.
   IF AVAIL bsessions THEN
      vSessBrnch = bsessions.branch-id.

   IF NOT {assigned vSessBrnch} THEN
      vSessBrnch = mCuBrchID.

   ASSIGN
      vREGN          = FGetSetting("REGN",?,"")
      vREGN          = vREGN + (IF {assigned mBranchREGN} AND mBranchREGN NE vREGN THEN ("/" + mBranchREGN) ELSE "")
      vAdresPch      = FGetSetting("Адрес_пч",?,?)
      vBank[1]       = mBank
      vKodFil        = FGetSetting("КодФил",?,"")
      vBranchAttr[1] = IF vKodFil NE vSessBrnch THEN mBranchName + " " + mVOKAddr[1]
                                                ELSE ""
      vLogDocNum     = fGetSetting("Реестр136-И","ДокНум","Нет") EQ "Нет"
      vOperAcct      = FGetSetting("Реестр136-И","ОперКлСч","51,52,53,54,59,60,61,62,63,64,65")
      .

   {wordwrap.i
     &s = vBank
     &n = 2
     &l = 60
   }
   {wordwrap.i
     &s = vBranchAttr
     &n = 2
     &l = 60
   }

   FOR EACH ttRegister 
      NO-LOCK
      BREAK 
      BY ttRegister.dpr-id
      BY ttRegister.doc-date 
      BY ttRegister.doc-time:
      IF FIRST-OF(ttRegister.dpr-id) THEN
      DO:
         vRstNum = 0.
         RUN GetRepFioByRef(mNameRep,mCuBrchID,ttRegister.op,ttRegister.dpr-id).
      END.
      IF FIRST-OF(ttRegister.doc-date) THEN
      DO:
         IF NOT ttRegister.vain THEN
            vRstNum  = vRstNum + 1. 
         ASSIGN
            vDocNum  = 0
            vStrDate = STRING(ttRegister.doc-date,"99.99.9999") /* {strdate.i ttRegister.doc-date} */
            .
         IF ttRegister.vain THEN
         DO:
            PUT UNFORMATTED
               mSpace SPACE(3) "Полное (сокращенное) фирменное наименование"          SPACE(11) vBank[1]       SKIP
               mSpace SPACE(3) "уполномоченного банка"                                SPACE(33) vBank[2]       SKIP
               mSpace SPACE(3) "(наименование филиала)"                                                        SKIP
               mSpace SPACE(3) "Регистрационный номер уполномоченного банка/"         SPACE(10) STRING(vREGN)  SKIP
               mSpace SPACE(3) "порядковый номер филиала"                                                      SKIP
               mSpace SPACE(3) "Местонахождение (адрес) уполномоченного банка"        SPACE(9) vAdresPch       SKIP
               mSpace SPACE(3) "(филиала)"                                                                     SKIP
               mSpace SPACE(3) "Наименование внутреннего структурного подразделения"  SPACE(3) vBranchAttr[1]  SKIP
               mSpace SPACE(3) "уполномоченного банка и его местонахождение (адрес)"  SPACE(3) vBranchAttr[2]  SKIP
               mSpace SPACE(3) "Дата заполнения справки"
                      SPACE(31) "┌─┬─┐ ┌─┬─┐ ┌─┬─┬─┬─┐" SKIP
               mSpace SPACE(57) "│" SUBSTRING(vStrDate,1,1) "│" SUBSTRING(vStrDate,2,1) "│.│" SUBSTRING(vStrDate,4,1) "│" SUBSTRING(vStrDate,5,1)
               "│.│" SUBSTRING(vStrDate,7,1) "│" SUBSTRING(vStrDate,8,1) "│" SUBSTRING(vStrDate,9,1) "│" SUBSTRING(vStrDate,10,1) "│" SKIP
               mSpace SPACE(57) "└─┴─┘ └─┴─┘ └─┴─┴─┴─┘" SKIP
               mSpace SPACE(57) "День  Месяц    Год   " SKIP(2)


               PADC("СПРАВКА ОБ ОТСУТСТВИИ ОПЕРАЦИЙ С НАЛИЧНОЙ ИНОСТРАННОЙ ВАЛЮТОЙ",110)                   SKIP(1)
               mSpace SPACE(3) "В течение рабочего дня операции с наличной иностранной валютой и чеками не осуществлялись." SKIP(1)
            .
            DO i = 1 TO mTotalSign:
               RUN PrintFioAndPost(CutFio(mFioInRep[i]),mPostInRep[i],length(mSpace)).
            END.
            NEXT.
         END.
         PAGE.
         PUT UNFORMATTED
            mSpace SPACE(3) "Полное (сокращенное) фирменное наименование"          SPACE(11) vBank[1]              SKIP
            mSpace SPACE(3) "уполномоченного банка"                                SPACE(33) vBank[2]              SKIP
            mSpace SPACE(3) "(наименование филиала)"                                                               SKIP
            mSpace SPACE(3) "Регистрационный номер уполномоченного банка/"         SPACE(10) STRING(vREGN)         SKIP
            mSpace SPACE(3) "порядковый номер филиала"                                                             SKIP
            mSpace SPACE(3) "Местонахождение (адрес) уполномоченного банка"        SPACE(9) vAdresPch              SKIP
            mSpace SPACE(3) "(филиала)"                                                                            SKIP
            mSpace SPACE(3) "Наименование внутреннего структурного подразделения"  SPACE(3) vBranchAttr[1]         SKIP
            mSpace SPACE(3) "уполномоченного банка и его местонахождение (адрес)"  SPACE(3) vBranchAttr[2]         SKIP
            mSpace SPACE(3) "Дата заполнения реестра"
                   SPACE(31) "┌─┬─┐ ┌─┬─┐ ┌─┬─┬─┬─┐" SKIP
            mSpace SPACE(57) "│" SUBSTRING(vStrDate,1,1) "│" SUBSTRING(vStrDate,2,1) "│.│" SUBSTRING(vStrDate,4,1) "│" SUBSTRING(vStrDate,5,1)
            "│.│" SUBSTRING(vStrDate,7,1) "│" SUBSTRING(vStrDate,8,1) "│" SUBSTRING(vStrDate,9,1) "│" SUBSTRING(vStrDate,10,1) "│" SKIP
            mSpace SPACE(57) "└─┴─┘ └─┴─┘ └─┴─┴─┴─┘" SKIP
            mSpace SPACE(57) "День  Месяц    Год   " SKIP(1)
            mSpace SPACE(3) "Порядковый номер Реестра в течение рабочего дня"      SPACE(7) vRstNum SKIP(3)
            PADC("Реестр операций с наличной валютой и чеками",mCols)                                       SKIP(1)
         .
         DO i = 1 TO 20:
            IF mLines[i] NE "" THEN
               PUT UNFORMATTED mSpace mLines[i] SKIP.
         END.
      END.
      IF     LAST-OF(ttRegister.doc-date) 
         AND NOT CAN-FIND(FIRST ttRegItog WHERE 
                                ttRegItog.doc-date EQ ttRegister.doc-date) THEN
      DO:
         vLinePtint = GetFioPostLine() + 2.
         IF mLogComm AND NOT mCommCol THEN
            FOR EACH ttReg-Det WHERE
                     ttReg-Det.op EQ ttRegister.op
               NO-LOCK:
               vLinePtint = vLinePtint + 1.
            END.         
         IF LINE-COUNTER + vLinePtint > PAGE-SIZE THEN 
            PAGE.         
      END.

      IF CAN-DO(vOperAcct,ttRegister.doc-kind) AND NOT ttRegister.dover THEN do:
		   RUN GetFioByAcct(ttRegister.op,OUTPUT vFio[1],OUTPUT vPasport[1],OUTPUT vAdress[1],OUTPUT vBirthDay[1]).

                   /* ivv если  vFio vAdress vBirthDay vPasport не заполнены, нужно плопробовать взять их с документа. ttRegister.country заполняем, если не пустое имя */
                   if  vFio[1]      = "" then do:
                       vFio[1]      = GetXAttrValue("op", STRING(ttRegister.op), "ФИО").
                       if  vFio[1]  <> "" then do:
                           ttRegister.country = GetXAttrValue("op",STRING(ttRegister.op), "country-pers"). 
                           FIND FIRST country WHERE  country.country-id EQ ttRegister.country
                                      NO-LOCK NO-ERROR. 
                           IF AVAILABLE country THEN do:               
                              ttRegister.country =  STRING(country.country-alt-id,"999") .
                           end.
                       end.
                   end.
                   if  vAdress[1]   = "" then vAdress[1]   = GetXAttrValue("op", STRING(ttRegister.op), "Адрес").
                   if  vBirthDay[1] = "" or vBirthDay[1] = ? then vBirthDay[1] = GetXAttrValue("op", STRING(ttRegister.op), "birthday") + "  " + GetXAttrValueEx("op", STRING(ttRegister.op), "birthPlace","").
                   if  vPasport[1]  = "" then vPasport[1]  = GetPassport(ttRegister.op).
                   /* end ivv */
 	   end.
	   ELSE 
		  IF ttRegister.dover THEN DO:
			vDoverNum = GetXAttrValue("op", STRING(ttRegister.op), "proxy-code").
			FIND FIRST loan 
				 WHERE loan.cont-code = vDoverNum
				 AND   loan.contract  = "proxy"
			NO-LOCK NO-ERROR.
			IF AVAIL loan THEN
				vDoverCid = INTEGER(GetXAttrValue("loan", loan.contract + "," + vDoverNum, "agent-id")).
				FIND FIRST person
				     WHERE person.person-id = vDoverCid
				NO-LOCK NO-ERROR.				
				IF AVAIL person THEN
					ASSIGN
					 vFio[1]      = person.name-last + " " + person.first-names
					 vAdress[1]   = person.address[1]
					 vBirthDay[1] = STRING(person.birthday) + " " + GetXAttrValueEx("person",STRING(person.person-id),"BirthPlace","")
					 vPasport[1]  = person.document-id + " " + person.document /*+ " " + fGetDocIssue(person.person-id)*/
					.
		  END.
		  ELSE  
		    ASSIGN
			 vFio[1]      = GetXAttrValue("op", STRING(ttRegister.op), "ФИО")
			 vAdress[1]   = GetXAttrValue("op", STRING(ttRegister.op), "Адрес")
			 vBirthDay[1] = GetXAttrValue("op", STRING(ttRegister.op), "birthday") + "  " +
							GetXAttrValueEx("op", STRING(ttRegister.op), "birthPlace","")
			 vPasport[1]  = GetPassport(ttRegister.op)
		    .

                 /* If ((ttRegister.doc-kind = "01") or (ttRegister.doc-kind = "02")) and (ttRegister.amt-cr < 40000) and (ttRegister.amt-db < 40000) Then vPasport[1] = "". */
                 IF can-do(string(FGetSetting("И113","ОпГр15","")), ttRegister.doc-kind) and ttRegister.amt-cr < INT(FGetSetting("И113","Сумма1626","")) and ttRegister.amt-db < INT(FGetSetting("И113","Сумма1626",""))
                    THEN vPasport[1] = "".

		{wordwrap.i
		 &s = vFio
		 &n = 5
		 &l = 20
		}
		{wordwrap.i
		 &s = vPasport
		 &n = 5
		 &l = 30
		}
		{wordwrap.i
		 &s = vAdress
		 &n = 5
		 &l = 25
		}
		{wordwrap.i
		 &s = vBirthDay
		 &n = 5
		 &l = 17
		}

      vDocNum = vDocNum + 1.
      PUT UNFORMATTED 
         mSpace mLines[21] SKIP 
/*  1 */ mSpace "│"  (IF vLogDocNum THEN STRING(vDocNum,">>>>>>9") ELSE STRING(ttRegister.doc-num,"x(8)"))
/*  2 */   " │  "   REPLACE(STRING(ttRegister.doc-time,"HH:MM"),":",".") /* STRING(ttRegister.doc-time,"HH:MM") */
/*  3 */   " │ "    STRING(ttRegister.doc-kind,"x(2)")
/*  4 */   " │"     IF ttRegister.doc-kind EQ "55" THEN "       " ELSE ttRegister.ChRate
/*  5 */    "│ "    STRING(ttRegister.curr-db,"x(3)")
/*  6 */   " │"     STRING(ttRegister.amt-db, ">>>,>>>,>>9.99")
/*  7 */    "│ "    STRING(ttRegister.curr-cr,"x(3)")
/*  8 */   " │"     IF ttRegister.doc-kind EQ "55" THEN "              " ELSE STRING(ttRegister.amt-cr, ">>>,>>>,>>9.99")
/*  9 */    "│"     STRING(ttRegister.card,"X/") 
/* 10 */ "   │"     (IF ttRegister.cheq-qty NE 0 THEN STRING(ttRegister.cheq-qty, ">>>,>>>,>>9") ELSE "      ")
/* 11 */    "│ "    STRING(ttRegister.currcheq,"x(3)")
/* 12 */   " │"     (IF ttRegister.amt-cheq NE 0 THEN STRING(ttRegister.amt-cheq, ">>>,>>>,>>9.99") ELSE "              ")
/* 13 */    "│"     STRING(ttRegister.acct,"x(20)")
/* 14 */    "│    " STRING(ttRegister.dover,"X/")
/* 15 */    "│ "    STRING(ttRegister.country,"x(3)") " "
/* 16 */    "│"     STRING(vFio[1], "x(20)")
/* 17 */    "│"     STRING(vPasport[1], "x(30)") 
/* 18 */    "│"     STRING(vAdress[1],"x(25)")
/* 19 */    "│"     STRING(vBirthDay[1], "x(16)").


	  FIND FIRST ttReg-Det WHERE
				 ttReg-Det.op EQ ttRegister.op
			 AND ttReg-Det.currency NE "810"
	  NO-LOCK NO-ERROR.
	  IF AVAIL ttReg-Det THEN
	  PUT UNFORMATTED
		  "│"  (IF ttReg-Det.Summa NE 0 THEN STRING(ttReg-Det.Summa, ">>9.99") ELSE "      ") "│" SKIP.
	  ELSE
	  PUT UNFORMATTED 
	     "│ " ENTRY(5,mLines[27]) SKIP.

	  DO i = 2 TO 5:
		  IF     (vFio[i]        NE ""
			 OR vBirthDay[i] NE "" 
			 OR vAdress[i]   NE "" 
			 OR vPasport[i]  NE "") THEN
        PUT UNFORMATTED ENTRY(1,mLines[30]) 
                   		STRING(vFio[i], "x(20)")
    			            "│" STRING(vPasport[i], "x(30)") 
                        "│" STRING(vAdress[i],"x(25)")
                        "│" STRING(vBirthDay[i], "x(16)") 
                        "│      │" /*ENTRY(4,mLines[27])*/
                SKIP.
	  END.

/*
PUT UNFORMATTED "1----------------------------------------------------------" STRING(mCommCol) STRING(mLogComm) SKIP.

      IF mCommCol THEN
      DO:
         FIND FIRST ttReg-Det WHERE
                    ttReg-Det.op EQ ttRegister.op
            NO-LOCK NO-ERROR.
         IF AVAILABLE ttReg-Det THEN
            PUT UNFORMATTED "│  " ttReg-Det.Currency FORMAT "x(3)" " │ " STRING(ttReg-Det.Summa, ">>>,>>>,>>9.99") " ".
         ELSE
            PUT UNFORMATTED mCLines[22].
      END.
/*      PUT UNFORMATTED "│" SKIP.*/

      IF mLogComm AND NOT mCommCol THEN
      DO:
         FOR EACH ttReg-Det WHERE
                  ttReg-Det.op EQ ttRegister.op
            NO-LOCK:
               
            PUT UNFORMATTED
               mSpace ENTRY(1,mLines[22]) ttReg-Det.Currency "  │ " 
               STRING(ttReg-Det.SummSign,"x(3)") " " 
               STRING(ttReg-Det.Summa, ">>>,>>>,>>9.99") 
               ENTRY(3,mLines[22]) SKIP.
         END.
      END.

PUT UNFORMATTED "2----------------------------------------------------------" SKIP.

*/

      IF LAST-OF(ttRegister.doc-date) THEN
      DO:

         vFirst = YES.
         IF NOT CAN-FIND(FIRST ttRegItog WHERE 
                               ttRegItog.doc-date EQ ttRegister.doc-date) THEN
         DO:
            PUT UNFORMATTED 
               mSpace mLines[24] SKIP.
         END.
         ELSE
         DO:
            IF mFullItg THEN
            DO:
               PUT UNFORMATTED 
                  mSpace ENTRY(1,mLines[28]) (IF mAlterForm THEN "┴" ELSE "─") ENTRY(2,mLines[28]) SKIP
                  mSpace "│ Итоги по видам операций в разрезе курсов                                                                                                                                                             " + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP.
                  IF mAlterForm THEN
                     PUT UNFORMATTED
                  mSpace mLines[31] + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP
                  mSpace mLines[32] + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP.                      
               FOR EACH ttRegItog WHERE 
                        ttRegItog.doc-date EQ ttRegister.doc-date
                    AND ttRegItog.ChRate   NE ""
                  NO-LOCK:
                  IF vFirst THEN
                  DO:
                     vFirst = NO.
                     PUT UNFORMATTED 
                        mSpace (IF mAlterForm THEN mLines[30] ELSE mLines[29]) SKIP.
                  END.
                  ELSE
                     PUT UNFORMATTED 
                        mSpace ENTRY(1,mLines[26]) (IF mAlterForm THEN "┼" ELSE "─") ENTRY(2,mLines[26]) SKIP.
                
                  PUT UNFORMATTED
                  mSpace 
                  (IF mAlterForm
                      THEN
                         "│ " + STRING(ttRegItog.resident,"x(8)") + " │ " + STRING(ttRegItog.count,">>>>>>") + " │ "
                      ELSE
                         ENTRY(1,mLines[27])
                  ) 
                     
                    STRING(ttRegItog.doc-kind,"x(2)")
            "  │ "  IF ttRegister.doc-kind EQ "55" THEN "           " ELSE ttRegItog.ChRate
             " │ "  STRING(ttRegItog.curr-db,"x(3)")
            "  │ "  STRING(ttRegItog.amt-db, ">>>,>>>,>>>,>>9.99")
             " │ "  STRING(ttRegItog.curr-cr,"x(3)")
            "  │ "  IF ttRegister.doc-kind EQ "55" THEN "                  " ELSE STRING(ttRegItog.amt-cr, ">>>,>>>,>>>,>>9.99")
             " │         │ "  (IF ttRegItog.cheq-qty NE 0 THEN STRING(ttRegItog.cheq-qty, ">,>>>,>>>,>>9") ELSE "             ")
             " │ "  STRING(ttRegItog.currcheq,"x(3)")
            "  │ "  (IF ttRegItog.amt-cheq NE 0 THEN STRING(ttRegItog.amt-cheq, ">>>,>>>,>>>,>>9.99") ELSE "                  ")
                    ENTRY(3,mLines[27])
                    (IF (mCommCol AND ttRegItog.amt-com GT 0) 
                     THEN " │  " + STRING(ttRegItog.curr-com,"x(3)") + " │ " + STRING(ttRegItog.amt-com, ">>>,>>>,>>9.99") + " │"
                     ELSE " " + ENTRY(4,mLines[27]))
                    SKIP.
               END.
               vFirst = YES.
               PUT UNFORMATTED 
                  mSpace ENTRY(1,mLines[28]) (IF mAlterForm THEN "┴" ELSE "─") ENTRY(2,mLines[28]) SKIP
                  mSpace "│ Итоги по видам операций                                                                                                                                                                              " + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP.
            END.

            FOR EACH ttRegItog WHERE 
                     ttRegItog.doc-date EQ ttRegister.doc-date
                 AND (ttRegItog.ChRate   EQ "" OR NOT mFullItg)
               NO-LOCK
               BREAK BY ttRegItog.doc-date:
                  
               IF vFirst THEN
               DO:
                  vFirst = NO.
                  IF mAlterForm THEN
                  DO:
                     IF NOT mFullItg THEN
                        PUT UNFORMATTED mSpace ENTRY(1,mLines[28]) "┴" ENTRY(2,mLines[28]) SKIP. 
                     PUT UNFORMATTED
                        mSpace mLines[31] + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP
                        mSpace mLines[32] + FILL(" ",LENGTH(mCLines[1])) + "│ " SKIP.                      
                  END. 
                  PUT UNFORMATTED mSpace
                     (IF mAlterForm THEN mLines[30] ELSE (IF mFullItg THEN mLines[29] ELSE mLines[25]))
                     SKIP.
               END.
               ELSE
                  PUT UNFORMATTED 
                     mSpace ENTRY(1,mLines[26]) (IF mAlterForm THEN "┼" ELSE "─") ENTRY(2,mLines[26]) SKIP.

               IF     LAST-OF(ttRegItog.doc-date) THEN
               DO:
                  vLinePtint = GetFioPostLine() + 2.    
                  IF LINE-COUNTER + vLinePtint > PAGE-SIZE THEN
                  DO: 
                     PAGE.
                  END.   
               END.

               PUT UNFORMATTED 
                  mSpace 
                  (IF mAlterForm
                   THEN 
                      "│ " + STRING(ttRegItog.resident,"x(8)") + " │ " + STRING(ttRegItog.count,">>>>>>") + " │ "
                   ELSE
                      ENTRY(1,mLines[27])
                  )
/*  3 */   STRING(ttRegItog.doc-kind,"x(2)")
/*  4 */   " │"   IF ttRegItog.doc-kind EQ "55" THEN "       "
                                                 ELSE ttRegItog.ChRate
/*  5 */    "│ "  STRING(ttRegItog.curr-db,"x(3)")
/*  6 */   " │"   STRING(ttRegItog.amt-db, ">>>,>>>,>>9.99")
/*  7 */    "│ "  STRING(ttRegItog.curr-cr,"x(3)")
/*  8 */   " │"   IF ttRegItog.doc-kind EQ "55" THEN "              "
                                                ELSE STRING(ttRegItog.amt-cr, ">>>,>>>,>>9.99")
/*  9 10 */ "│    │"  (IF ttRegItog.cheq-qty NE 0 THEN STRING(ttRegItog.cheq-qty, ">,>>>,>>>,>>9") 
                                                  ELSE "     ")
/* 11 */   " │"   STRING(ttRegItog.currcheq,"x(3)")
/* 12 */  "  │"   (IF ttRegItog.amt-cheq NE 0 THEN STRING(ttRegItog.amt-cheq, ">>>,>>>,>>>,>>9.99") 
                                              ELSE "              ")
/* 13 */          ENTRY(3,mLines[27])
                  (IF (mCommCol AND ttRegItog.amt-com GT 0) THEN " │  " + STRING(ttRegItog.curr-com,"x(3)") + " │││ " + STRING(ttRegItog.amt-com, ">>>,>>>,>>9.99") + " │" 
                                                            ELSE " " + ENTRY(4,mLines[27]) + " " + ENTRY(5,mLines[27]))
                 SKIP.
            END.
            PUT UNFORMATTED 
               mSpace ENTRY(1,mLines[23]) (IF mAlterForm THEN "┴" ELSE "─") ENTRY(2,mLines[23]) SKIP(1).
         END.
         DO i = 1 TO mTotalSign:
            RUN PrintFioAndPost(CutFio(mFioInRep[i]),mPostInRep[i],length(mSpace)).
         END.

         PAGE.
         /* Приложение к реестру */
         IF mRstPril THEN
         DO:
            vDocNum = 0.
            PUT UNFORMATTED
               mSpace SPACE(3) "ПРИЛОЖЕНИЕ К РЕЕСТРУ ОПЕРАЦИЙ С НАЛИЧНОЙ ИНОСТРАННОЙ ВАЛЮТОЙ И ЧЕКАМИ"
               SKIP(1)
               mSpace SPACE(3) "Адрес структурного подразделения         " mVOKAddr[1]
               SKIP(1)
               mSpace SPACE(3) "Дата заполнения Приложения               " {strdate.i mCuDate}
               SKIP(1)
               mSpace SPACE(3) "Порядковый номер Реестра, к которому     " SKIP
               mSpace SPACE(3) "прилагается данное Приложение            " STRING(vRstNum)
               SKIP(1)                                                                 
               SKIP mSpace "┌─────────┬──────────────────────────────────────┬────────────────────────┬─────────────────────────────────────────────────────────────────┬──────────────────────────────────────────────────────────────────┐"
               SKIP mSpace "│  Номер  │         ФИО физического лица         │ Дата и место рождения  │                      Адрес физического лица                     │         Наименование документа, удостоверяющего личность         │"
               SKIP mSpace "│         │                                      │ физического лица       │                                                                 │                                                                  │"
               SKIP mSpace "├─────────┼──────────────────────────────────────┼────────────────────────┼─────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────┤"
               SKIP mSpace "│    1    │                  2                   │            3           │                                4                                │                                   5                              │"
               .
            
            FOR EACH bttRegister WHERE
                     bttRegister.dpr-id   EQ ttRegister.dpr-id
                 AND bttRegister.doc-date EQ ttRegister.doc-date NO-LOCK
               BY bttRegister.doc-time:
               DO i = 1 TO 5:
                  ASSIGN
                     vFio[i]      = ""
                     vBirthDay[i] = "" 
                     vAdress[i]   = "" 
                     vPasport[i]  = ""
                  .
               END.
               IF CAN-DO(vOperAcct,bttRegister.doc-kind) THEN
               DO:
                  RUN GetFioByAcct(bttRegister.op,OUTPUT vFio[1],OUTPUT vPasport[1],OUTPUT vAdress[1],OUTPUT vBirthDay[1]).
                  IF bttRegister.dover              AND
                     ((NOT {assigned vFio[1]})      AND
                      (NOT {assigned vAdress[1]})   AND
                      (NOT {assigned vBirthDay[1]}) AND
                      (NOT {assigned vPasport[1]})) AND
                     mDispProxy
                  THEN
                     ASSIGN
                        vFio[1]      = GetXAttrValue("op", STRING(bttRegister.op), "ФИО")
                        vAdress[1]   = GetXAttrValue("op", STRING(bttRegister.op), "Адрес")
                        vBirthDay[1] = GetXAttrValue("op", STRING(bttRegister.op), "birthday") + " " +
                                       GetXAttrValueEx("op",
                                                       STRING(bttRegister.op),
                                                       "birthPlace",
                                                       "")
                        vPasport[1]  = GetPassport(bttRegister.op)
                     .
                  IF NOT bttRegister.dover AND
                     GetXAttrValue("op", STRING(bttRegister.op), "Докум") NE ""
                  THEN
                     vPasport[1]  = GetPassport(bttRegister.op).
               END.
               ELSE
                  ASSIGN
                     vFio[1]      = GetXAttrValue("op", STRING(bttRegister.op), "ФИО")
                     vAdress[1]   = GetXAttrValue("op", STRING(bttRegister.op), "Адрес")
                     vBirthDay[1] = GetXAttrValue("op", STRING(bttRegister.op), "birthday") + "  " + GetXAttrValueEx("op", STRING(bttRegister.op), "birthPlace","")
                     vPasport[1]  = GetPassport(bttRegister.op)
                  .
               IF vFio[1] EQ ? THEN vFio[1] = "".
               IF vBirthDay[1] EQ ? THEN vBirthDay[1] = "".
               IF vAdress[1] EQ ? THEN vAdress[1] = "".
               IF vPasport[1] EQ ? THEN vPasport[1] = "".

               {wordwrap.i
                 &s = vFio
                 &n = 5
                 &l = 35
               }
               {wordwrap.i
                 &s = vBirthDay
                 &n = 5
                 &l = 20
               }
               {wordwrap.i
                 &s = vAdress
                 &n = 5
                 &l = 64
               }
               {wordwrap.i
                 &s = vPasport
                 &n = 5
                 &l = 64
               }
               /* Печать приложения */
               vDocNum = vDocNum + 1.
               PUT UNFORMATTED
                  SKIP mSpace "├─────────┼──────────────────────────────────────┼────────────────────────┼─────────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────┤"
                  SKIP mSpace "│" (IF vLogDocNum THEN STRING(vDocNum,">>>>>>>>9") ELSE STRING(bttRegister.doc-num,"x(9)"))
                       "│ " STRING(vFio[1], "x(36)")
                       " │ " STRING(vBirthDay[1], "x(22)")
                       " │ " STRING(vAdress[1],"x(63)")
                       " │ " STRING(vPasport[1], "x(64)") " │"
                  .
/*               DO i = 2 TO 5:                                         */
/*                  IF    vFio[i]      NE ""                            */
/*                     OR vBirthDay[i] NE ""                            */
/*                     OR vAdress[i]   NE ""                            */
/*                     OR vPasport[i]  NE "" THEN                       */
/*                     PUT UNFORMATTED                                  */
/*                   SKIP mSpace "│         │ " STRING(vFio[i], "x(36)")*/
/*                        " │ " STRING(vBirthDay[i], "x(22)")           */
/*                        " │ " STRING(vAdress[i],"x(63)")              */
/*                        " │ " STRING(vPasport[i], "x(64)") " │".      */
/*               END.                                                   */
            END.
            
            PUT UNFORMATTED
               SKIP mSpace "└─────────┴──────────────────────────────────────┴────────────────────────┴─────────────────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────┘"
               SKIP(1)
               .
            
            PAGE.
         END.
      END.
   END.

END PROCEDURE.

PROCEDURE CreateTemp-Table.

   DEFINE VARIABLE vCurDprId  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vVidOpNalV AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOperIskl  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOperRate  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOperCard  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOperAcct  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vOpGr15    AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vAcctComm  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vPechFIO   AS LOGICAL     NO-UNDO.
   DEFINE VARIABLE vPrSumm    AS CHARACTER   NO-UNDO /* Бал Счета комиссий */ EXTENT 2.
   DEFINE VARIABLE i          AS INT64       NO-UNDO.
   DEFINE VARIABLE vI         AS INT64       NO-UNDO.
   DEFINE VARIABLE vOpTime    AS INT64       NO-UNDO.
   DEFINE VARIABLE vOpLnk     AS INT64       NO-UNDO.
   DEFINE VARIABLE vOpDate    AS DATE        NO-UNDO.
   DEFINE VARIABLE vCurrDb    AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vSummaDb   AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vCurrCr    AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vSummaCr   AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vQtyCheq   AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vCurrCheq  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vSumCheq   AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vSumRub    AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vAcctCli   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vCountry   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vResident  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vCommSign  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vCurrCom   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vSummCom   AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vSummComR  AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vForminfo  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vRate      AS DECIMAL     NO-UNDO.
   DEFINE VARIABLE vChrRate   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vIsSvod    AS LOGICAL     NO-UNDO.
   DEFINE VARIABLE vOp        AS INT64       NO-UNDO.
   DEFINE VARIABLE vDover     AS LOGICAL     NO-UNDO.
   DEFINE VARIABLE vSpaceRate AS CHARACTER   NO-UNDO INIT "           ".

   DEFINE BUFFER bop       FOR op.
   DEFINE BUFFER xop       FOR op.
   DEFINE BUFFER bop-entry FOR op-entry.
   DEFINE BUFFER blinks    FOR links.
   DEFINE BUFFER bsessions FOR sessions.

   ASSIGN
      vOperIskl = FGetSetting("Реестр136-И","ОперИскл","")
      vOperRate = FGetSetting("Реестр136-И","ОперБезКурса","")
      vOperCard = FGetSetting("Реестр136-И","ОперПлат","14,15,16,17")
      vOperAcct = FGetSetting("Реестр136-И","ОперКлСч","51,52,53,54,59,60,61,62,63,64,65")
      vAcctComm = FGetSetting("И113","СчетКомис","")
      vOpGr15   = fGetSetting("И113","ОпГр15","")
      vPechFIO  = fGetSetting("ПечФИО","","Нет") EQ "Да"
      vOpLnk    = getXLinkID ("opbv-svod","opvSvod")
      .

   FOR EACH code WHERE
            code.class EQ "ПрСуммы" 
        AND code.val   NE ""
      NO-LOCK:
      DO i = 1 TO NUM-ENTRIES(code.val):
         {additem.i vPrSumm[1] SUBSTRING(ENTRY(i,code.val),1,5)}
         {additem.i vPrSumm[2] code.code}
      END.
   END.

   DO i = 1 TO NUM-ENTRIES(mUsDprIDLst):
      vCurDprId = ENTRY(i,mUsDprIDLst).
      FOR EACH kau WHERE
               kau.kau-id BEGINS "КодСмены"
           AND kau.kau    EQ     vCurDprId
         NO-LOCK,
          EACH kau-entry WHERE
               kau-entry.kau-id    EQ kau.kau-id
           AND kau-entry.kau       EQ kau.kau
           AND kau-entry.op-date   EQ mCuDate
           AND kau-entry.op-status >= mStatus
         NO-LOCK,
         FIRST xop OF kau-entry WHERE
         NO-LOCK
         BREAK 
         BY kau-entry.op:

         IF FIRST-OF(kau-entry.op) THEN 
         DO:
            vIsSvod = NO.
            FOR EACH blinks WHERE 
                     blinks.link-id   EQ vOpLnk
                 AND blinks.source-id EQ STRING(xop.op) 
               NO-LOCK:
               vOp = INT64(blinks.target-id).
               FIND FIRST op WHERE 
                          op.op = vOp
                  NO-LOCK NO-ERROR.
               {rst-136i.i}
               vIsSvod = YES.
            END.

            IF NOT CAN-FIND(blinks WHERE 
                            blinks.link-id   EQ vOpLnk 
                        AND blinks.target-id EQ STRING(xop.op) NO-LOCK)
               AND vIsSvod EQ NO THEN
            DO:
               FIND FIRST op WHERE 
                          op.op = xop.op 
                  NO-LOCK NO-ERROR.
               {rst-136i.i}
            END.
         END.
      END.
      /* Создание пустых реестров */ 
      IF fGetSetting("Реестр136-И","ВсеДниСмены","Да") EQ "Нет" THEN
      DO:
         IF NOT CAN-FIND(FIRST ttRegister WHERE 
                               ttRegister.dpr-id EQ INT64(vCurDprId)) THEN
         DO:
            CREATE ttRegister.
            ASSIGN
               ttRegister.dpr-id   = INT64(vCurDprId)
               ttRegister.vain     = YES
               ttRegister.doc-date = mCuDate
               .
            RELEASE ttRegister.
         END.
      END.   
      ELSE
      DO: 
         FIND FIRST bsessions WHERE 
                    bsessions.dpr-id EQ INT64(vCurDprId)
            NO-LOCK NO-ERROR.
         IF AVAIL bsessions THEN
         DO:
            DO vI = 0 TO ((IF bsessions.dpr-status EQ "ЗАКРЫТА" THEN bsessions.dpr-close ELSE TODAY) - bsessions.dpr-open):
               IF NOT CAN-FIND(FIRST ttRegister WHERE 
                                     ttRegister.dpr-id   EQ INT64(vCurDprId)
                                 AND ttRegister.doc-date EQ bsessions.dpr-open + vI) THEN
               DO:
                  CREATE ttRegister.
                  ASSIGN
                     ttRegister.dpr-id   = INT64(vCurDprId)
                     ttRegister.vain     = YES
                     ttRegister.doc-date = bsessions.dpr-open + vI
                     .
                  RELEASE ttRegister.
               END.
            END.                 
         END.
      END.                 
   END.   
END PROCEDURE.

PROCEDURE GetCountry.

   DEFINE VARIABLE vFIO              AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vPassport         AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vAddress          AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vResident         AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vBirthDay         AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vBirthPlace       AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vVidOpNalV        AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vDocum            AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vFIO2             AS CHARACTER   NO-UNDO.

   DEFINE OUTPUT PARAMETER oCountry  AS CHARACTER   NO-UNDO.
   DEFINE OUTPUT PARAMETER oResident AS CHARACTER   NO-UNDO.

   IF NOT AVAIL op THEN
      RETURN.

   vVidOpNalV = GetXAttrValue("op",STRING(op.op), "ВидОпНалВ").

   IF (GetXAttrValue("op",STRING(op.op), "Довер") EQ "Да") AND
      CAN-DO(mOperAcct,vVidOpNalV)
   THEN
   DO:
      RUN GetClParamByAcct IN THIS-PROCEDURE(op.op, YES, OUTPUT oCountry, OUTPUT vFIO,
                                             OUTPUT vPassport, OUTPUT vAddress, 
                                             OUTPUT vResident,OUTPUT vBirthDay,
                                             OUTPUT vBirthPlace).
      IF    oCountry EQ "nnn" 
         OR oCountry EQ "999" THEN
         oCountry = "000".
      oResident = "".
      IF (({assigned vFIO})      AND
         ({assigned vPassport})  AND
         ({assigned vAddress})   AND
         ({assigned vBirthDay})  AND
         ({assigned vBirthPlace}))
      THEN RETURN.
   END.



/*=============================================================*/
/* oCountry = GetXAttrValue("op",STRING(op.op), "country-pers"). */

   vDocum = string(GetXAttrValue("op", string(op.op), "Докум")).
   vFIO2  = string(GetXAttrValue("op", string(op.op), "ФИО")).

   IF {assigned vDocum}
     THEN
       DO:
         FIND FIRST person WHERE person.name-last + " " + person.first-names = vFIO2 NO-LOCK NO-ERROR.
           IF AVAIL person
             THEN
               DO:
                 IF CAN-DO(CHR(42) + string(person.document) + CHR(42), string(vDocum))
                   THEN oCountry = GetTempXAttrValueEx("person", string(person-id), "country-id2", date('01/01/9999'), "").
               END.

       END.
/*=============================================================*/

   if GetXAttrValue("op",STRING(op.op), "country-pers") <> ? 
      and GetXAttrValue("op",STRING(op.op), "country-pers") <> "" 
      then oCountry = GetXAttrValue("op",STRING(op.op), "country-pers"). 


   IF NOT {assigned oCountry} THEN DO:
      RUN GetClParamByAcct(op.op, YES, OUTPUT oCountry, OUTPUT vFIO, OUTPUT vPassport, OUTPUT vAddress, OUTPUT vResident,OUTPUT vBirthDay,OUTPUT vBirthPlace).
      oResident = "".
   END.
   ELSE
      IF     oCountry NE "nnn" 
         AND oCountry NE "999" THEN
      DO:
         oResident = IF oCountry EQ mCodeRes THEN "ДА" ELSE "НЕТ".
         FIND FIRST country WHERE 
                    country.country-id EQ oCountry
            NO-LOCK NO-ERROR.                
         oCountry = IF AVAILABLE country THEN
                        STRING(country.country-alt-id,"999")
                     ELSE
                        oCountry.
      END.
      ELSE
         ASSIGN
            oCountry = "000"
            oResident = ""
         .
   IF (oCountry EQ '-') THEN
      oCountry = '000'.
END PROCEDURE.

FUNCTION GetPassport CHAR (iOp AS INT64):
   DEF VAR vPassport   AS CHAR NO-UNDO.
   DEF VAR vCustDocWho AS CHAR NO-UNDO.
   DEF VAR vKp         AS CHAR NO-UNDO. 
   /* Проверяем, введен ли паспорт на документе */
   vPassport   = GetXAttrValue("op", STRING(iOp), "Докум").
   IF vPassport NE "" THEN
   DO:
   /* Получаем номер документа */
      vKp         = GetXAttrValue("op", STRING(iOp), "подразд").
      vCustDocWho = GetXAttrValue("op", STRING(iOp), "cust-doc-who").
      IF {assigned vCustDocWho} THEN
         IF {assigned vKp} THEN 
            IF NUM-ENTRIES(vCustDocWho) > 1 THEN
               ENTRY(2,vCustDocWho) = " К~\П " + vKp.
            ELSE
               vCustDocWho = vCustDocWho + ", К~\П " + vKp.
      ELSE
         IF NUM-ENTRIES(vCustDocWho) > 1 THEN
            ENTRY(2,vCustDocWho) = " К~\П " + ENTRY(2,vCustDocWho).

      vPassport   =  GetCodeName("КодДокум",GetXAttrValue("op", STRING(iOp), "document-id"))  
         + ", " + vPassport
         + ", " + vCustDocWho
         + ", " + GetXAttrValue("op", STRING(iOp), "Document4Date_vid")
         .
   END.
   /* Убираем лишние запятые */
   vPassport = TRIM(REPLACE(REPLACE(vPassport, ", , ", ", "), ", , ", ", "), ", ").

   RETURN vPassport.
END FUNCTION.

/* Определение параметров клиента по счетам проводок */
PROCEDURE GetFioByAcct. 
   DEFINE INPUT  PARAMETER iOp       AS INT64       NO-UNDO.
   DEFINE OUTPUT PARAMETER oFio      AS CHARACTER   NO-UNDO.
   DEFINE OUTPUT PARAMETER oPasport  AS CHARACTER   NO-UNDO.
   DEFINE OUTPUT PARAMETER oAddress  AS CHARACTER   NO-UNDO.
   DEFINE OUTPUT PARAMETER oBirthDay AS CHARACTER   NO-UNDO.

   DEFINE VARIABLE vCountry   AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vResident  AS CHARACTER   NO-UNDO.
   DEFINE VARIABLE vBirthPlace  AS CHARACTER   NO-UNDO.

   RUN GetClParamByAcct(iOp, YES, OUTPUT vCountry, OUTPUT oFio, OUTPUT oPasport, OUTPUT oAddress, OUTPUT vResident, OUTPUT oBirthDay,OUTPUT vBirthPlace).
/*   oBirthDay = oBirthDay + " " + vBirthPlace.*/
   oBirthDay = string(date(oBirthDay), "99/99/9999") + "  " + vBirthPlace.

END PROCEDURE. /* GetFioByAcct */

/* Определение параметров клиента по счетам проводок */
FUNCTION CutFio CHAR (iFio AS CHARACTER):

   DEFINE VARIABLE i    AS INT64       NO-UNDO.
   DEFINE VARIABLE vIO  AS CHARACTER   NO-UNDO.
   
   IF NUM-ENTRIES(iFio," ") > 2 THEN
   DO:
      DO i = NUM-ENTRIES(iFio," ") TO (NUM-ENTRIES(iFio," ") - 1) BY -1:
         vIO = SUBSTRING(ENTRY(i,iFio," "),1,1) + "." + vIO.      
      END.
      DO i = NUM-ENTRIES(iFio," ") TO (NUM-ENTRIES(iFio," ") - 2) BY -1:
         ENTRY(i,iFio," ") = " ".
      END.
   END.

   RETURN RIGHT-TRIM(iFio) + " " + vIO.

END FUNCTION. /* GutFio */

PROCEDURE CrItog.
   DEFINE INPUT  PARAMETER iChrRate AS CHARACTER   NO-UNDO.
   FIND FIRST ttRegItog WHERE 
              ttRegItog.doc-date EQ ttRegister.doc-date
          AND ttRegItog.doc-kind EQ ttRegister.doc-kind
          AND ttRegItog.ChRate   EQ iChrRate
          AND ttRegItog.curr-db  EQ ttRegister.curr-db
          AND ttRegItog.curr-cr  EQ ttRegister.curr-cr
          AND ttRegItog.currcheq EQ ttRegister.currcheq
          AND ttRegItog.curr-com EQ ttRegister.curr-com
          AND (IF mAlterForm THEN (ttRegItog.resident EQ ttRegister.resident ) ELSE YES)
      EXCLUSIVE-LOCK NO-ERROR NO-WAIT.
   IF NOT AVAIL ttRegItog THEN
   DO:
      CREATE ttRegItog.
      ASSIGN
         ttRegItog.doc-date = ttRegister.doc-date
         ttRegItog.doc-kind = ttRegister.doc-kind
         ttRegItog.ChRate   = iChrRate
         ttRegItog.curr-db  = ttRegister.curr-db 
         ttRegItog.amt-db   = ttRegister.amt-db
         ttRegItog.curr-cr  = ttRegister.curr-cr
         ttRegItog.amt-cr   = ttRegister.amt-cr
         ttRegItog.cheq-qty = ttRegister.cheq-qty
         ttRegItog.currcheq = ttRegister.currcheq
         ttRegItog.amt-cheq = ttRegister.amt-cheq
         ttRegItog.curr-com = ttRegister.curr-com
         ttRegItog.amt-com  = ttRegister.amt-com
         ttRegItog.resident = ttRegister.resident
         ttRegItog.count    = 1
         .
   END.
   ELSE
      ASSIGN
         ttRegItog.amt-db   = ttRegItog.amt-db   + ttRegister.amt-db
         ttRegItog.amt-cr   = ttRegItog.amt-cr   + ttRegister.amt-cr
         ttRegItog.cheq-qty = ttRegItog.cheq-qty + ttRegister.cheq-qty
         ttRegItog.amt-cheq = ttRegItog.amt-cheq + ttRegister.amt-cheq
         ttRegItog.amt-com  = ttRegItog.amt-com  + ttRegister.amt-com
         ttRegItog.count    = ttRegItog.count    + 1
         .
END PROCEDURE.
/* $LINTFILE='rst-136i.p' */
/* $LINTMODE='1' */
/* $LINTENV ='dpl' */
/* $LINTVSS ='$/ws3-dpl/bq' */
/* $LINTUSER='stre' */
/* $LINTDATE='08/06/2016 14:46:34.751+03:00' */
/*prosignW4NrHrY/uLtMgqM3+y1OVQ*/

