DEF {1} SHARED VAR buf-copy-doc AS CHAR NO-UNDO.
DEF     SHARED VAR ref-920      AS CHAR NO-UNDO.

DEF VAR mTag32       AS CHAR  NO-UNDO.
DEF VAR mMultiPulti  AS LOG   NO-UNDO.
DEF VAR buf-work     AS CHAR  NO-UNDO. /* для формирования вых стр */
DEF VAR buf-s        AS CHAR  NO-UNDO. /* формирование суммы */
DEF VAR buf-s2       AS CHAR  NO-UNDO. /* формирование суммы */
DEF VAR buf-s3       AS CHAR  NO-UNDO. /* формирование суммы */
DEF VAR begin-msg    AS CHAR  NO-UNDO. /* символ начала сообщения */
DEF VAR begin-file   AS CHAR  NO-UNDO. /* символ начала файла */
DEF VAR BUF-72       AS CHAR  NO-UNDO. /* формирование 72 */
DEF VAR bic-rec      AS CHAR  NO-UNDO. /* бик получателя */
DEF VAR char-skip    AS CHAR  NO-UNDO.
DEF VAR curr-iso     AS CHAR  NO-UNDO. /* формирование валюты */
DEF VAR detail       AS CHAR  NO-UNDO EXTENT 9. /* формирование деталей */
DEF VAR end-file     AS CHAR  NO-UNDO. /* символ конца файла */
DEF VAR end-msg      AS CHAR  NO-UNDO. /* символ конца сообщения */
DEF VAR flag-err     AS log   NO-UNDO. /* признак ошибок формата */
DEF VAR format-summ  AS CHAR  NO-UNDO. /* для формирования вых стр */
DEF VAR flagfirst950 AS log   NO-UNDO.
DEF VAR f-trans      AS log   NO-UNDO. /* применять транлит */
DEF VAR f-sendrec    AS INT64   NO-UNDO INIT 0. /* признак плат -0 / пол - 1 */
DEF VAR foreign      AS log   NO-UNDO. /* YES -  документ заруюежный */
DEF VAR flag-no-57   AS log   NO-UNDO.
DEF VAR h-tt-app     AS HANDLE NO-UNDO.
DEF VAR id-rel-mess  AS CHAR  NO-UNDO.
DEF VAR is-resident  AS log   NO-UNDO. /* Является ли получатель Резидентом */
DEF VAR i            AS INT64   NO-UNDO. /* для подсчета коллва строк в имени и т.д. */
DEF VAR i-index      AS INT64   NO-UNDO. /* для подсчета коллва строк в имени и т.д. */
DEF VAR inn-send     AS CHAR  NO-UNDO. /* инн отправителя */
DEF VAR inn-rec      AS CHAR  NO-UNDO. /* инн отправителя */
DEF VAR j            AS INT64   NO-UNDO.
DEF VAR k            AS INT64   NO-UNDO.
DEF VAR mInType      AS CHAR  NO-UNDO. /* тип входящего сообщения */
DEF VAR mCountNZP    AS INT64   NO-UNDO.  /*кол-во строк в 72м теге с NZP */
DEF VAR n-72         AS INT64   NO-UNDO. /* число строк в 72 */
DEF VAR name         AS CHAR  NO-UNDO EXTENT 4. /* формирование наименований */
DEF VAR name-send    AS CHAR  NO-UNDO EXTENT 4. /* наименование отправителя */
DEF VAR name-rec     AS CHAR  NO-UNDO EXTENT 4. /* наименование отправителя */
DEF VAR num-signs    AS INT64   NO-UNDO. /* подсчет доп рекв. */
DEF VAR outfile      AS CHAR  NO-UNDO. /* Путь и имя файла экспорта */
DEF VAR outdir       AS CHAR  NO-UNDO. /* Путь к файлу экспорта */
DEF VAR op-err-50    AS CHAR  NO-UNDO.
DEF VAR pay          AS log   NO-UNDO. /* YES -  платим мы */
DEF VAR q950-db      AS INT64   NO-UNDO.
DEF VAR q950-cr      AS INT64   NO-UNDO.
DEF VAR rec-op-bank  AS recid NO-UNDO.
DEF VAR rec-banks    AS recid NO-UNDO.
DEF VAR s950-db      AS dec   NO-UNDO.
DEF VAR s950-cr      AS dec   NO-UNDO.
DEF VAR s72          AS CHAR  NO-UNDO. /* формирование 72 */
DEF VAR srv          LIKE op-entry.amt-cur NO-UNDO.
DEF VAR tmp-status   AS CHAR  NO-UNDO. /* для выписок */
DEF VAR tmptype      AS CHAR  NO-UNDO.
DEF VAR tmpformat    AS CHAR  NO-UNDO.
DEF VAR tmpcode      AS CHAR  NO-UNDO.
DEF VAR mTmpShBal    AS DEC   NO-UNDO. /*остаток в рублях со статуса П*/
DEF VAR mTmpShVal    AS DEC   NO-UNDO. /*остаток в валюте со статуса П*/
DEF VAR mTmpShInBal  AS DEC   NO-UNDO. /*остаток в рублях со статуса П*/
DEF VAR mTmpShInVal  AS DEC   NO-UNDO. /*остаток в валюте со статуса П*/
DEF VAR mStrSumm     AS CHAR  NO-UNDO. /*остаток в формате экспорта со статуса П*/
DEF VAR var-curr     AS CHAR  NO-UNDO. /* формирование валюты */
DEF VAR VerForm      AS CHAR  NO-UNDO. /* Версия формата ( SwiftRur5) */
DEF VAR v            AS CHAR  NO-UNDO EXTENT 10.
DEF VAR vcd          AS CHAR  NO-UNDO.
DEF VAR vmie         AS CHAR  NO-UNDO.
DEF VAR vmt          AS CHAR  NO-UNDO.
DEF VAR vmf          AS CHAR  NO-UNDO.
DEF VAR mFormat-ISO  AS CHAR NO-UNDO.  /* Format-ISO                          */ 
DEF VAR vMsg          AS CHAR NO-UNDO.
DEFINE VARIABLE vDigital LIKE doc-type.digital NO-UNDO.

DEF BUFFER xop-bank FOR op-bank.
DEF BUFFER xbanks-code FOR banks-code.
DEF BUFFER xacct FOR acct.
DEF BUFFER db-op-entry FOR op-entry.
DEF BUFFER bop-entry FOR op-entry.

DEF TEMP-TABLE buf-copy-doc NO-UNDO
   FIELD str AS CHAR.

{globals.i}
{intrface.get xclass}
{intrface.get op}
{intrface.get import}
{intrface.get strng}
{intrface.get swi_n}
{impexp.fun &SignsFun="YES"} /* Функции транлитерации */
{imp.wrk new}
{intrface.get exch}

&GLOBAL-DEFINE NullTag  "NULLTAG"
&GLOBAL-DEFINE St64 IF FGetSetting('SWIFT','st-64','') NE '' THEN ~
                       FGetSetting('SWIFT','st-64','') ~
                    ELSE tmp-status
h-tt-app = widget-handle(GetSysConf("bss-app")).

PROCEDURE cr-buf-copy-doc:
   DEF INPUT PARAM InStr AS CHAR NO-UNDO.
   IF TRIM(instr) = "" THEN RETURN.
   CREATE buf-copy-doc.
   buf-copy-doc.str = InStr.
END PROCEDURE.


PROCEDURE upd-buf-copy-doc:
   DEF INPUT PARAM InStr1 AS CHAR NO-UNDO.
   DEF INPUT PARAM InStr2 AS CHAR NO-UNDO.

   FOR EACH buf-copy-doc:
      IF buf-copy-doc.str BEGINS InStr1
         THEN buf-copy-doc.str = InStr2.
   END.
END PROCEDURE.


PROCEDURE put-buf-copy-doc:
   FOR EACH buf-copy-doc:
      IF buf-copy-doc.str BEGINS "TEST:" THEN
      DO:
         IF session:remote
            THEN RUN cr-tt-msg IN h-tt-app
                    ("TEST:" + FILL(" ",10) + "FOR " + curr-iso +  " " + buf-s3).
         ELSE PUT UNFORMATTED "TEST:" + FILL(" ",10) + "FOR " + curr-iso +  " " + buf-s3 SKIP.
      END.
      ELSE DO:
         IF session:remote THEN RUN cr-tt-msg IN h-tt-app (buf-copy-doc.str).
         ELSE PUT UNFORMATTED buf-copy-doc.str SKIP.
      END.
   END.
   RUN del-buf-copy-doc.
END PROCEDURE.

&IF "{2}" = "use-dbi" &THEN
PROCEDURE put-buf-copy-doc100:
   DEFINE VARIABLE vPos AS INT64    NO-UNDO.
   vPos = INDEX(buf-work,{&NullTag}). 
   IF vPos = 0 THEN 
     PUT CONTROL buf-work.
   ELSE DO:
     IF vPos = 1 THEN 
        PUT CONTROL NULL SUBSTR(buf-work,LENGTH({&NullTag}) + 1).
     ELSE
        PUT CONTROL SUBSTR(buf-work,1,1) NULL.
   END.
   FOR EACH buf-copy-doc:
      PUT UNFORMATTED buf-copy-doc.str + CHR(13) + CHR(10).
      {additem2.i buf-copy-doc buf-copy-doc.str "~n"}
   END.
   PUT UNFORMATTED FILL(" ",i).
   RUN del-buf-copy-doc.
END PROCEDURE.
&ENDIF

PROCEDURE put-buf-copy-doc-942:
   FOR EACH buf-copy-doc:
      IF buf-copy-doc.str BEGINS "TEST:" THEN
      DO:
         IF session:remote
            THEN RUN cr-tt-msg IN h-tt-app
                     ("TEST:" + FILL(" ",10) + "FOR " + curr-iso).
         ELSE PUT UNFORMATTED "TEST:" + FILL(" ",10) + "FOR " + curr-iso SKIP.
      END.
      ELSE DO:
         IF session:remote THEN RUN cr-tt-msg IN h-tt-app (buf-copy-doc.str).
         ELSE PUT UNFORMATTED buf-copy-doc.str SKIP.
      END.
   END.
   RUN del-buf-copy-doc.
END PROCEDURE.

PROCEDURE caps-buf-copy-doc:
   FOR EACH buf-copy-doc:
      buf-copy-doc.str = CAPS(buf-copy-doc.str).
   END.
END PROCEDURE.

PROCEDURE del-buf-copy-doc:
   FOR EACH buf-copy-doc:
       DELETE buf-copy-doc.
   END.
END PROCEDURE.

&IF "{2}" = "use-dbi" &THEN

PROCEDURE ln-buf-copy-doc:
   DEF VAR Data10 AS INT64 NO-UNDO. 
   DEF VAR Result256 AS CHAR INIT '' NO-UNDO.

   DEF OUTPUT PARAM NumSb AS CHAR NO-UNDO.
   DEF OUTPUT PARAM NumSp AS INT64 NO-UNDO.
   DEF VAR StrTmp AS CHAR NO-UNDO.
   DEF VAR i AS INT64 NO-UNDO.
   FOR EACH buf-copy-doc:
       buf-copy-doc.str = translit-exp(buf-copy-doc.str).
       IF buf-copy-doc.str NE "" THEN
          NumSp = NumSp + LENGTH(buf-copy-doc.str) + 2.
   END.
   ASSIGN
      data10    = NumSp - 2
      Result256 = IF Data10 MOD 256 > 0 THEN CHR(Data10 MOD 256) ELSE {&NullTag}
      Data10    = TRUNC(Data10 / 256,0)
      Result256 = (IF Data10 > 0 THEN CHR(Data10) ELSE {&NullTag}) + Result256
      NumSb     = Result256
      NumSp     = 3200 - NumSp - 2.
END PROCEDURE.
&ENDIF

FUNCTION 32-buf-copy-doc RETURNS CHAR:
   DEF VAR WrkStr AS CHAR NO-UNDO.
   FOR EACH buf-copy-doc:
      IF (LENGTH(WrkStr) + LENGTH(buf-copy-doc.str) + 1) < 3000
         THEN WrkStr = WrkStr + "~n" + buf-copy-doc.str.
      ELSE RETURN WrkStr.
   END.
   RETURN WrkStr.
END FUNCTION.
/*для экспорта сводных документов
  когда дата = ?
*/
FUNCTION OpDate RETURN DATE ():
   DEF BUFFER xop FOR op.
   DEF VAR vstr         AS CHAR  NO-UNDO INITIAL "link-op-sum".
   DEF VAR zop          AS CHAR  NO-UNDO.
   zop = GetXAttrValueEx("op",STRING(op.op),vstr,STRING(op.op)).
   FIND FIRST xop WHERE xop.op EQ INT64(zop) NO-LOCK NO-ERROR.
   RETURN xop.op-date.
END FUNCTION.

/*----------------------------------------------------------------------------*/
/*    при использовании настроечного параметра SwoFrmt8x3 у номера сеанса     */
/*    берется только младший разряд (0045787)                                 */
/*----------------------------------------------------------------------------*/
FUNCTION GetFrmtSeriesNum CHAR (INPUT iSeriesNum AS CHAR):
   RETURN IF   FGetSetting("SWIFT","SwoFrmt8x3","Нет") EQ "Да"
          THEN SUBSTRING(iSeriesNum,
                         length(iSeriesNum,"CHARACTER"), 
                         length(iSeriesNum,"CHARACTER"),
                         "CHARACTER")
          ELSE iSeriesNum.
END FUNCTION.

{sw-msg.cp}
