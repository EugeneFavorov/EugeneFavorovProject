/* kam
	считаем долги по фифо
*/

{globals.i}
{tmprecid.def}
{intrface.get xclass}
{intrface.get loan}

def var oke as logical.
def var dateotst as date no-undo FORMAT "99/99/9999".
def var sumotst as decimal no-undo FORMAT ">>>>>>>>>>>>>>>>>9.99".
def var sumod as decimal no-undo.
def var sumproc as decimal no-undo.
def var sumpeni as decimal no-undo.
def var listall as char no-undo. /* все параметры */
def var listproc as char no-undo. /* параметры для % */
def var listproc2 as char no-undo. /* параметры для % */
def var listod as char no-undo. /* параметры для ОД */
def var listpeni as char no-undo. /* параметры для пеней */
def var listpeni2 as char no-undo. /* параметры для пеней 2*/
def var tmpsum as dec no-undo.

        DEF VAR pp-seq as char no-undo. 
        DEF VAR pp-k as int64 no-undo.
        DEF VAR pp-par as int64 no-undo.
        DEF VAR pp-sum as de no-undo.   
        DEF VAR pp-sum2 as de no-undo.   
        DEF VAR pp-sum1 as de no-undo extent 2.
        DEF VAR pp-contcode as char no-undo.
        DEF VAR pp-total as de no-undo. 
        DEF VAR pp-mainsum as de no-undo init 0.


sumotst = 0.
sumod = 0.
sumproc = 0.
sumpeni = 0.
listall = '10,210,48,248,7'.
listod = '7,0'.
listproc = '10,210,48,248'.
listproc2 = '233,229,33,29,4,8'.
listpeni = '9,12,82'.
listpeni2 = '509,519'.

    DEFINE temp-table all-sum-par no-undo    /* операции по параметрам до даты возникновения просрочки */
        field par as int64
        field summ as de
        field date as date
    .
    
    DEFINE TEMP-TABLE each-par no-undo    /* остатки на параметрах */
        field par as int64
        field total as de 
    .
    

/*
message "0" view-as alert-box.
*/

find first tmprecid no-lock no-error.
if avail tmprecid then do:
find FIRST loan WHERE RECID(loan) = tmprecid.id NO-LOCK no-error.
if avail loan then do:
    /*
    message "1" view-as alert-box.
    */
    dateotst = loan.since.

    pause 0.
    define FRAME frame_date_codes 
     sumotst  label "Cумма отступного"
     dateotst label "Дата отступного"
     with 1 COL 1 down
     
width 50 CENTERED OVERLAY row 10 TITLE "Отступное: " + loan.doc-ref.

  do ON ERROR  UNDO, LEAVE
   ON ENDKEY UNDO, LEAVE:

   UPDATE
      sumotst
      dateotst
    
   WITH FRAME frame_date_codes
   EDITING:
   READKEY.
   if LASTKEY EQ KEYCODE("ESC") THEN
    return.
   if LASTKEY EQ KEYCODE("F1")
        THEN do:
            CASE FRAME-FIELD:
            WHEN "dateotst" THEN
                DO:
                run calend.p.
                if (lastkey eq 13 or
                lastkey eq 10) and
                pick-value ne ?
                then frame-value = string(date(pick-value), "99/99/9999").
            END.

            END CASE.
        end.
        ELSE APPLY LASTKEY.
   end. /* EDITING: */
  end.  /* do on */ 
    
        if loan.since <> dateotst then do:

        RUN l-calc2.p ("Кредит",       /* Назначение договора. */
                   loan.cont-code,      /* Номер договора. */
                   dateotst,   /* Окончание договора + день для выполнения автом. */
                   FALSE,               /* включать/не включать пересчет течений договора */
                   TRUE).               /* выводить/ не выводить протокол на экран */
        end.



    if sumotst > 0 then do:
    
        pp-total = sumotst.
                {empty all-sum-par}
                {empty each-par}
                pp-contcode = loan.cont-code.
                pp-seq  = listall.
                
                do pp-k = 1 to num-entries(pp-seq,","):     /* остатки по параметрам */
                    RUN STNDRT_PARAM in h_Loan  ("Кредит",          /* Назначение договора */
                                pp-contcode,                        /* Номер договора */
                                ENTRY(pp-k,pp-seq,","),             /* Код параметра  */
                                dateotst,                       /* На дату (вх.остаток) */
                                OUTPUT pp-sum,
                                OUTPUT pp-sum1[1], OUTPUT pp-sum1[2]).
                    RUN inter_current(BUFFER loan, ENTRY(pp-k,pp-seq,","), OUTPUT tmpsum).
                    pp-sum = pp-sum + tmpsum.
                    if pp-sum > 0 then do:
                        create each-par.
                        assign 
                            each-par.par = int(entry (pp-k,pp-seq,","))
                            each-par.total = pp-sum
                        .
                    end.
                end.
                for each loan-int 
                    where loan-int.cont-code = pp-contcode and lookup(string(loan-int.id-d),pp-seq) > 0
                    and loan-int.mdate < dateotst no-lock
                    break by loan-int.mdate DESCENDING:
                        find first each-par where each-par.par = loan-int.id-d no-lock no-error.
                        if avail each-par and (each-par.total > 0) then do:
                            create all-sum-par.
                            assign
                                all-sum-par.par = loan-int.id-d
                                all-sum-par.date = loan-int.mdate
                                all-sum-par.summ = minimum (loan-int.amt-rub, each-par.total)
                            .                               
                            assign each-par.total = each-par.total - all-sum-par.summ.                          
                        end.                        
                end.

                for each all-sum-par /* выбор операций для гашения */
                    break by all-sum-par.date by lookup(string(all-sum-par.par),pp-seq):
                        if all-sum-par.summ <= pp-total 
                            then pp-total = pp-total - all-sum-par.summ.
                            else do:
                                assign all-sum-par.summ = pp-total.
                                pp-total = 0.   
                            end.                    
                end.
                
    end. /* if sumotst > 0 then do: */

        for each all-sum-par where lookup(string(all-sum-par.par),listod) > 0 no-lock:
            sumod = sumod + all-sum-par.summ.         
        end.

        for each all-sum-par where lookup(string(all-sum-par.par),listproc) > 0 no-lock:
            sumproc = sumproc + all-sum-par.summ.         
        end.
        
        sumpeni = 0.
        do pp-k = 1 to num-entries(listpeni,","):     /* остатки по параметрам */
            RUN inter_current(BUFFER loan, ENTRY(pp-k,listpeni,","), OUTPUT pp-sum2).
            if pp-sum2 <= pp-total then do:
                pp-total = pp-total - pp-sum2.
            end.
            else do:
                pp-sum2 = pp-total.
                pp-total = 0.   
            end.    
            sumpeni = sumpeni + pp-sum2.
        end.


/* test! */
/*
                    RUN STNDRT_PARAM in h_Loan  ("Кредит",          /* Назначение договора */
                                pp-contcode,                        /* Номер договора */
                                '4',             /* Код параметра  */
                                dateotst,                       /* На дату (вх.остаток) */
                                OUTPUT pp-sum,
                                OUTPUT pp-sum1[1], OUTPUT pp-sum1[2]).
                    RUN inter_current(BUFFER loan, '4', OUTPUT tmpsum).
                    pp-sum = pp-sum + tmpsum.
message "4 = "  + string(pp-sum) view-as alert-box.
*/
/* end of test */
                                
                {empty all-sum-par}
                {empty each-par}
/* 233,229,33,29,4,8  */
            pp-seq = listproc2.
                do pp-k = 1 to num-entries(pp-seq,","):     /* остатки по параметрам */
                    RUN STNDRT_PARAM in h_Loan  ("Кредит",          /* Назначение договора */
                                pp-contcode,                        /* Номер договора */
                                ENTRY(pp-k,pp-seq,","),             /* Код параметра  */
                                dateotst,                       /* На дату (вх.остаток) */
                                OUTPUT pp-sum,
                                OUTPUT pp-sum1[1], OUTPUT pp-sum1[2]).
                    RUN inter_current(BUFFER loan, ENTRY(pp-k,pp-seq,","), OUTPUT tmpsum).
                    pp-sum = pp-sum + tmpsum.
                    for each loan-int 
                        where loan-int.cont-code = pp-contcode and string(loan-int.id-d) = ENTRY(pp-k,pp-seq,",")
                        and (loan-int.id-k = 30 or loan-int.id-k = 32 or loan-int.id-k = 8)
                        and loan-int.mdate = dateotst no-lock:
                            pp-sum = pp-sum - loan-int.amt-rub.
                    end.
                    
                    if pp-sum > 0 then do:
                        create each-par.
                        assign 
                            each-par.par = int(entry (pp-k,pp-seq,","))
                            each-par.total = pp-sum
                        .
                    end.
                end.
                for each loan-int 
                    where loan-int.cont-code = pp-contcode and lookup(string(loan-int.id-d),pp-seq) > 0
                    and loan-int.mdate < dateotst no-lock
                    break by loan-int.mdate DESCENDING:
                        find first each-par where each-par.par = loan-int.id-d no-lock no-error.
                        if avail each-par and (each-par.total > 0) then do:
                            create all-sum-par.
                            assign
                                all-sum-par.par = loan-int.id-d
                                all-sum-par.date = loan-int.mdate
                                all-sum-par.summ = minimum (loan-int.amt-rub, each-par.total)
                            .                               
                            assign each-par.total = each-par.total - all-sum-par.summ.                          
                        end.                        
                end.

                for each all-sum-par /* выбор операций для гашения */
                    break by all-sum-par.date by lookup(string(all-sum-par.par),pp-seq):
                        if all-sum-par.summ <= pp-total 
                            then pp-total = pp-total - all-sum-par.summ.
                            else do:
                                assign all-sum-par.summ = pp-total.
                                pp-total = 0.   
                            end.                    
                end.

/* 0 */
        RUN STNDRT_PARAM in h_Loan  ("Кредит",          /* Назначение договора */
                                loan.cont-code,                        /* Номер договора */
                                '0',             /* Код параметра  */
                                dateotst,                       /* На дату (вх.остаток) */
                                OUTPUT pp-sum,
                                OUTPUT pp-sum1[1], OUTPUT pp-sum1[2]).
        if pp-sum <= pp-total then do:
                pp-total = pp-total - pp-sum.
            end.
            else do:
                pp-sum = pp-total.
                pp-total = 0.   
            end.    
        sumod = sumod + pp-sum.                       


        do pp-k = 1 to num-entries(listpeni2,","):     /* остатки по параметрам */
            RUN inter_current(BUFFER loan, ENTRY(pp-k,listpeni2,","), OUTPUT pp-sum2).
            if pp-sum2 <= pp-total then do:
                pp-total = pp-total - pp-sum2.
            end.
            else do:
                pp-sum2 = pp-total.
                pp-total = 0.   
            end.    
            sumpeni = sumpeni + pp-sum2.
        end.
        
        for each all-sum-par where lookup(string(all-sum-par.par),listproc2) > 0 no-lock:
            sumproc = sumproc + all-sum-par.summ.         
        end.
        
        UpdateSigns(loan.class-code, loan.contract + ',' + loan.cont-code, "otst_od", string(sumod), ?) NO-ERROR.
        UpdateSigns(loan.class-code, loan.contract + ',' + loan.cont-code, "otst_proc", string(sumproc), ?) NO-ERROR.
        UpdateSigns(loan.class-code, loan.contract + ',' + loan.cont-code, "otst_peni", string(sumpeni), ?) NO-ERROR.
        UpdateSigns(loan.class-code, loan.contract + ',' + loan.cont-code, "otst_summ", string(sumotst), ?) NO-ERROR.
        UpdateSigns(loan.class-code, loan.contract + ',' + loan.cont-code, "otst_date", string(dateotst,"99.99.9999"), ?) NO-ERROR.
        Message 'Заполнили реквизиты: ' + loan.doc-ref view-as alert-box.

end. /* if avail loan then do: */
end. /* if avail tmprecid then do: */

