/*
               Банковская интегрированная система БИСквит
    Copyright: (C) 1992-2014 ЗАО "Банковские информационные системы"
     Filename: NACH-TR.P
      Comment: Версия nach-pos.p
               Начисление процентов с учетом изменения остатков по всем траншам

   Parameters: incontr 
               incontc 
               date1   
               date2   
               dat-per  
               cod-par  
               type-ost 
         Uses:
      Used by:
      Created: 8-2-2006 mitr tt 56438
     Modified: 12.01.2009 14:32 Daru     <comment>
*/

{globals.i}
{t-otch.i}
{def_work.i NEW}
{sh-defs.i}
{svarloan.def}
{sh-temp.i NEW}
{intrface.get "date"}     /* Инструменты для работы с датами */
{intrface.get loan}
{intrface.get xclass}
{intrface.get comm}
{intrface.get tmess}
{tloancond.def}

&GLOB NO_MESS YES

DEF INPUT PARAM incontr LIKE loan.contract  NO-UNDO.
DEF INPUT PARAM incontc LIKE loan.cont-code NO-UNDO.
DEF INPUT PARAM date1   LIKE loan.since LABEL "Начало расчета" NO-UNDO.
DEF INPUT PARAM date2   LIKE loan.since LABEL "Конец расчета " NO-UNDO.
DEF INPUT PARAM dat-per  AS DATE NO-UNDO .
DEF INPUT PARAM cod-par  AS INT64  NO-UNDO .
DEF INPUT PARAM type-ost AS INT64  NO-UNDO .

DEF VAR ssum    LIKE term-obl.amt NO-UNDO.
DEF VAR bal-dob LIKE term-obl.amt INIT 0.
DEF VAR isum    LIKE ssum         NO-UNDO.
DEF VAR all-sum LIKE ssum         NO-UNDO.
DEF VAR d1_     LIKE loan.since   NO-UNDO.
DEF VAR d1      LIKE loan.since   NO-UNDO.
DEF VAR cur     LIKE loan.since   NO-UNDO.
DEF VAR nldt    LIKE loan.since   NO-UNDO.
DEF VAR nldt2   LIKE loan.since   NO-UNDO.
DEF VAR bal-t   LIKE loan-var.balance    INIT -1 COLUMN-LABEL "СУММА ОСТАТКА" NO-UNDO.
DEF VAR comm-t  LIKE comm-rate.rate-comm INIT -1.
DEF VAR fix-t   LIKE comm-rate.rate-fixed    NO-UNDO.

DEF VAR i           AS INT64 NO-UNDO.
DEF VAR ind-d1      AS INT64 NO-UNDO.
DEF VAR ind-d2      AS INT64 NO-UNDO.
DEF VAR n1          AS INT64 NO-UNDO.
DEF VAR j           AS INT64 NO-UNDO.
DEF VAR ii          AS INT64 NO-UNDO.
DEF VAR fl          AS LOGICAL INIT YES NO-UNDO.
DEF VAR ndays       AS INT64     INIT 0   NO-UNDO.
DEF VAR ndays-real  AS INT64 NO-UNDO.
DEF VAR d-t         AS DATE.
DEF VAR dat-c       AS DATE.
DEF VAR xd          AS DATE.
DEF VAR dat         AS DATE.
DEF VAR name-klient AS CHAR FORMAT "x(40)" .
DEF VAR date-beg    AS DATE NO-UNDO.
DEF VAR str1        AS CHAR NO-UNDO.
DEF VAR datt        AS DATE NO-UNDO.
DEF VAR dat-tt      AS DATE NO-UNDO.
DEF VAR ch_day      AS INT64  NO-UNDO.
DEF VAR dat-y       AS DATE NO-UNDO.
DEF VAR dat-acct    AS DATE NO-UNDO.
DEF VAR dat-t1      AS DATE NO-UNDO.
DEF VAR jj          AS INT64  NO-UNDO.
DEF VAR listacct    AS CHAR NO-UNDO.
DEF VAR mFormRasch  AS CHAR NO-UNDO. /* Формула расчета процентов с ДР ВыбФормРасчПроц */
DEF VAR n           AS INT64  NO-UNDO. /* Счетчик */
DEF VAR mCheckOd    AS CHAR NO-UNDO. /* Начальное значение доп.реквизита ВыдОд */
DEF VAR mTranshV    AS LOG  NO-UNDO. /* Необходимость строить графики по плановым остаткам */
DEF VAR mRecalcLoan AS LOG  NO-UNDO.
DEF VAR mRecalcPP   AS LOG  NO-UNDO.
DEF VAR EndCommDate LIKE loan.since NO-UNDO.

DEF VAR mIsSetBase    AS LOG  NO-UNDO. /*Признак брать базу начисления 
                                         из реквизита "БазаНач"*/
DEF VAR mListBaseCalc AS CHAR NO-UNDO. /*Список баз начисления комиссий*/

DEF TEMP-TABLE commrate NO-UNDO
 FIELD commi LIKE comm-rate.commi
 FIELD since LIKE comm-rate.since
 FIELD rate  LIKE comm-rate.rate-comm
 FIELD fix   LIKE comm-rate.rate-fixed 
 INDEX ss IS UNIQUE commi since.

DEF BUFFER xcommrate  FOR commrate.
DEF BUFFER xcomm-rate FOR comm-rate .
DEF BUFFER xterm-obl  FOR term-obl .
DEF BUFFER yloan-var  FOR loan-var .
DEF BUFFER xloan-acct FOR loan-acct .
DEF BUFFER yterm-obl  FOR term-obl.


&GLOBAL-DEFINE DPS-day 0
&glob type-loan YES
/*&glob type_acct*/

DEFINE VARIABLE mCalc AS LOGICAL NO-UNDO.
DEFINE VARIABLE mAllFost AS LOGICAL NO-UNDO.
DEFINE VARIABLE mNachSumOst AS CHARACTER NO-UNDO.
DEFINE BUFFER b-fost FOR fost.
DEFINE VARIABLE vSinceCh AS DATE NO-UNDO.

vSinceCh = DATE(GetSysConf("ДатаПересчетаДоговора")) NO-ERROR.
IF ERROR-STATUS:ERROR
THEN vSinceCh = ? .

FIND FIRST loan {wh-i &f=loan &c="/*"} NO-LOCK NO-ERROR.

{workost1.i}

{lr-st.i loan.contract 'no'}

/*Определяем, как начислять комиссию НеиспК*/
{neispk.i}

FIND LAST loan-cond {wh-t &f=loan-cond &c="/*"}
      AND loan-cond.since LE date1 NO-LOCK NO-ERROR.

ASSIGN
   datt       = date2
   date-beg   = date1
   mFormRasch = GetXAttrValueEx("loan",loan.contract + "," + loan.cont-code,"ВыбФормРасчПроц",GetXAttrInit(loan.class-code,"ВыбФормРасчПроц"))
   mCheckOd   = GetXattrInit(loan.class-code,"ВыдОд")
   mIsSetBase = GetXAttrValueEx ("loan",
                                 loan.contract + "," + loan.cont-code,
                                 "ИспБазаНач", 
                                 GetXattrEx(loan.class-code,
                                            "ИспБазаНач", 
                                            "Initial")) EQ "Да"
   mListBaseCalc = GetXAttrValueEx ("loan",
                                    loan.contract + "," + loan.cont-code,
                                    "БазаНач",
                                    GetXattrEx(loan.class-code,
                                               "БазаНач",
                                               "Initial"))
   
.
IF mFormRasch EQ ? 
   THEN mFormRasch = fGetSetting("ВыбФормРасчПроц","","1").   

/* определяем дату пересчета договора */
IF vSinceCh = ?
THEN vSinceCh = loan.since.
IF mCheckOd EQ "Да" THEN
   RUN CheckTranshV (incontr,incontc,vSinceCh,OUTPUT mTranshV).    
    
qq:
DO i = (IF cod-par = ? THEN 1 ELSE cod-par) TO (IF cod-par = ? THEN EXTENT(mint) ELSE cod-par):
    ASSIGN
      date1 = date-beg
      date2 = datt
      .

    IF   mCheckOd NE "Да" 
      OR mTranshV THEN
      RUN main (incontr, incontc, date1, date2, i).      
            
       /*запускаем через процедуру*/
    RUN CalcPlanSumm.
    
END.

{intrface.del}
RETURN "".

{nach-tr.i }


PROCEDURE CalcPlanSumm.

   mCalc = YES.
   {nach-pos.i}

END PROCEDURE.


PROCEDURE SetPrmFost.
   DEFINE INPUT PARAMETER iAmtId  AS INT64   NO-UNDO. /* Код параметра. */
   DEFINE INPUT PARAMETER iAcctRecid AS RECID NO-UNDO. /* Идентификатор счета. */
END PROCEDURE.

PROCEDURE CalcPlanProc:
   DEF INPUT PARAM iBegDate AS DATE NO-UNDO.
   DEF INPUT PARAM iEndDate AS DATE NO-UNDO.
   
   DEF BUFFER tobl FOR term-obl.
   
   IF   mCheckOd NE "Да" 
    OR mTranshV THEN
     RETURN.
   
     FIND LAST tobl WHERE 
               tobl.contract  EQ incontr
           AND tobl.cont-code EQ incontc 
           AND tobl.end-date  LE iBegDate
           AND tobl.idnt      EQ 2
      NO-LOCK NO-ERROR.
      
      IF AVAIL tobl THEN
      DO:
         CREATE fost .
         ASSIGN
            fost.balance = tobl.amt
            fost.since   = tobl.end-date
         .
      END.
      FOR EACH tobl  WHERE 
               tobl.contract  EQ incontr
           AND tobl.cont-code EQ incontc 
           AND tobl.end-date  GT iBegDate
           AND tobl.end-date  LE iEndDate
           AND tobl.idnt      EQ 2
      NO-LOCK:
      
         CREATE fost .
         ASSIGN
            fost.balance = tobl.amt
            fost.since   = tobl.end-date
            .
   END.

END PROCEDURE.

/* Определяет необходимость строить графики по плановым остаткам */
PROCEDURE CheckTranshV.
   DEF INPUT  PARAM iContract AS CHAR NO-UNDO.
   DEF INPUT  PARAM iContcode AS CHAR NO-UNDO.
   DEF INPUT  PARAM iDate     AS DATE NO-UNDO .
   DEF OUTPUT PARAM oRes      AS LOG INIT NO  NO-UNDO.

   DEF VAR vDate AS DATE NO-UNDO .

   DEF BUFFER bloan FOR loan.         
   /* так как пересчет по плановым датам выполняется тогда и только тогда, если
     дата состояния равна дате открытия и на эту дату нет выдачи то это и проверяем */

   FIND FIRST bloan WHERE 
        bloan.contract EQ iContract
        AND   bloan.cont-code EQ iContcode 
   NO-LOCK NO-ERROR .
   IF iDate =  bloan.open-date 
   THEN  DO :
         vDate = bloan.since . /* ищем движения именно на 
                               дату открытия кредитной линии */
       /* Ищем первую, любую операцию выдачи (начисление на 0 параметр) 
       ** сначала на охват. договоре и на траншах */
    FOR EACH bloan WHERE 
       (bloan.contract EQ iContract
       AND   bloan.cont-code EQ iContcode )
       OR (bloan.contract EQ iContract
       AND bloan.cont-code BEGINS iContcode + " " ) 
       NO-LOCK,
       FIRST loan-int WHERE 
          loan-int.contract  EQ bloan.contract
          AND loan-int.cont-code EQ bloan.cont-code
                          AND loan-int.id-d      EQ     0
          AND loan-int.mdate     EQ vDate
      NO-LOCK:
         LEAVE.
      END.
    /* Если такая операция есть и она не позже даты пересчета договора,
    ** то поднимаем флаг */
   IF AVAIL loan-int THEN
      oRes = YES.
   END.
   ELSE oRes = YES .                                                                                                                           

END PROCEDURE.
/* $LINTUSER='BIS' */
/* $LINTENV ='1ut' */
/* $LINTVSS ='$/ws2-tst/bq/' */
/* $LINTDATE='15/10/2014 10:30:01.812+04:00' */
/* $LINTFILE='nach-tr.p' */
/*prosignX53sqbIPh927ANaiRNyS7g*/