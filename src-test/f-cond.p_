/*
               Банковская интегрированная система БИСквит
    Copyright: (C) 1992-2016 ЗАО "Банковские информационные системы"
     Filename: f-cond.p
      Comment: Экранная форма договора/сделки привлечения/размещения средств
   Parameters: нет
         Uses:
      Used by:
      Created: 16.04.2004 20:02 KSV 
     Modified: 16.04.2004 20:02 KSV      (0019947) Унификация кода с модулем
                                         ВАЛЮТНЫЙ РЫНОК.
     Modified: 07.11.2007 JADV (0082850) - Проверка полей графы "Мс" на 0 для
                                           значений периода Г, ПГ, К
     Modified: 26.09.2008 19:00 KSV      (0097966) QBIS. Добавлен
                                         ввод/изменение и удаление проц. ставки
     Modified: 05.10.2008 16:09 ariz     <comment>
*/
&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v9r12 Character
&ANALYZE-RESUME
/* Connected Databases
          bisquit          PROGRESS
*/
&Scoped-define WINDOW-NAME TERMINAL-SIMULATION


/* Temp-Table and Buffer definitions                                    */
DEFINE TEMP-TABLE tt-comm-rate NO-UNDO LIKE comm-rate
       FIELD comm-rate-curr  AS CHARACTER HELP "Валюта комиссии" /* Валюта тарифа */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
       FIELD min_value       AS DECIMAL help "Минимальное значение за весь период просрочки"  /* Минимальное значение */
       INDEX commission commission
       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-comm-rate" "comm-rate" }
       .
DEFINE TEMP-TABLE tt-comm-cond NO-UNDO LIKE comm-cond
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
       FIELD NegBaseRate     AS CHAR    /* В случае отриц.зн.баз.ставки использ.отриц.знач.(ДА) или 0(НЕТ) */  
       INDEX local__id IS UNIQUE local__id
       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-comm-cond" "comm-cond" }
       .
DEFINE TEMP-TABLE tt-loan-cond NO-UNDO LIKE loan-cond
       FIELD CondEndDate AS DATE
       FIELD vidrestrukt$ AS CHARACTER
       FIELD annuitplat$  AS DECIMAL /* АннуитПлат (Сумма аннуитетного платежа) */
       FIELD end-date AS DATE /* end-date (Дата окончания) */
       FIELD EndDateBeforeProl AS DATE /* EndDateBeforeProl (Дата окончания вклада до пролонгации) */
       FIELD kollw#gtper$ AS INT64 /* КолЛьгтПер (Количество льготных периодов) */
       FIELD kollw#gtperprc$ AS INT64 /* КолЛьгтПерПрц (Количество льготных периодов (проценты)) */
       FIELD int-offset AS CHARACTER /* int-offset (Режим смещения дат) */
       FIELD cred-offset AS CHARACTER /* cred-offset (Режим смещения дат) */
       FIELD delay-offset AS CHARACTER
       FIELD delay-offset-int AS CHARACTER
       FIELD cred-mode AS CHARACTER /* cred-mode (Способ задания плат.периода (осн.долг)) */
       FIELD int-mode AS CHARACTER /* int-mode (Способ задания плат.периода (проценты)) */
       FIELD DateDelay AS INT64 /* DateDelay (День окончания плат.периода (осн.долг)) */
       FIELD DateDelayInt AS INT64 /* DateDelayInt (День окончания плат.периода (проценты)) */
       FIELD cred-work-calend AS LOGICAL /* cred-work-cale (Режим расчета продолж.периода (осн.долг)) */
       FIELD cred-curr-next AS LOGICAL /* cred-curr-next (Режим расчета окончания периода(осн.долг) */
       FIELD int-work-calend AS LOGICAL /* int-work-calen (Режим расчета продолж.периода (проценты)) */
       FIELD int-curr-next AS LOGICAL /* int-curr-next (Режим расчета окончания периода (проц.)) */
       FIELD Prolong AS LOGICAL /* Prolong (Пролонгция вклада) */
       FIELD PayType AS CHARACTER /* PayType (Тип платежа по основному долгу) */
       FIELD PaySum AS DECIMAL /* PaySum (Сумма платежа) */
       FIELD shemaplat$ AS LOGICAL /* СхемаПлат (Схема платежа) */
       FIELD isklmes$ AS LOGICAL /* ИсклМес (Наличие исключений месяцев) */
       FIELD NDays AS INT64 /* Количество дней действия условия */
       FIELD NMonthes AS INT64 /* Количество месяцев действия условия */
       FIELD NYears AS INT64 /* Количество лет действия условия */
       FIELD Test01 AS CHARACTER /* Test01 (Test01) */
       FIELD kredplat$ AS DECIMAL /* КредПлат (Сумма периодич.платежа погаш. осн.долга) */
       FIELD annuitkorr$ AS INT64       /* ДР АннуитКорр */
       FIELD grperiod$ AS LOG /* ДР ГрПериод */
       FIELD grdatas$ AS DATE /* ДР ГрДатаС */
       FIELD grdatapo$ AS DATE /* ДР ГрДатаПо */
       FIELD poslpd$ AS DATE /* ДР ПослПД */
       FIELD PartAmount AS DECIMAL /* ДР Доля кредита первого периода */
       FIELD FirstPeriod AS INT64 /* ДР Продолжительность первого периода в месяцах */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-loan-cond" "" }
       .
DEFINE TEMP-TABLE tt-MonthOut NO-UNDO LIKE term-obl
       FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
       FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
       FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
       FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
       FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
       FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
       FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
       FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-MonthOut" "MonthOut" }
       .
DEFINE TEMP-TABLE tt-MonthSpec NO-UNDO LIKE term-obl
       FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
       FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
       FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
       FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
       FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
       FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
       FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
       FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-MonthSpec" "MonthSpec" }
       .
DEFINE TEMP-TABLE tt-term-amt NO-UNDO LIKE term-obl
       FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
       FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
       FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
       FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
       FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
       FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
       FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
       FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-term-amt" "term-amt" }
       .
DEFINE TEMP-TABLE tt-uploan NO-UNDO LIKE loan
       FIELD datasogl$ AS DATE /* ДатаСогл (Дата заключения кредитного договора) */
       FIELD main-loan-cust AS CHARACTER /* main-loan-cust (Основная роль клиента) */
       FIELD akt_vzv$ AS CHARACTER /* Акт_взв (Активы взешенные с учетом риска) */
       FIELD data_uar$ AS CHARACTER /* Дата_УАР (Номер и дата подтверждения УАР) */
       FIELD dosroka$ AS CHARACTER /* ДоСРОКА (Нельзя снимать средства до срока) */
       FIELD igndtokwc$ AS LOGICAL /* ИгнДтОкч (Игнорировать дату окончания договора) */
       FIELD okrugsum$ AS LOGICAL /* ОкругСум (Округление суммы плановых платежей) */
       FIELD sindkred$ AS LOGICAL /* СиндКред (Синдицированный кредит) */
       FIELD BankCust AS CHARACTER /* BankCust (Код клиента исполняющего банка) */
       FIELD Bfnc AS CHARACTER /* Bfnc (Код функции Bfnc в DBI) */
       FIELD CallAcct AS CHARACTER /* CallAcct (DBI счет требований по аккредитиву) */
       FIELD dateend AS DATE /* dateend (Дата окончания/закрытия из ldmfDD.txt) */
       FIELD DTKind AS CHARACTER /* DTKind (Разновидность сделки для Decision Table) */
       FIELD DTType AS CHARACTER /* DTType (Вид договора для Decision Table) */
       FIELD Exec_D AS LOGICAL /* Exec_D (Не учитывать при подсчете кол-ва дог.) */
       FIELD IntAcct AS CHARACTER /* IntAcct (Процентный DBI счет) */
       FIELD list_type AS CHARACTER /* list_type (Список типов счетов для авт. закрытия) */
       FIELD OblAcct AS CHARACTER /* OblAcct (DBI счет обязательств по аккредитиву) */
       FIELD op-date AS CHARACTER /* op-date (1111) */
       FIELD PrevLoanID AS CHARACTER /* PrevLoanID (Ссылка на пролонгированную сделку) */
       FIELD ProfitCenter AS CHARACTER /* ProfitCenter (Код подразделения банка/ProfitCenter) */
       FIELD rel_type AS CHARACTER /* rel_type (Список типов счетов для привязки) */
       FIELD ReplDate AS DATE /* ReplDate (Дата отмены сделки) */
       FIELD RevRef1 AS CHARACTER /* RevRef1 (Ссылка на новую сделку) */
       FIELD RevRef2 AS CHARACTER /* RevRef2 (Ссылка на отмененную сделку) */
       FIELD ROUND AS LOGICAL /* round (Округление) */
       FIELD TermKey AS CHARACTER /* TermKey (Код срочности в DBI) */
       FIELD TicketNumber AS CHARACTER /* TicketNumber (Номер тикета DBI (DocNum)) */
       FIELD grup_dog$ AS CHARACTER /* Груп_дог (Группа договора) */
       FIELD rewzim$ AS CHARACTER /* Режим (Формы договоров привлечения) */
       FIELD main-loan-acct AS CHARACTER /* main-loan-acct (Роль счета) */
       FIELD HiddenFieldsInForm AS CHARACTER /* HiddenFieldsInForm (Скрываемые поля в экранной форме) */
       FIELD Partition AS CHARACTER /* Partition (Раздел печати) */
       FIELD rate-list AS CHARACTER /* rate-list (Список кодов коммисий) */
       FIELD DisableFieldsInForm AS CHARACTER /* DisableFieldsInForm (Нередактируемые поля экранной формы) */
       FIELD sum-depos AS DECIMAL /* ДР Сумма связанного вклада */
       FIELD poslpdzapo$ AS LOGICAL /* ДР ПослПдЗаПо (дата последнего платежа может выходить за loan.end-date?) */
       FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
       FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
       FIELD local__id       AS INT64   /* Идентификатор записи     */
       FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
       FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
       FIELD LimitGrafDate AS DATE
       /* Записываем ссылку на временную таблицу в специальную таблицу */
       {ln-tthdl.i "tt-uploan" "uploan" }
       .



&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS TERMINAL-SIMULATION
/*          This file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Commented by KSV: Данный шаблон предназначен для создания экранной формы
** осуществляющей добавление, изменение и просмотр информации об объекте
** метасхемы БИСКВИТА без непосредственного обращения к базе данных.
**
** Шаги по созданию экранной формы:
**    0. Настройте PROPATH AppBuilder на SRC каталог БИСКВИТа. ВАЖНО, чтобы
**       служебные каталоги PROGRESS находились после каталога SRC/TOOLS.
**       Подключитесь к базе данных БИСКВИТа.
**    1. Выберите пункт меню AppBuilder Tools - Procedure Settings. Далее
**       нажмите кнопку Temp-Table Definition, в появившемся диалоге нажмите
**       кнопку BISQUIT и выберите класс метасхемы, объект которого будет
**       обрабатываться формой. На основе выбранного класса в форму добавится
**       объявления временных таблиц как для выбранного класса, так и для
**       всех аггрегированных на нем классов.
**    2. Разместите поля временных таблиц во фрейме. Для связи виджета с
**       полем из временной таблицы в форме свойств поля щелкните по кнопке
**       Database Field правой копкой мыши и в появившемся меню выберите
**       пункт Bisquit.
**       Вы  можете создать специальные поля разделители, для этого необходимо
**       создать FILL-IN c идентификатором SEPARATOR# (где # - любое число от
**       2, первый FILL-IN имеет идентифкатор без номера) и аттрибутом
**       VIES-AS TEXT. С помощью разделителей вы можете визуально выделять
**       группы полей.
**    3. Объедините поля в списки в зависимости от того в каком из режимов
**       поле должно быть доступно для редактирования. Для добавления поля
**       в список в диалоге его атрибутов нажмите кнопку Advanced и поставьте
**       галки в полях LIST-1, LIST-2 или LIST-3. Назначение списков:
**       -  LIST-1 - поля доступные для редактирования в режиме добавления
**                   записи
**       -  LIST-2 - поля доступные для редактирования в режиме редактирования
**                   записи
**       -  LIST-3 - поля доступные для редактирования в режиме просмотра.
**                   (Обычно это поля, отображаемы в виджете EDITOR для
**                   запрещения их изменения воспользуйтесь атрибутом READ-ONLY)
**       -  LIST-4 - поля для которых атрибут формат определяется в форме.
**                   Для других он заполняется из метасхемы.
**    4. Контроль за значением полей должен быть определен на триггере LEAVE
**       поля, который в случае несоответствия значения требуемому должен
**       возвращать значение {&RET-ERROR}.
**       Правильная конструкция триггера:

   .......

   IF <ОШИБКА> THEN
   DO:
      MESSAGE '......'
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   APPLY "LEAVE" TO FRAME {&MAIN-FRAME}. /* стандартная проверка */
   IF RETURN-VALUE EQ {&RET-ERROR}
      THEN RETURN NO-APPLY.

**    5. Для выбора значения поля из списка должен быть опредлен триггер F1 поля
**       (не путать с триггером на событие HELP в TTY - это разные события)
**    6. Если в форме присутсвуют виджеты не относящиеся к полям временной
**       таблицы, например кнопки, но которые д.б. доступны в режимах
**       редактирования и добавления поместите их в список LIST-4.
**    7. Более тонкую настройку поведения формы вы можете указать в процедуре
**       LocalEnableDisable, которая будет вызываться, в cлучае если она
**       определена, в конце EnableDisable.
**    8. Используйте процедуру LocalSetObject, которая будет вызываться,
**       в cлучае если она определена, перед записью данных в БД.
**    9. Для передачи специфических параметров процедуре экранной формы
**       воспользуйтесб функциями библиотеки PP-TPARA.P
**   10. Описание переменных для управления экранной формой находится в секции
**       Definitions библиотеки bis-tty.pro
**   11. Описание TEMP-TABL'ов'
*/

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

&GLOBAL-DEFINE MAIN-FRAME fMain
&GLOBAL-DEFINE XInstanceFile loan
/* Расскомментировать в случае вызова из NAVIGATE.CQR
{navigate.cqr
   ...
   &UseBisTTY=YES
   &edit=bis-tty.ef
   ...
}
   Если определена &UseBisTTY - то ссылка на динамическую таблицу верхнего класса
будет храниться в переменной IInstance.
   Если определена &InstanceFile - то будет определена и заполнена статическая
TEMP-TABLE tt-instance LIKE {&InstanceFile}

&GLOBAL-DEFINE UseBisTTY
&GLOBAL-DEFINE InstanceFile ИМЯ_ТАБЛИЦЫ_ПРОГРЕСС_ДЛЯ_ВЕРХНЕГО_КЛАССА
*/

&GLOBAL-DEFINE xDEBUG-INSTANCE-GET
&GLOBAL-DEFINE xDEBUG-INSTANCE-SET

/* Безусловное включение\отключение вызова xattr-ed
(иначе он вызывается при наличие незаполненных обязательных реквизитов */
/*
&GLOBAL-DEFINE XATTR-ED-OFF
&GLOBAL-DEFINE XATTR-ED-ON
*/
{globals.i}
{svarloan.def}          /* Shared еременные модуля "Кредиты и депозиты". */
{intrface.get db2l}
{intrface.get fx}
{intrface.get loan}
{intrface.get loanc}
{intrface.get comm}
{intrface.get limit}
{intrface.get pogcr}
{deal.def}
{loan.pro}

DEFINE BUFFER b-comm-rate FOR tt-comm-rate.
DEFINE BUFFER b-comm-cond FOR tt-comm-cond.

DEFINE VARIABLE mNameCommi         AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mListContract      AS CHARACTER  NO-UNDO INIT "Кредит,Депоз".
DEFINE VARIABLE mRateList          AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mI                 AS INT64    NO-UNDO.
DEFINE VARIABLE mModeBrowse        AS INT64    NO-UNDO.
DEFINE VARIABLE mOpenDate          AS DATE       NO-UNDO.
DEFINE VARIABLE mLastDate          AS DATE       NO-UNDO.
DEFINE VARIABLE mFirstDateAvail    AS DATE       NO-UNDO.
DEFINE VARIABLE mDst               AS HANDLE     NO-UNDO.
DEFINE VARIABLE mSrc               AS HANDLE     NO-UNDO.
DEFINE VARIABLE mId                AS INT64    NO-UNDO.
DEFINE VARIABLE mBrowseCommRateOFF AS LOGICAL    NO-UNDO.
DEFINE VARIABLE mChangedField      AS LOG        NO-UNDO.
DEFINE VARIABLE mStr               AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mEndDate       AS DATE       NO-UNDO.
DEFINE VARIABLE mAmount        AS DECIMAL    NO-UNDO.
DEFINE VARIABLE mCredPeriod    AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mCredDate      AS INT64    NO-UNDO.
DEFINE VARIABLE mIntPeriod     AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mIntDate       AS INT64    NO-UNDO.
DEFINE VARIABLE mDelay1        AS INT64    NO-UNDO.
DEFINE VARIABLE mCredOffset    AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mIntOffset     AS CHARACTER  NO-UNDO.
DEFINE VARIABLE mCountPer      AS INT64    NO-UNDO.
DEFINE VARIABLE mAnnSumm       AS DECIMAL    NO-UNDO.
DEFINE VARIABLE mUpEndDate     AS DATE       NO-UNDO.
DEFINE VARIABLE mSummSource    AS LOGICAL    NO-UNDO.
DEFINE VARIABLE mPrevSumma     AS DECIMAL    NO-UNDO.
DEFINE VARIABLE mEnableEndDate AS LOG        NO-UNDO.
DEFINE VARIABLE mPrevEndDate   AS DATE       NO-UNDO.
DEFINE VARIABLE mCondDate      AS DATE       NO-UNDO.
DEFINE VARIABLE mChangeMonth   AS LOG        NO-UNDO. /*изменялись ли месяцы исключения*/
DEFINE VARIABLE hDefaultRate   AS HANDLE     NO-UNDO.
DEFINE VARIABLE mKredPlat      AS DECIMAL    NO-UNDO.
DEFINE VARIABLE mNDays      AS INT64    NO-UNDO.
DEFINE VARIABLE mNMonth     AS INT64    NO-UNDO.
DEFINE VARIABLE mNYear      AS INT64    NO-UNDO.
DEFINE VARIABLE mLastCond      AS LOGICAL   NO-UNDO.
DEFINE VARIABLE mSrokChange AS LOGICAL    NO-UNDO.
DEFINE VARIABLE vFirstCond  AS LOGICAL    NO-UNDO.
DEFINE VARIABLE mCredMode        AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mDateDelay       AS INT64     NO-UNDO.
DEFINE VARIABLE mCredCurrNext    AS LOGICAL     NO-UNDO.
DEFINE VARIABLE mDelayOffset     AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mCredWorkCalend  AS LOGICAL     NO-UNDO.
DEFINE VARIABLE mIntMode         AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mDateDelayInt    AS INT64     NO-UNDO.
DEFINE VARIABLE mIntCurrNext     AS LOGICAL     NO-UNDO.
DEFINE VARIABLE mDelay           AS INT64     NO-UNDO.
DEFINE VARIABLE mIntWorkCalend   AS LOGICAL     NO-UNDO.
DEFINE VARIABLE mDelayOffsetInt  AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mContr           AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mHandCalcAnnuitet AS LOGICAL    NO-UNDO. /* Признак, что сумма платежа введена вручную */
DEFINE VARIABLE mProlong         AS LOGICAL     NO-UNDO. /* Признак пролонгации для создания записи pro-obl */
DEFINE VARIABLE mMinODChange     AS DECIMAL     NO-UNDO. /* Признак изменения ставки %МинОД */
DEFINE VARIABLE mOperSumm        AS DECIMAL     NO-UNDO. /* Сумма операций выдачи после даты состояния, для проверки валидности лимита */
DEFINE VARIABLE md1              AS DECIMAL     NO-UNDO.
DEFINE VARIABLE md2              AS DECIMAL     NO-UNDO.
DEFINE VARIABLE mHiddenField     AS CHARACTER   NO-UNDO.
DEFINE VARIABLE vCredPlav        AS CHAR        NO-UNDO.
DEFINE VARIABLE vCounter         AS INT64       NO-UNDO. /* Счетчик */
DEFINE VARIABLE vDatePS          AS DATE        NO-UNDO. /* Дата изменения плавающей ставки */
DEFINE VARIABLE vBaseRatePS      AS DEC         NO-UNDO. /* Значение базовой ставки */
DEFINE VARIABLE vRatePS          AS DEC         NO-UNDO. /* Значение плавающей ставки */

DEFINE VARIABLE mSdvigSince      AS CHAR        NO-UNDO. /*дата сдвига при попадании loan-cond.since на выходной*/

DEFINE VARIABLE mOffsetVld       AS CHARACTER   NO-UNDO. /* формат полей "Сд" (Сдвиг) */
/* значение полей Сдвиг, отображаемое вместо пустой строки */
DEFINE VARIABLE mOffsetNone      AS CHARACTER   NO-UNDO INIT "--".
DEFINE VARIABLE mSurrLastCond    AS CHARACTER   NO-UNDO.
DEFINE VARIABLE mTxtPercent      AS CHARACTER   NO-UNDO INIT "Проценты:" .
DEFINE VARIABLE mSetPaySum       AS LOGICAL     NO-UNDO. /* Признак автозаполнения поля PaySum при вводе остатка*/
DEFINE VARIABLE mIsProcStCh      AS LOG         NO-UNDO.
DEFINE VARIABLE mKomisNacVal     AS CHAR        NO-UNDO. /* для НП КомисНацВал*/
DEFINE VARIABLE mDblAnnSince     AS DATE        NO-UNDO. /* Дата начала периода увеличения */
DEFINE VARIABLE mErrSaveHist     AS LOGICAL     NO-UNDO. /* Признак ошибки при сохранении условий*/
   /* для loan-trg.pro */
&GLOBAL-DEFINE CorrectAnnuitet YES

DEFINE BUFFER b-monthout   FOR tt-monthout.
DEFINE BUFFER b-monthspec  FOR tt-monthspec.
DEFINE BUFFER bloan-cond   FOR loan-cond.
DEFINE BUFFER cond         FOR loan-cond.
DEFINE BUFFER vloan-cond   FOR loan-cond.
DEFINE BUFFER sloan-cond   FOR loan-cond.
DEFINE BUFFER xterm-obl    FOR term-obl.
DEFINE BUFFER plterm-obl   FOR term-obl.
DEFINE BUFFER poterm-obl   FOR term-obl. /* Для корректировки план. остатков */
DEFINE BUFFER posterm-obl  FOR term-obl. /* Для корректировки план. остатков */
DEFINE BUFFER scomm-rate   FOR comm-rate.
DEFINE BUFFER last-cond    FOR loan-cond. /* буфер на последнее условие,
** не считая текущее; для копирование с него реквизитов и проверок; ищется один
раз в PostGetObject; НЕ ПЕРЕИСКИВАТЬ */

DEFINE TEMP-TABLE ttTermObl LIKE term-obl.

DEFINE BUFFER b-term-obl FOR term-obl.

DEFINE TEMP-TABLE ttpro-obl NO-UNDO
   FIELD trow   AS rowid
   FIELD fllast AS LOGICAL.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Window
&Scoped-define DB-AWARE no

/* Name of designated FRAME-NAME and/or first browse and/or first query */
&Scoped-define FRAME-NAME fMain
&Scoped-define BROWSE-NAME br-comm

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES tt-comm-rate tt-comm-cond

/* Definitions for BROWSE br-comm                                       */
&Scoped-define FIELDS-IN-QUERY-br-comm tt-comm-rate.commission /* tt-comm-rate.local__id */ tt-comm-rate.rate-fixed ENTRY(1, GetBufferValue( "commission", "WHERE commission.commission = '" + tt-comm-rate.commission + "'", "name-comm"),CHR(1)) @ mNameCommi tt-comm-rate.rate-comm tt-comm-rate.min_value tt-comm-cond.commission tt-comm-cond.since
&Scoped-define ENABLED-FIELDS-IN-QUERY-br-comm tt-comm-rate.commission ~
tt-comm-rate.rate-fixed ~
tt-comm-cond.FloatType ~
tt-comm-rate.rate-comm ~
tt-comm-rate.min_value ~
tt-comm-rate.comm-rate-curr
&Scoped-define ENABLED-TABLES-IN-QUERY-br-comm tt-comm-rate tt-comm-cond
&Scoped-define FIRST-ENABLED-TABLE-IN-QUERY-br-comm tt-comm-rate
&Scoped-define SELF-NAME br-comm
&Scoped-define QUERY-STRING-br-comm PRESELECT EACH tt-comm-rate WHERE tt-comm-rate.since EQ tt-loan-cond.since SHARE-LOCK, LAST tt-comm-cond OUTER-JOIN WHERE tt-comm-cond.commission EQ tt-comm-rate.commission AND tt-comm-cond.since LE tt-comm-cond.since SHARE-LOCK BY tt-comm-rate.since INDEXED-REPOSITION
&Scoped-define OPEN-QUERY-br-comm OPEN QUERY {&SELF-NAME} PRESELECT EACH tt-comm-rate WHERE tt-comm-rate.since EQ tt-loan-cond.since SHARE-LOCK, LAST tt-comm-cond OUTER-JOIN WHERE tt-comm-cond.commission EQ tt-comm-rate.commission AND tt-comm-cond.since LE tt-comm-cond.since SHARE-LOCK BY tt-comm-rate.commission INDEXED-REPOSITION.
&Scoped-define TABLES-IN-QUERY-br-comm tt-comm-rate tt-comm-cond
&Scoped-define FIRST-TABLE-IN-QUERY-br-comm tt-comm-rate

/* Definitions for FRAME fMain                                          */
&Scoped-define OPEN-BROWSERS-IN-QUERY-fMain ~
    ~{&OPEN-QUERY-br-comm}

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-FIELDS tt-loan-cond.since tt-uploan.end-date ~
tt-loan-cond.PayType tt-loan-cond.PaySum tt-term-amt.amt-rub ~
tt-uploan.currency tt-loan-cond.cred-period tt-loan-cond.cred-date ~
tt-loan-cond.cred-month tt-loan-cond.cred-offset tt-loan-cond.kollw#gtper$ ~
tt-loan-cond.cred-mode tt-loan-cond.cred-work-calend ~
tt-loan-cond.cred-curr-next tt-loan-cond.delay1 tt-loan-cond.DateDelay ~
tt-loan-cond.delay-offset tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ ~
tt-loan-cond.int-period tt-loan-cond.int-date tt-loan-cond.int-month ~
tt-loan-cond.int-offset tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next tt-loan-cond.delay ~
tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int ~
tt-loan-cond.isklmes$ tt-loan-cond.disch-type tt-loan-cond.vidrestrukt$ ~
tt-loan-cond.CondEndDate tt-loan-cond.poslpd$ tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
&Scoped-define ENABLED-TABLES tt-loan-cond tt-uploan tt-term-amt
&Scoped-define FIRST-ENABLED-TABLE tt-loan-cond
&Scoped-define SECOND-ENABLED-TABLE tt-uploan
&Scoped-define THIRD-ENABLED-TABLE tt-term-amt
&Scoped-Define ENABLED-OBJECTS separator-2 br-comm cred-offset_ ~
delay-offset_ int-offset_ delay-offset-int_ mLimit mLimitRest separator-4 
&Scoped-Define DISPLAYED-FIELDS tt-loan-cond.since tt-loan-cond.NDays ~
tt-loan-cond.NMonthes tt-loan-cond.NYears tt-uploan.end-date ~
tt-loan-cond.PayType tt-loan-cond.PaySum tt-term-amt.amt-rub ~
tt-uploan.currency tt-loan-cond.cred-period tt-loan-cond.cred-date ~
tt-loan-cond.cred-month tt-loan-cond.cred-offset tt-loan-cond.kollw#gtper$ ~
tt-loan-cond.cred-mode tt-loan-cond.cred-work-calend ~
tt-loan-cond.cred-curr-next tt-loan-cond.delay1 tt-loan-cond.DateDelay ~
tt-loan-cond.delay-offset tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ ~
tt-loan-cond.int-period tt-loan-cond.int-date tt-loan-cond.int-month ~
tt-loan-cond.int-offset tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next tt-loan-cond.delay ~
tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int ~
tt-loan-cond.isklmes$ tt-uploan.rewzim$ tt-loan-cond.disch-type ~
tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate tt-loan-cond.poslpd$ ~
tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
&Scoped-define DISPLAYED-TABLES tt-loan-cond tt-uploan tt-term-amt
&Scoped-define FIRST-DISPLAYED-TABLE tt-loan-cond
&Scoped-define SECOND-DISPLAYED-TABLE tt-uploan
&Scoped-define THIRD-DISPLAYED-TABLE tt-term-amt
&Scoped-Define DISPLAYED-OBJECTS separator-2 mNameCredPeriod cred-offset_ ~
delay-offset_ mNameIntPeriod int-offset_ delay-offset-int_ mLimit ~
mNameDischType mLimitRest separator-4

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */
&Scoped-define List-1 tt-loan-cond.since tt-loan-cond.NDays ~
tt-loan-cond.NMonthes tt-loan-cond.NYears tt-uploan.end-date ~
tt-loan-cond.PayType tt-loan-cond.PaySum tt-term-amt.amt-rub ~
tt-loan-cond.cred-period tt-loan-cond.cred-date tt-loan-cond.cred-month ~
tt-loan-cond.cred-offset cred-offset_ tt-loan-cond.kollw#gtper$ ~
tt-loan-cond.cred-mode tt-loan-cond.cred-work-calend ~
tt-loan-cond.cred-curr-next tt-loan-cond.delay1 tt-loan-cond.DateDelay ~
tt-loan-cond.delay-offset delay-offset_ tt-loan-cond.kredplat$ ~
tt-loan-cond.annuitplat$ tt-loan-cond.int-period tt-loan-cond.int-date ~
tt-loan-cond.int-month tt-loan-cond.int-offset int-offset_ ~
tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next tt-loan-cond.delay ~
tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int delay-offset-int_ ~
tt-loan-cond.isklmes$ tt-uploan.rewzim$ mLimit tt-loan-cond.disch-type ~
tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate tt-loan-cond.annuitkorr$ ~
tt-loan-cond.grperiod$ tt-loan-cond.poslpd$ tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
&Scoped-define List-2 tt-uploan.end-date tt-loan-cond.PayType ~
tt-loan-cond.PaySum tt-term-amt.amt-rub tt-loan-cond.cred-period ~
tt-loan-cond.cred-date tt-loan-cond.cred-month tt-loan-cond.cred-offset ~
cred-offset_ tt-loan-cond.kollw#gtper$ tt-loan-cond.cred-mode ~
tt-loan-cond.cred-work-calend tt-loan-cond.cred-curr-next ~
tt-loan-cond.delay1 tt-loan-cond.DateDelay delay-offset_ ~
tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ tt-loan-cond.int-period ~
tt-loan-cond.int-date tt-loan-cond.int-month tt-loan-cond.int-offset ~
int-offset_ tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next tt-loan-cond.delay ~
tt-loan-cond.DateDelayInt delay-offset-int_ tt-loan-cond.isklmes$ ~
tt-uploan.rewzim$ tt-loan-cond.disch-type tt-loan-cond.vidrestrukt$ ~
tt-loan-cond.CondEndDate tt-loan-cond.annuitkorr$ tt-loan-cond.grperiod$ ~
tt-loan-cond.poslpd$ tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
&Scoped-define List-3 tt-loan-cond.since tt-loan-cond.NDays ~
tt-loan-cond.NMonthes tt-loan-cond.NYears tt-uploan.end-date ~
tt-term-amt.amt-rub tt-uploan.currency tt-loan-cond.cred-period ~
tt-loan-cond.cred-date tt-loan-cond.cred-month cred-offset_ ~
tt-loan-cond.kollw#gtper$ tt-loan-cond.cred-mode ~
tt-loan-cond.cred-work-calend tt-loan-cond.cred-curr-next ~
tt-loan-cond.delay1 tt-loan-cond.DateDelay tt-loan-cond.delay-offset ~
delay-offset_ tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ ~
tt-loan-cond.int-period tt-loan-cond.int-date tt-loan-cond.int-month ~
int-offset_ tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next tt-loan-cond.delay ~
tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int delay-offset-int_ ~
tt-loan-cond.isklmes$ tt-uploan.rewzim$ tt-loan-cond.disch-type ~
tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate tt-loan-cond.annuitkorr$ ~
tt-loan-cond.grperiod$  tt-loan-cond.poslpd$ tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod 
&Scoped-define List-4 tt-loan-cond.since tt-uploan.end-date ~
tt-term-amt.amt-rub tt-loan-cond.cred-period tt-loan-cond.kollw#gtper$ ~
tt-loan-cond.cred-mode tt-loan-cond.cred-work-calend ~
tt-loan-cond.cred-curr-next tt-loan-cond.DateDelay tt-loan-cond.kredplat$ ~
tt-loan-cond.kollw#gtperprc$ tt-loan-cond.int-mode ~
tt-loan-cond.int-work-calend tt-loan-cond.int-curr-next ~
tt-loan-cond.DateDelayInt tt-loan-cond.isklmes$ mLimit mLimitRest ~
tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate tt-loan-cond.annuitkorr$ ~
tt-loan-cond.poslpd$ tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
&Scoped-define List-5 mNameCredPeriod mNameIntPeriod mNameDischType 
&Scoped-define List-6 tt-loan-cond.isklmes$ 

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME


/* ************************  Function Prototypes ********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD CheckCliAcct TERMINAL-SIMULATION
FUNCTION CheckCliAcct RETURNS LOGICAL
  ( INPUT iAcctType AS CHAR,
    INPUT iAcct AS CHAR,
    INPUT iCurr AS CHAR,
    INPUT iCat AS CHAR,
    INPUT iId AS INT64 )  FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD GetQntPer TERMINAL-SIMULATION
FUNCTION GetQntPer RETURNS INT64 (
   INPUT iBegDate  AS DATE, /* дата открытия договора */
   INPUT iEndDate  AS DATE, /* зата закрытия договора */
   INPUT iPayDay   AS INT64,  /* число, кот. производ. операция (только М и К) */
   INPUT iGlInt    AS CHAR, /* интервал м/у плановыми операциями */
   INPUT iCondBegD AS DATE  /* дата начала условия, используется при расчете даты при К или ПГ
                             ** если ? то отрабатывать доп.проверка не будет */
) FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION-FORWARD CalcSumAmt TERMINAL-SIMULATION
FUNCTION CalcSumAmt RETURNS DEC (
   INPUT iDate    AS DATE, /* Дата */
   INPUT iTypeOld AS CHAR, /* Тип условия до изменения */
   INPUT iTypeNew AS CHAR, /* Тип условия после изменения */
   INPUT iAmtOld  AS DEC,  /* Сумма условия до изменения */
   INPUT iAmtNew  AS DEC   /* Сумма условия после изменения */
) FORWARD.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR TERMINAL-SIMULATION AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */
DEFINE VARIABLE cred-offset_ AS CHARACTER FORMAT "XX":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
     &ELSE SIZE 2 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE delay-offset-int_ AS CHARACTER FORMAT "XX":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
     &ELSE SIZE 2 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE delay-offset_ AS CHARACTER FORMAT "XX":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
     &ELSE SIZE 2 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE int-offset_ AS CHARACTER FORMAT "XX":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
     &ELSE SIZE 2 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE mLimit AS DECIMAL FORMAT ">>>,>>>,>>9.99":U INITIAL 0
     LABEL "Лимит"
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
     &ELSE SIZE 14 BY 1 &ENDIF TOOLTIP "Лимит выдачи/задолженности на дату состояния" NO-UNDO.

DEFINE VARIABLE mLimitRest AS DECIMAL FORMAT ">>>,>>>,>>9.99":U INITIAL 0
     LABEL "Лим.в.ост."
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
     &ELSE SIZE 14 BY 1 &ENDIF TOOLTIP "Оставшийся лимит выдачи на дату состояния" NO-UNDO.

DEFINE VARIABLE mNameCredPeriod AS CHARACTER FORMAT "X(256)":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 8 BY 1
     &ELSE SIZE 8 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE mNameDischType AS CHARACTER FORMAT "X(256)":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 30 BY 1
     &ELSE SIZE 30 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE mNameIntPeriod AS CHARACTER FORMAT "X(256)":U
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 8 BY 1
     &ELSE SIZE 8 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE separator-2 AS CHARACTER FORMAT "X(256)":U INITIAL "--------------------------------------------------------------------------------------------------------------------------"
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 78 BY 1
     &ELSE SIZE 78 BY 1 &ENDIF NO-UNDO.

DEFINE VARIABLE separator-4 AS CHARACTER FORMAT "X(256)":U INITIAL "--------------------------------------------------------------------------------------------------------------------------"
     VIEW-AS FILL-IN
     &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 78 BY 1
     &ELSE SIZE 78 BY 1 &ENDIF NO-UNDO.

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY br-comm FOR
      tt-comm-rate, tt-comm-cond SCROLLING.
&ANALYZE-RESUME

/* Browse definitions                                                   */
DEFINE BROWSE br-comm
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS br-comm TERMINAL-SIMULATION _FREEFORM
  QUERY br-comm NO-LOCK DISPLAY
      tt-comm-rate.commission FORMAT "x(15)":U WIDTH 10
      /*
      tt-comm-rate.local__id FORMAT 9
      */
      tt-comm-rate.rate-fixed FORMAT "=/%":U
      ENTRY(1,
            GetBufferValue(
               "commission",
               "WHERE commission.commission = '" + tt-comm-rate.commission + "'",
               "name-comm"),CHR(1))
         @ mNameCommi FORMAT "x(22)":U
      tt-comm-cond.FloatType FORMAT "Да/Нет":U
      tt-comm-rate.rate-comm FORMAT ">>>>>>>>>>>9.99999":U WIDTH 18
      tt-comm-rate.min_value FORMAT "->>>>>>>>9.99":U WIDTH 13
      tt-comm-rate.comm-rate-curr FORMAT "x(3)":U WIDTH 3
  ENABLE
      tt-comm-rate.commission
      tt-comm-rate.rate-fixed
      tt-comm-cond.FloatType
      tt-comm-rate.rate-comm
      tt-comm-rate.min_value
      tt-comm-rate.comm-rate-curr
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-BOX NO-LABELS NO-ROW-MARKERS SIZE 78 BY 5 ROW-HEIGHT-CHARS 1 FIT-LAST-COLUMN.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME fMain
     tt-loan-cond.since
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 6 COLON-ALIGNED
          &ELSE AT ROW 1 COL 6 COLON-ALIGNED &ENDIF
          LABEL "С" FORMAT "99/99/9999"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     tt-loan-cond.NDays
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 21 COLON-ALIGNED
          &ELSE AT ROW 1 COL 21 COLON-ALIGNED &ENDIF
          LABEL "Д"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 5 BY 1
          &ELSE SIZE 5 BY 1 &ENDIF
     tt-loan-cond.NMonthes
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 29 COLON-ALIGNED
          &ELSE AT ROW 1 COL 29 COLON-ALIGNED &ENDIF
          LABEL "М"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 4 BY 1
          &ELSE SIZE 4 BY 1 &ENDIF
     tt-loan-cond.NYears
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 36 COLON-ALIGNED
          &ELSE AT ROW 1 COL 36 COLON-ALIGNED &ENDIF
          LABEL "Г"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-uploan.end-date
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 43 COLON-ALIGNED
          &ELSE AT ROW 1 COL 43 COLON-ALIGNED &ENDIF
          LABEL "По" FORMAT "99/99/9999"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     tt-loan-cond.PayType
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 1 COL 63 COLON-ALIGNED
          &ELSE AT ROW 1 COL 63 COLON-ALIGNED &ENDIF HELP
          "Тип платежа по основному долгу" NO-LABEL FORMAT "x(9)"
          VIEW-AS COMBO-BOX INNER-LINES 5
          DROP-DOWN-LIST
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
     tt-loan-cond.PaySum
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 2 COL 58 COLON-ALIGNED
          &ELSE AT ROW 2 COL 58 COLON-ALIGNED &ENDIF HELP
          "Сумма платежа"
          LABEL "Платеж" FORMAT ">>>,>>>,>>>,>>9.99"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 19 BY 1
          &ELSE SIZE 19 BY 1 &ENDIF
     tt-term-amt.amt-rub
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 2 COL 21 COLON-ALIGNED
          &ELSE AT ROW 2 COL 21 COLON-ALIGNED &ENDIF
          LABEL "ОснДолг" FORMAT "->>>,>>>,>>>,>>9.99"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 18 BY 1
          &ELSE SIZE 18 BY 1 &ENDIF
     tt-uploan.currency
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 2 COL 6 COLON-ALIGNED
          &ELSE AT ROW 2 COL 6 COLON-ALIGNED &ENDIF
          LABEL "Вал" FORMAT "x(3)"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     separator-2
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 3 COL 1
          &ELSE AT ROW 3 COL 1 &ENDIF NO-LABEL
     br-comm
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 4 COL 1
          &ELSE AT ROW 4 COL 1 &ENDIF
     tt-loan-cond.cred-period
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 9 COLON-ALIGNED
          &ELSE AT ROW 12 COL 9 COLON-ALIGNED &ENDIF
          LABEL "Осн.долг"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     mNameCredPeriod
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 12 COLON-ALIGNED
          &ELSE AT ROW 12 COL 12 COLON-ALIGNED &ENDIF NO-LABEL
     tt-loan-cond.cred-date
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 21 COLON-ALIGNED
          &ELSE AT ROW 12 COL 21 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-loan-cond.cred-month
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 24 COLON-ALIGNED
          &ELSE AT ROW 12 COL 24 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-loan-cond.cred-offset
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 27 COLON-ALIGNED
          &ELSE AT ROW 11 COL 27 COLON-ALIGNED &ENDIF HELP
          "" NO-LABEL FORMAT "x(12)"
          VIEW-AS COMBO-BOX INNER-LINES 5
          LIST-ITEMS "Item 1"
          DROP-DOWN-LIST
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     cred-offset_
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 27 COLON-ALIGNED
          &ELSE AT ROW 12 COL 27 COLON-ALIGNED &ENDIF HELP
          "Режим смещения даты погашения (основной долг)" NO-LABEL
     tt-loan-cond.kollw#gtper$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 30 COLON-ALIGNED
          &ELSE AT ROW 12 COL 30 COLON-ALIGNED &ENDIF HELP
          "" NO-LABEL FORMAT ">>9"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.cred-mode
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 34 COLON-ALIGNED
          &ELSE AT ROW 12 COL 34 COLON-ALIGNED &ENDIF HELP
          "Способ задания платежного периода (основной долг)" NO-LABEL FORMAT "x(15)"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
     tt-loan-cond.cred-work-calend
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 49 COLON-ALIGNED
          &ELSE AT ROW 12 COL 49 COLON-ALIGNED &ENDIF HELP
          "Режим расчета продолжительности периода (основной долг)" NO-LABEL FORMAT "Календ/Рабоч"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
     tt-loan-cond.cred-curr-next
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 49 COLON-ALIGNED
          &ELSE AT ROW 12 COL 49 COLON-ALIGNED &ENDIF HELP
          "Режим расчета окончания периода (основной долг)." NO-LABEL FORMAT "Текущ/След"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
     tt-loan-cond.delay1
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 56 COLON-ALIGNED
          &ELSE AT ROW 12 COL 56 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     tt-loan-cond.DateDelay
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 56 COLON-ALIGNED
          &ELSE AT ROW 12 COL 56 COLON-ALIGNED &ENDIF HELP
          "Дата окончания (день месяца) окончания платежного периода по ос" NO-LABEL FORMAT "->,>>>,>>9"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.delay-offset
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 60 COLON-ALIGNED
          &ELSE AT ROW 12 COL 60 COLON-ALIGNED &ENDIF HELP
          "Режим смещения даты выноса на просрочку основного долга" NO-LABEL FORMAT "x(12)"
          VIEW-AS COMBO-BOX INNER-LINES 5
          LIST-ITEMS "Item 1"
          DROP-DOWN-LIST
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     delay-offset_
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 60 COLON-ALIGNED
          &ELSE AT ROW 12 COL 60 COLON-ALIGNED &ENDIF HELP
          "Режим смещения даты окончания платежного периода (основной долг)" NO-LABEL
     tt-loan-cond.kredplat$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 63 COLON-ALIGNED
          &ELSE AT ROW 12 COL 63 COLON-ALIGNED &ENDIF NO-LABEL FORMAT "->>>,>>>,>>9.99"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
     tt-loan-cond.annuitplat$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 63 COLON-ALIGNED
          &ELSE AT ROW 12 COL 63 COLON-ALIGNED &ENDIF NO-LABEL FORMAT ">>>,>>>,>>>,>>9.99"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
     mTxtPercent
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 1
          &ELSE AT ROW 13 COL 1 &ENDIF
          VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 9 BY 1
          &ELSE SIZE 9 BY 1 &ENDIF
          NO-LABEL FORMAT "x(9)"
     tt-loan-cond.int-period
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 9 COLON-ALIGNED
          &ELSE AT ROW 13 COL 9 COLON-ALIGNED &ENDIF
          NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     mNameIntPeriod
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 12 COLON-ALIGNED
          &ELSE AT ROW 13 COL 12 COLON-ALIGNED &ENDIF NO-LABEL
     tt-loan-cond.int-date
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 21 COLON-ALIGNED
          &ELSE AT ROW 13 COL 21 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-loan-cond.int-month
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 24 COLON-ALIGNED
          &ELSE AT ROW 13 COL 24 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-loan-cond.int-offset
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 12 COL 27 COLON-ALIGNED
          &ELSE AT ROW 12 COL 27 COLON-ALIGNED &ENDIF HELP
          "" NO-LABEL FORMAT "x(12)"
          VIEW-AS COMBO-BOX INNER-LINES 5
          LIST-ITEMS "Item 1"
          DROP-DOWN-LIST
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     int-offset_
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 27 COLON-ALIGNED
          &ELSE AT ROW 13 COL 27 COLON-ALIGNED &ENDIF HELP
          "Режим смещения даты погашения (проценты)" NO-LABEL
     tt-loan-cond.kollw#gtperprc$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 30 COLON-ALIGNED
          &ELSE AT ROW 13 COL 30 COLON-ALIGNED &ENDIF HELP
          "Количество льготных периодов по погашению процентов" NO-LABEL FORMAT "->,>>>,>>9"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.int-mode
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 34 COLON-ALIGNED
          &ELSE AT ROW 13 COL 34 COLON-ALIGNED &ENDIF HELP
          "Способ задания платежного периода (проценты)" NO-LABEL FORMAT "x(15)"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
     tt-loan-cond.int-work-calend
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 49 COLON-ALIGNED
          &ELSE AT ROW 13 COL 49 COLON-ALIGNED &ENDIF HELP
          "Режим расчета продолжительности периода (проценты)" NO-LABEL FORMAT "Календ/Рабоч"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
     tt-loan-cond.int-curr-next
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 49 COLON-ALIGNED
          &ELSE AT ROW 13 COL 49 COLON-ALIGNED &ENDIF HELP
          "Режим расчета окончания периода (проц.)" NO-LABEL FORMAT "Текущ/След"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
     tt-loan-cond.delay
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 56 COLON-ALIGNED
          &ELSE AT ROW 13 COL 56 COLON-ALIGNED &ENDIF NO-LABEL
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.DateDelayInt
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 56 COLON-ALIGNED
          &ELSE AT ROW 13 COL 56 COLON-ALIGNED &ENDIF HELP
          "Дата окончания (день месяца) платежного периода по процентам" NO-LABEL FORMAT "->,>>>,>>9"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.delay-offset-int
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 60 COLON-ALIGNED
          &ELSE AT ROW 13 COL 60 COLON-ALIGNED &ENDIF HELP
          "Режим смещения окончания периода (проценты)" NO-LABEL FORMAT "x(12)"
          VIEW-AS COMBO-BOX INNER-LINES 5
          LIST-ITEMS "Item 1"
          DROP-DOWN-LIST
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     delay-offset-int_
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 60 COLON-ALIGNED
          &ELSE AT ROW 13 COL 60 COLON-ALIGNED &ENDIF HELP
          "Режим смещения даты окончания платежного периода (проценты)" NO-LABEL
     tt-loan-cond.annuitkorr$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 75 COLON-ALIGNED
          &ELSE AT ROW 13 COL 75 COLON-ALIGNED &ENDIF
          LABEL "Корр." FORMAT "-9"
          HELP "Изм. числа период. аннуитета, ? - по НП АннуитФорм"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
     tt-loan-cond.grperiod$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 13 COL 63 COLON-ALIGNED
          &ELSE AT ROW 13 COL 63 COLON-ALIGNED &ENDIF HELP
          "График ОД - ежедневный с периодическим обнулением (F1/пробел - периода построения)"
          LABEL " Гр. ОД"
          VIEW-AS TOGGLE-BOX
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     tt-loan-cond.isklmes$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 14 COL 1
          &ELSE AT ROW 14 COL 1 &ENDIF HELP
          "Нажмите F1 для редактирования условий исключения месяцев"
          LABEL "Исключить месяцы"
          VIEW-AS TOGGLE-BOX
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 20 BY 1
          &ELSE SIZE 20 BY 1 &ENDIF
     tt-uploan.rewzim$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 14 COL 33 COLON-ALIGNED
          &ELSE AT ROW 14 COL 33 COLON-ALIGNED &ENDIF HELP
          "Формы договоров привлечения"
          LABEL "Режим" FORMAT "x(256)"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 11 BY 1
          &ELSE SIZE 11 BY 1 &ENDIF
     mLimit
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 14 COL 63 COLON-ALIGNED
          &ELSE AT ROW 14 COL 63 COLON-ALIGNED &ENDIF
     tt-loan-cond.disch-type
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 15 COL 16 COLON-ALIGNED
          &ELSE AT ROW 15 COL 16 COLON-ALIGNED &ENDIF
          LABEL "Форма расчета"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     mNameDischType
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 15 COL 18 COLON-ALIGNED
          &ELSE AT ROW 15 COL 18 COLON-ALIGNED &ENDIF NO-LABEL
     mLimitRest
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 15 COL 63 COLON-ALIGNED
          &ELSE AT ROW 14.99 COL 63 COLON-ALIGNED &ENDIF
     tt-loan-cond.vidrestrukt$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 16 COL 11 COLON-ALIGNED
          &ELSE AT ROW 16 COL 11 COLON-ALIGNED &ENDIF HELP
          "Список видов реструктуризации"
          LABEL "Вид.Рестр." FORMAT "x(70)"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 16 BY 1
          &ELSE SIZE 16 BY 1 &ENDIF
     tt-loan-cond.CondEndDate
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 16 COL 40 COLON-ALIGNED
          &ELSE AT ROW 16 COL 40 COLON-ALIGNED &ENDIF HELP
          ""
          LABEL "Дата оконч."
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF
     tt-loan-cond.PartAmount 
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 16 COL 60 COLON-ALIGNED
          &ELSE AT ROW 16 COL 60 COLON-ALIGNED &ENDIF
          LABEL "Доля(%)" FORMAT ">>9"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
     tt-loan-cond.FirstPeriod 
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 16 COL 73 COLON-ALIGNED
          &ELSE AT ROW 16 COL 73 COLON-ALIGNED &ENDIF
          LABEL "Период"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 4 BY 1
          &ELSE SIZE 4 BY 1 &ENDIF  
     tt-loan-cond.poslpd$
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 16 COL 66 COLON-ALIGNED
          &ELSE AT ROW 16 COL 66 COLON-ALIGNED &ENDIF HELP
          "Последняя плановая дата"
          LABEL "ПослПД" FORMAT "99/99/9999"
          VIEW-AS FILL-IN
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 10 BY 1
          &ELSE SIZE 10 BY 1 &ENDIF    
     separator-4
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 9 COL 1
          &ELSE AT ROW 9 COL 1 &ENDIF NO-LABEL
     "Дн" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 58
          &ELSE AT ROW 10 COL 58 &ENDIF
     "---------" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 9 BY 1
          &ELSE SIZE 9 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 1
          &ELSE AT ROW 11 COL 1 &ENDIF
     "-----------" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 11 BY 1
          &ELSE SIZE 11 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 11
          &ELSE AT ROW 11 COL 11 &ENDIF
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     "---" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 32
          &ELSE AT ROW 11 COL 32 &ENDIF
     "--" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 23
          &ELSE AT ROW 11 COL 23 &ENDIF
     "--" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 26
          &ELSE AT ROW 11 COL 26 &ENDIF
     "--" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 29
          &ELSE AT ROW 11 COL 29 &ENDIF
     "--------------" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 36
          &ELSE AT ROW 11 COL 36 &ENDIF
     "---" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 58
          &ELSE AT ROW 11 COL 58 &ENDIF
     "------" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 51
          &ELSE AT ROW 11 COL 51 &ENDIF
     "--" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 62
          &ELSE AT ROW 11 COL 62 &ENDIF
     "Дн" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 23
          &ELSE AT ROW 10 COL 23 &ENDIF
     "--------------" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 11 COL 65
          &ELSE AT ROW 11 COL 65 &ENDIF
     "Погашение" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 9 BY 1
          &ELSE SIZE 9 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 1
          &ELSE AT ROW 10 COL 1 &ENDIF
     "Период" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 11 BY 1
          &ELSE SIZE 11 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 11
          &ELSE AT ROW 10 COL 11 &ENDIF
     "Мс" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 26
          &ELSE AT ROW 10 COL 26 &ENDIF
     "Режим" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 6 BY 1
          &ELSE SIZE 6 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 51
          &ELSE AT ROW 10 COL 51 &ENDIF
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18.

/* DEFINE FRAME statement is approaching 4K Bytes.  Breaking it up   */
DEFINE FRAME fMain
     "Сд" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 29
          &ELSE AT ROW 10 COL 29 &ENDIF
     "Льг" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 3 BY 1
          &ELSE SIZE 3 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 32
          &ELSE AT ROW 10 COL 32 &ENDIF
     "Плат. период" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 36
          &ELSE AT ROW 10 COL 36 &ENDIF
     "Сд" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 2 BY 1
          &ELSE SIZE 2 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 62
          &ELSE AT ROW 10 COL 62 &ENDIF
     "Сумма платежа" VIEW-AS TEXT
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 14 BY 1
          &ELSE SIZE 14 BY 1 &ENDIF
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 65
          &ELSE AT ROW 10 COL 65 &ENDIF
     mHiddenField
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN AT ROW 10 COL 34 COLON-ALIGNED
          &ELSE AT ROW 10 COL 34 COLON-ALIGNED &ENDIF
          VIEW-AS EDITOR
          &IF '{&WINDOW-SYSTEM}' = 'TTY':U &THEN SIZE 43 BY 2
          &ELSE SIZE 43 BY 2 &ENDIF NO-LABEL
    WITH 1 DOWN KEEP-TAB-ORDER OVERLAY
         SIDE-LABELS NO-UNDERLINE THREE-D
         AT COL 1 ROW 1
         SIZE 80 BY 18
        TITLE "".


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Window
   Allow: Basic,Browse,DB-Fields,Window,Query
   Temp-Tables and Buffers:
      TABLE: tt-comm-rate T "?" NO-UNDO bisquit comm-rate
      ADDITIONAL-FIELDS:
          FIELD comm-rate-curr  AS CHARACTER HELP "Валюта комиссии" /* Валюта тарифа */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
          FIELD min_value       AS DECIMAL help "Минимальное значение за весь период просрочки"  /* Минимальное значение */
          INDEX commission commission
          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-comm-rate" "comm-rate" }

      END-FIELDS.

      TABLE: tt-comm-cond T "?" NO-UNDO bisquit comm-cond
      ADDITIONAL-FIELDS:
         FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
         FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
         FIELD local__id       AS INT64   /* Идентификатор записи     */
         FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
         FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
         FIELD NegBaseRate     AS CHAR    /* В случае отриц.зн.баз.ставки использ.отриц.знач.(ДА) или 0(НЕТ) */
         INDEX local__id IS UNIQUE local__id
         /* Записываем ссылку на временную таблицу в специальную таблицу */
         {ln-tthdl.i "tt-comm-cond" "comm-cond" }
         .

      END-FIELDS.

      TABLE: tt-loan-cond T "?" NO-UNDO bisquit loan-cond
      ADDITIONAL-FIELDS:
          FIELD CondEndDate AS DATE
          FIELD vidrestrukt$ AS CHARACTER
          FIELD annuitplat$  AS DECIMAL /* АннуитПлат (Сумма аннуитетного платежа) */
          FIELD end-date AS DATE /* end-date (Дата окончания) */
          FIELD EndDateBeforeProl AS DATE /* EndDateBeforeProl (Дата окончания вклада до пролонгации) */
          FIELD kollw#gtper$ AS INT64 /* КолЛьгтПер (Количество льготных периодов) */
          FIELD kollw#gtperprc$ AS INT64 /* КолЛьгтПерПрц (Количество льготных периодов (проценты)) */
          FIELD int-offset AS CHARACTER /* int-offset (Режим смещения дат) */
          FIELD cred-offset AS CHARACTER /* cred-offset (Режим смещения дат) */
          FIELD delay-offset AS CHARACTER
          FIELD delay-offset-int AS CHARACTER
          FIELD cred-mode AS CHARACTER /* cred-mode (Способ задания плат.периода (осн.долг)) */
          FIELD int-mode AS CHARACTER /* int-mode (Способ задания плат.периода (проценты)) */
          FIELD DateDelay AS INT64 /* DateDelay (День окончания плат.периода (осн.долг)) */
          FIELD DateDelayInt AS INT64 /* DateDelayInt (День окончания плат.периода (проценты)) */
          FIELD cred-work-calend AS LOGICAL /* cred-work-cale (Режим расчета продолж.периода (осн.долг)) */
          FIELD cred-curr-next AS LOGICAL /* cred-curr-next (Режим расчета окончания периода(осн.долг) */
          FIELD int-work-calend AS LOGICAL /* int-work-calen (Режим расчета продолж.периода (проценты)) */
          FIELD int-curr-next AS LOGICAL /* int-curr-next (Режим расчета окончания периода (проц.)) */
          FIELD Prolong AS LOGICAL /* Prolong (Пролонгция вклада) */
          FIELD PayType AS CHARACTER /* PayType (Тип платежа по основному долгу) */
          FIELD PaySum AS DECIMAL /* PaySum (Сумма платежа) */
          FIELD shemaplat$ AS LOGICAL /* СхемаПлат (Схема платежа) */
          FIELD isklmes$ AS LOGICAL /* ИсклМес (Наличие исключений месяцев) */
          FIELD NDays AS INT64 /* Количество дней действия условия */
          FIELD NMonthes AS INT64 /* Количество месяцев действия условия */
          FIELD NYears AS INT64 /* Количество лет действия условия */
          FIELD Test01 AS CHARACTER /* Test01 (Test01) */
          FIELD kredplat$ AS DECIMAL /* КредПлат (Сумма периодич.платежа погаш. осн.долга) */
          FIELD poslpd$ AS DATE /* Последняя плановая дата  */
          FIELD PartAmount AS DECIMAL /* ДР Доля кредита первого периода */
          FIELD FirstPeriod AS INTEGER /* ДР Продолжительность первого периода в месяцах */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-loan-cond" "" }

      END-FIELDS.
      TABLE: tt-MonthOut T "?" NO-UNDO bisquit term-obl
      ADDITIONAL-FIELDS:
          FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
          FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
          FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
          FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
          FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
          FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
          FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
          FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-MonthOut" "MonthOut" }

      END-FIELDS.
      TABLE: tt-MonthSpec T "?" NO-UNDO bisquit term-obl
      ADDITIONAL-FIELDS:
          FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
          FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
          FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
          FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
          FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
          FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
          FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
          FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-MonthSpec" "MonthSpec" }

      END-FIELDS.
      TABLE: tt-term-amt T "?" NO-UNDO bisquit term-obl
      ADDITIONAL-FIELDS:
          FIELD viddogob$ AS CHARACTER /* ВидДогОб (Вид договора обеспечения) */
          FIELD vidob$ AS CHARACTER /* ВидОб (Вид предмета обеспечения) */
          FIELD datapost$ AS DATE /* ДатаПост (Дата поступления) */
          FIELD dopinfo$ AS CHARACTER /* ДопИнфо (Дополнительная информация) */
          FIELD mestonahowzdenie$ AS CHARACTER /* Местонахождение (Местонахождение имущества) */
          FIELD nomdogob$ AS CHARACTER /* НомДогОб (Номер договора обеспечения) */
          FIELD nomerpp$ AS INT64 /* НомерПП (Порядковый номер) */
          FIELD opisanie$ AS CHARACTER /* Описание (Описание предмета обеспечения) */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */

          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-term-amt" "term-amt" }

      END-FIELDS.
      TABLE: tt-uploan T "?" NO-UNDO bisquit loan
      ADDITIONAL-FIELDS:
          FIELD datasogl$ AS DATE /* ДатаСогл (Дата заключения кредитного договора) */
          FIELD main-loan-cust AS CHARACTER /* main-loan-cust (Основная роль клиента) */
          FIELD akt_vzv$ AS CHARACTER /* Акт_взв (Активы взешенные с учетом риска) */
          FIELD data_uar$ AS CHARACTER /* Дата_УАР (Номер и дата подтверждения УАР) */
          FIELD dosroka$ AS CHARACTER /* ДоСРОКА (Нельзя снимать средства до срока) */
          FIELD igndtokwc$ AS LOGICAL /* ИгнДтОкч (Игнорировать дату окончания договора) */
          FIELD okrugsum$ AS LOGICAL /* ОкругСум (Округление суммы плановых платежей) */
          FIELD sindkred$ AS LOGICAL /* СиндКред (Синдицированный кредит) */
          FIELD BankCust AS CHARACTER /* BankCust (Код клиента исполняющего банка) */
          FIELD Bfnc AS CHARACTER /* Bfnc (Код функции Bfnc в DBI) */
          FIELD CallAcct AS CHARACTER /* CallAcct (DBI счет требований по аккредитиву) */
          FIELD dateend AS DATE /* dateend (Дата окончания/закрытия из ldmfDD.txt) */
          FIELD DTKind AS CHARACTER /* DTKind (Разновидность сделки для Decision Table) */
          FIELD DTType AS CHARACTER /* DTType (Вид договора для Decision Table) */
          FIELD Exec_D AS LOGICAL /* Exec_D (Не учитывать при подсчете кол-ва дог.) */
          FIELD IntAcct AS CHARACTER /* IntAcct (Процентный DBI счет) */
          FIELD list_type AS CHARACTER /* list_type (Список типов счетов для авт. закрытия) */
          FIELD OblAcct AS CHARACTER /* OblAcct (DBI счет обязательств по аккредитиву) */
          FIELD op-date AS CHARACTER /* op-date (1111) */
          FIELD PrevLoanID AS CHARACTER /* PrevLoanID (Ссылка на пролонгированную сделку) */
          FIELD ProfitCenter AS CHARACTER /* ProfitCenter (Код подразделения банка/ProfitCenter) */
          FIELD rel_type AS CHARACTER /* rel_type (Список типов счетов для привязки) */
          FIELD ReplDate AS DATE /* ReplDate (Дата отмены сделки) */
          FIELD RevRef1 AS CHARACTER /* RevRef1 (Ссылка на новую сделку) */
          FIELD RevRef2 AS CHARACTER /* RevRef2 (Ссылка на отмененную сделку) */
          FIELD ROUND AS LOGICAL /* round (Округление) */
          FIELD TermKey AS CHARACTER /* TermKey (Код срочности в DBI) */
          FIELD TicketNumber AS CHARACTER /* TicketNumber (Номер тикета DBI (DocNum)) */
          FIELD grup_dog$ AS CHARACTER /* Груп_дог (Группа договора) */
          FIELD rewzim$ AS CHARACTER /* Режим (Формы договоров привлечения) */
          FIELD main-loan-acct AS CHARACTER /* main-loan-acct (Роль счета) */
          FIELD HiddenFieldsInForm AS CHARACTER /* HiddenFieldsInForm (Скрываемые поля в экранной форме) */
          FIELD Partition AS CHARACTER /* Partition (Раздел печати) */
          FIELD rate-list AS CHARACTER /* rate-list (Список кодов коммисий) */
          FIELD DisableFieldsInForm AS CHARACTER /* DisableFieldsInForm (Нередактируемые поля экранной формы) */
          FIELD poslpdzapo$ AS LOGICAL /* ДР ПослПДЗаПо (дата посл.платежа может выходить за loan.end-date?) */
          FIELD local__template AS LOGICAL   /* Признак шаблон/не шаблон */
          FIELD local__rowid    AS ROWID     /* ROWID записи в БД        */
          FIELD local__id       AS INT64   /* Идентификатор записи     */
          FIELD local__upid     AS INT64   /* Ссылка на запись в аггрегирующей таблице */
          FIELD user__mode      AS INT64   /* Флаг управления записью в БД */
          FIELD LimitGrafDate AS DATE

          /* Записываем ссылку на временную таблицу в специальную таблицу */
          {ln-tthdl.i "tt-uploan" "uploan" }

      END-FIELDS.
   END-TABLES.
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW TERMINAL-SIMULATION ASSIGN
         HIDDEN             = YES
         TITLE              = "<insert window title>"
         HEIGHT             = 21.07
         WIDTH              = 80.14
         MAX-HEIGHT         = 21.07
         MAX-WIDTH          = 80.14
         VIRTUAL-HEIGHT     = 21.07
         VIRTUAL-WIDTH      = 80.14
         RESIZE             = yes
         SCROLL-BARS        = no
         STATUS-AREA        = yes
         BGCOLOR            = ?
         FGCOLOR            = ?
         KEEP-FRAME-Z-ORDER = yes
         THREE-D            = yes
         MESSAGE-AREA       = yes
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB TERMINAL-SIMULATION
/* ************************* Included-Libraries *********************** */

{bis-tty.pro}
{termobl.pro}           /* Инструменты для работы с плановыми сущностями. */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME




/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR FRAME fMain
   FRAME-NAME Custom                                                    */
/* BROWSE-TAB br-comm separator-2 fMain */
/* SETTINGS FOR FILL-IN tt-term-amt.amt-rub IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT                                         */
/* SETTINGS FOR FILL-IN tt-loan-cond.annuitplat$ IN FRAME fMain
   1 2 3 EXP-LABEL EXP-FORMAT                                           */
/* SETTINGS FOR FILL-IN tt-loan-cond.CondEndDate IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-HELP                                           */
/* SETTINGS FOR FILL-IN tt-loan-cond.cred-curr-next IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.cred-date IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR FILL-IN tt-loan-cond.cred-mode IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
ASSIGN
       tt-loan-cond.cred-mode:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.cred-month IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR COMBO-BOX tt-loan-cond.cred-offset IN FRAME fMain
   1 2 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR FILL-IN cred-offset_ IN FRAME fMain
   1 2 3                                                                */
ASSIGN
       cred-offset_:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.cred-period IN FRAME fMain
   1 2 3 4 EXP-LABEL                                                    */
/* SETTINGS FOR FILL-IN tt-loan-cond.cred-work-calend IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-uploan.currency IN FRAME fMain
   3 EXP-LABEL EXP-FORMAT                                               */
/* SETTINGS FOR FILL-IN tt-loan-cond.DateDelay IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.DateDelayInt IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.delay IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR COMBO-BOX tt-loan-cond.delay-offset IN FRAME fMain
   1 3 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR COMBO-BOX tt-loan-cond.delay-offset-int IN FRAME fMain
   1 3 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR FILL-IN delay-offset-int_ IN FRAME fMain
   1 2 3                                                                */
ASSIGN
       delay-offset-int_:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN delay-offset_ IN FRAME fMain
   1 2 3                                                                */
ASSIGN
       delay-offset_:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.delay1 IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR FILL-IN tt-loan-cond.disch-type IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR FILL-IN tt-uploan.end-date IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT                                         */
/* SETTINGS FOR FILL-IN tt-loan-cond.int-curr-next IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.int-date IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR FILL-IN tt-loan-cond.int-mode IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
ASSIGN
       tt-loan-cond.int-mode:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.int-month IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR COMBO-BOX tt-loan-cond.int-offset IN FRAME fMain
   1 2 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR FILL-IN int-offset_ IN FRAME fMain
   1 2 3                                                                */
ASSIGN
       int-offset_:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.int-period IN FRAME fMain
   1 2 3 EXP-LABEL                                                      */
/* SETTINGS FOR FILL-IN tt-loan-cond.int-work-calend IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR TOGGLE-BOX tt-loan-cond.isklmes$ IN FRAME fMain
   1 2 3 4 6 EXP-LABEL EXP-FORMAT EXP-HELP                              */
/* SETTINGS FOR FILL-IN tt-loan-cond.kollw#gtper$ IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.kollw#gtperprc$ IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
/* SETTINGS FOR FILL-IN tt-loan-cond.kredplat$ IN FRAME fMain
   1 2 3 4 EXP-FORMAT                                                   */
/* SETTINGS FOR FILL-IN mLimit IN FRAME fMain
   1 4                                                                  */
/* SETTINGS FOR FILL-IN mLimitRest IN FRAME fMain
   4                                                                    */
/* SETTINGS FOR FILL-IN mNameCredPeriod IN FRAME fMain
   NO-ENABLE 5                                                          */
ASSIGN
       mNameCredPeriod:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN mNameDischType IN FRAME fMain
   NO-ENABLE 5                                                          */
ASSIGN
       mNameDischType:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN mNameIntPeriod IN FRAME fMain
   NO-ENABLE 5                                                          */
ASSIGN
       mNameIntPeriod:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.NDays IN FRAME fMain
   NO-ENABLE 1 3 EXP-LABEL                                              */
ASSIGN
       tt-loan-cond.NDays:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.NMonthes IN FRAME fMain
   NO-ENABLE 1 3 EXP-LABEL                                              */
ASSIGN
       tt-loan-cond.NMonthes:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.NYears IN FRAME fMain
   NO-ENABLE 1 3 EXP-LABEL                                              */
ASSIGN
       tt-loan-cond.NYears:READ-ONLY IN FRAME fMain        = TRUE.

/* SETTINGS FOR FILL-IN tt-loan-cond.PaySum IN FRAME fMain
   1 2 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR COMBO-BOX tt-loan-cond.PayType IN FRAME fMain
   1 2 EXP-LABEL EXP-FORMAT EXP-HELP                                    */
/* SETTINGS FOR FILL-IN tt-uploan.rewzim$ IN FRAME fMain
   NO-ENABLE 1 2 3 EXP-LABEL EXP-FORMAT EXP-HELP                        */
/* SETTINGS FOR FILL-IN separator-2 IN FRAME fMain
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN separator-4 IN FRAME fMain
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN tt-loan-cond.since IN FRAME fMain
   1 3 4 EXP-LABEL EXP-FORMAT                                           */
/* SETTINGS FOR FILL-IN tt-loan-cond.vidrestrukt$ IN FRAME fMain
   1 2 3 4 EXP-LABEL EXP-FORMAT EXP-HELP                                */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(TERMINAL-SIMULATION)
THEN TERMINAL-SIMULATION:HIDDEN = yes.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE br-comm
/* Query rebuild information for BROWSE br-comm
     _START_FREEFORM
OPEN QUERY {&SELF-NAME} PRESELECT EACH tt-comm-rate WHERE tt-comm-rate.since EQ tt-loan-cond.since SHARE-LOCK, LAST tt-comm-cond OUTER-JOIN WHERE tt-comm-cond.commission EQ tt-comm-rate.commission AND tt-comm-cond.since LE tt-comm-rate.since SHARE-LOCK BY tt-comm-rate.commission INDEXED-REPOSITION.
     _END_FREEFORM
     _Options          = "NO-LOCK INDEXED-REPOSITION"
     _Query            is OPENED
*/  /* BROWSE br-comm */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _QUERY-BLOCK FRAME fMain
/* Query rebuild information for FRAME fMain
     _Options          = "SHARE-LOCK KEEP-EMPTY"
     _Query            is NOT OPENED
*/  /* FRAME fMain */
&ANALYZE-RESUME



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME tt-term-amt.amt-rub
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-term-amt.amt-rub TERMINAL-SIMULATION
ON LEAVE OF tt-term-amt.amt-rub IN FRAME fMain /* ОснДолг */
DO:
   {&BT_LEAVE}
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &RecalcAnnuitet = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-term-amt.amt-rub TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-term-amt.amt-rub IN FRAME fMain /* ОснДолг */
DO:
   mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-uploan.rewzim$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-uploan.rewzim$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-uploan.rewzim$ IN FRAME fMain /* rewzim$ */
DO:
   IF NOT (   tt-uploan.rewzim$:SCREEN-VALUE EQ "ЛимВыдЗад"
           OR tt-uploan.rewzim$:SCREEN-VALUE EQ "ВозобнЛиния"
           OR tt-uploan.rewzim$:SCREEN-VALUE EQ "НевозЛиния") THEN
      ASSIGN
         mLimit:VISIBLE IN FRAME fMain     = NO
         mLimitRest:VISIBLE IN FRAME fMain = NO
      .
   ELSE
      ASSIGN
         mLimit:VISIBLE IN FRAME fMain     = YES
         mLimitRest:VISIBLE IN FRAME fMain = YES
      .

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.annuitplat$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.annuitplat$ TERMINAL-SIMULATION
ON ENTRY OF tt-loan-cond.annuitplat$ IN FRAME fMain /* annuitplat$ */
DO:
   {&BT_ENTRY}
   RUN EntryAnnuitetSumma.

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.annuitplat$ TERMINAL-SIMULATION
ON F5 OF tt-loan-cond.annuitplat$ IN FRAME fMain /* annuitplat$ */
DO:
   DEF VAR vHelp AS CHAR NO-UNDO.
   DEF BUFFER xtt-comm-rate FOR tt-comm-rate.

   /* для договоров с двумя аннуитетными суммами определяем, какая сумма должна восстанавливаться по F5  */
   /* определяем дату начала периода увеличения */
   IF  tt-uploan.class-code EQ "loan_dbl_ann" THEN
   DO:
      RUN GetDateDblAnn(tt-uploan.contract, tt-uploan.cont-code, tt-loan-cond.since, OUTPUT mDblAnnSince).
      
      FIND LAST bloan-cond WHERE 
                bloan-cond.contract  EQ tt-uploan.contract
            AND bloan-cond.cont-code EQ tt-uploan.cont-code
            AND bloan-cond.since     LT tt-loan-cond.since
      NO-LOCK NO-ERROR.
      IF AVAIL  bloan-cond THEN  
      DO:    
         /* берем сохраненную сумму аннуитета периода увеличения */
         IF  tt-loan-cond.since = mDblAnnSince THEN
         DO:
            mPrevSumma = DEC(GetXattrValueEx("loan-cond",
                                             bloan-cond.contract + "," + bloan-cond.cont-code + "," + STRING (bloan-cond.since),
                                             "AnnuitPlat2",
                                             "0")) NO-ERROR.
            IF mPrevSumma = 0 THEN 
               RUN GetAnnuitPlat2(bloan-cond.contract,bloan-cond.cont-code,bloan-cond.since,OUTPUT mPrevSumma).
         END.   
         ELSE
            mPrevSumma = DEC(GetXAttrValueEx("loan-cond", 
                                             bloan-cond.contract + "," + bloan-cond.cont-code + "," + STRING (bloan-cond.since), 
                                             "АннуитПлат", 
                                             "0")) NO-ERROR.
      END.      
   END.

   IF mPrevSumma <> ? AND
      mPrevSumma <> 0 THEN
   DO:
      mSummSource = NOT mSummSource.
      SetHelpStrAdd(REPLACE(mHelpStrAdd,IF mSummSource THEN "F5 - Восстановить из предыдущих условий"
                                                       ELSE "F5 - Пересчитать заново",
                                    IF NOT mSummSource THEN "F5 - Восстановить из предыдущих условий"
                                                       ELSE "F5 - Пересчитать заново")).
      RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
      IF mSummSource THEN
         ASSIGN
            tt-loan-cond.annuitplat$ = mPrevSumma
            tt-loan-cond.annuitplat$:SCREEN-VALUE = STRING(tt-loan-cond.annuitplat$)
            mHandCalcAnnuitet = YES
         .
      ELSE
      DO:
         FIND FIRST xtt-comm-rate WHERE
                    xtt-comm-rate.commission = "%Кред"
         NO-ERROR.

         IF AVAIL xtt-comm-rate THEN
         DO:
            RUN CalcAnnuitet(tt-uploan.contract,
                             tt-uploan.cont-code,
                             DATE(tt-loan-cond.since:SCREEN-VALUE),
                             DATE(tt-uploan.end-date:SCREEN-VALUE),
                             DEC(tt-term-amt.amt-rub:SCREEN-VALUE),
                             xtt-comm-rate.rate-comm,
                             INT64(tt-loan-cond.cred-date:SCREEN-VALUE),
                             tt-loan-cond.cred-period:SCREEN-VALUE,
                             tt-loan-cond.cred-month:SCREEN-VALUE,
                             INT64(tt-loan-cond.kollw#gtper$:SCREEN-VALUE),
                             LOOKUP(tt-loan-cond.cred-offset:SCREEN-VALUE,tt-loan-cond.cred-offset:LIST-ITEMS),
                             INT64(tt-loan-cond.annuitkorr$:SCREEN-VALUE),
                             DEC(tt-uploan.sum-depos),
                             INT64(tt-loan-cond.FirstPeriod:SCREEN-VALUE),
                             DEC(tt-loan-cond.PartAmount:SCREEN-VALUE),
                             OUTPUT tt-loan-cond.annuitplat$).
            ASSIGN
                tt-loan-cond.annuitplat$:SCREEN-VALUE = STRING(tt-loan-cond.annuitplat$)
                mHandCalcAnnuitet = NO
            .
          END.
       END.
   END.
         /* Просто пересчет суммы аннуитетного платежа */
   ELSE IF    iMode EQ {&MOD_ADD}
           OR iMode EQ {&MOD_EDIT}
   THEN DO:
      /* Принудительный пересчет суммы аннуитетного платежа */
      mChangedField = YES.

      {loan-trg.pro
         &RecalcAnnuitet = YES
         &LogVarChanged  = mChangedField
         &tt-loan        = tt-uploan
         &tt-loan-cond   = tt-loan-cond
         &tt-comm-rate   = tt-comm-rate
         &tt-amount      = tt-term-amt
         &br-comm        = br-comm
      }
      mHandCalcAnnuitet = NO.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.annuitplat$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.annuitplat$ IN FRAME fMain /* annuitplat$ */
DO:
   mHandCalcAnnuitet = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.annuitplat$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.annuitplat$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.annuitplat$ IN FRAME fMain /* annuitplat$ */
DO:
   RUN LeaveAnnuitetSumma.
   {&BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME br-comm
&Scoped-define SELF-NAME br-comm
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON CTRL-F2 OF br-comm IN FRAME fMain
ANYWHERE
DO:
   DEF VAR vRwd      AS ROWID                  NO-UNDO.
   DEF VAR vNewRate  LIKE comm-rate.rate-comm  NO-UNDO.
   DEF VAR vNewFixed LIKE comm-rate.rate-fixed NO-UNDO.
   DEF VAR vCommSpec AS CHARACTER              NO-UNDO.
   DEF VAR vErr_     AS LOGICAL NO-UNDO .

   IF mModeBrowse NE {&MOD_EDIT} THEN
      RETURN NO-APPLY.
   APPLY "LEAVE" TO FOCUS.
   IF RETURN-VALUE = {&RET-ERROR} THEN
      RETURN NO-APPLY.

   DO TRANS:
      RUN browseld.p (
         "commission",
         "currency" + CHR(1) + "contract" + CHR(1) + "enable-editing",
         STRING(tt-uploan.currency:SCREEN-VALUE) + CHR(1) + STRING(tt-uploan.contract) + CHR(1) + "enable-editing",
         "currency" + CHR(1) + "contract",
         iLevel).
   END.
  
   
   IF LASTKEY = 10 AND pick-value <> ? THEN
   DO:
      vErr_  = FALSE .
      IF CAN-FIND( FIRST tt-comm-rate WHERE tt-comm-rate.commission = pick-value)
      THEN DO:
         vErr_  = TRUE .
         MESSAGE
            COLOR MESSAGES
            SUBSTITUTE("Комиссия <&1> уже добавлена в условие договора !" , pick-value )
            VIEW-AS ALERT-BOX.

      END.
      /* Проверим , можно ли добавить эту коммисию */
      vCommSpec = FGetSettingEx("РазрешДопКом",
                                 IF tt-uploan.Contract EQ "Депоз"
                                    THEN "ДепДопКом"
                                    ELSE "КредДопКом",
                                 "",
                                 NO).
      /* Добавляем к списку комиссии, разрешенные на этапе инициализации */
      vCommSpec = vCommSpec +
                  (IF TRIM(vCommSpec) <> '' THEN ','
         ELSE '') +
         GetXattrEx(tt-uploan.class-code,"rate-list","Initial").

      IF LOOKUP( pick-value, vCommSpec) = 0
      THEN DO:
         vErr_  = TRUE .
         MESSAGE
            COLOR MESSAGES
            SUBSTITUTE("Комиссия <&1> не подходит для Кредитов/Депозитов !" , pick-value )
            VIEW-AS ALERT-BOX.
      END.

      IF vErr_
      THEN DO:
         vRwd = ROWID(tt-comm-rate).
         {&OPEN-QUERY-br-comm}
         REPOSITION br-comm TO ROWID vRwd.
         &IF DEFINED(MANUAL-REMOTE) &THEN
         RUN UpdateBrowser(br-comm:HANDLE).
         &ENDIF
         APPLY "entry" TO FOCUS.
         RETURN.
      END.

      /* Создадим новую запись проверив что нет пустой */
      FIND FIRST tt-comm-rate WHERE tt-comm-rate.since EQ tt-loan-cond.since
        AND tt-comm-rate.commission = "" NO-ERROR.
      IF NOT AVAIl tt-comm-rate THEN 
        CREATE tt-comm-rate.
        
      FOR EACH b-comm-rate BY b-comm-rate.Local__Id DESC:
         LEAVE.
      END.
      BUFFER-COPY b-comm-rate EXCEPT local__id local__rowid commission rate-comm comm-rate-id
      TO tt-comm-rate.
      tt-comm-rate.commission  = pick-value.
      tt-comm-rate.Local__UpId = tt-loan-cond.local__Id.
      tt-comm-rate.since       = tt-loan-cond.since.
      tt-comm-rate.Local__Id   = MAX(GetInstanceId("tt-comm-rate"),
                                   b-comm-rate.Local__Id) + 1.
     
      /* Создадим новую  запись во временной таблице плавающих ставок аналогично */
      FIND FIRST tt-comm-cond WHERE tt-comm-cond.since EQ tt-loan-cond.since
                                AND tt-comm-cond.commission = "" NO-ERROR.
      IF NOT AVAIL tt-comm-cond THEN
         CREATE tt-comm-cond.
     
      FOR EACH b-comm-cond BY b-comm-cond.Local__Id DESC:
         LEAVE.
      END.
     
      ASSIGN
         tt-comm-cond.contract    = tt-uploan.contract
         tt-comm-cond.cont-code   = tt-uploan.cont-code
         tt-comm-cond.commission  = tt-comm-rate.commission
         tt-comm-cond.since       = tt-comm-rate.since
         tt-comm-cond.class-code  = "comm-cond"
         tt-comm-cond.FloatType   = NO 
         tt-comm-cond.local__UpId = tt-loan-cond.local__Id.
         tt-comm-cond.local__Id   = MAX(GetInstanceId("tt-comm-cond"),
                                         b-comm-cond.Local__Id) + 1
      .
     

      tt-comm-rate.commission = pick-value.
      RUN getDefaultRate IN hDefaultRate ('init-rate' , /* Код справочника. */
                                          tt-loan-cond.since:INPUT-VALUE,
                                          tt-uploan.class-code,
                                          tt-uploan.currency,
                                          tt-uploan.cont-type,
                                          tt-comm-rate.commission,
                                          OUTPUT vNewRate).
      RUN getDefaultFixed IN hDefaultRate ('init-fixed',
                                           tt-loan-cond.since:INPUT-VALUE,
                                           tt-uploan.class-code,
                                           tt-uploan.currency,
                                           tt-uploan.cont-type,
                                           tt-comm-rate.commission,
                                           OUTPUT vNewFixed).
      IF vNewFixed NE ? THEN
         tt-comm-rate.rate-fixed = vNewFixed.
      ELSE
         tt-comm-rate.rate-fixed = GET_HEAD_COMM_TYPE (tt-comm-rate.commission,
                                                       tt-uploan.currency,
                                                       tt-loan-cond.since:INPUT-VALUE).
      
      IF NOT CAN-DO(mKomisNacVal,tt-comm-rate.commission) THEN
         tt-comm-rate.comm-rate-curr = tt-uploan.currency:SCREEN-VALUE. 

   END.

    vRwd = ROWID(tt-comm-rate).
   {&OPEN-QUERY-br-comm}
   REPOSITION br-comm TO ROWID vRwd.
  
   APPLY "ENTRY" TO tt-comm-rate.rate-comm IN BROWSE br-comm.
     
   IF RETURN-VALUE = {&RET-ERROR} THEN
   DO:
      RETURN NO-APPLY.
   END.

   IF vNewRate NE ? THEN
      tt-comm-rate.rate-comm = vNewRate.
   ELSE
      tt-comm-rate.rate-comm = 0.
   tt-comm-rate.min_value = 0.
   DISP
      tt-comm-rate.commission
      tt-comm-rate.rate-fixed
      tt-comm-cond.floattype
      tt-comm-rate.rate-comm
      tt-comm-rate.min_value
      WITH BROWSE br-comm.
   IF tt-comm-rate.commission EQ "" THEN
      DISP
         "" @ mNameCommi
         WITH BROWSE br-comm.
   br-comm:REFRESH().      
   &IF DEFINED(MANUAL-REMOTE) &THEN
   RUN UpdateBrowser(br-comm:HANDLE).
   &ENDIF
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define BROWSE-NAME br-comm
&Scoped-define SELF-NAME br-comm
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON CTRL-F9 OF br-comm IN FRAME fMain
ANYWHERE
DO:
   IF iMode EQ {&MOD_ADD} THEN
   DO:
      DEF VAR vTempRateComm AS DEC NO-UNDO.

      DEFINE VARIABLE vOk AS LOGICAL    NO-UNDO.

      /* Определеяем редактируемое правило */


      vTempRateComm = DEC(tt-comm-rate.rate-comm:SCREEN-VALUE IN BROWSE br-comm).

      RUN f-cratepl.p (INPUT BUFFER tt-comm-rate:HANDLE,INPUT BUFFER tt-comm-cond:HANDLE,br-comm:ROW,OUTPUT vOk).
      IF tt-comm-cond.floattype THEN
      DO:
         RUN CalcFloatRate (tt-uploan.contract,
                            tt-uploan.cont-code,
                            tt-comm-cond.source,
                            IF tt-comm-cond.source EQ "Общие ставки" THEN tt-comm-cond.BaseCode
                                                                     ELSE tt-comm-cond.commission,
                            DATE(tt-loan-cond.since:SCREEN-VALUE),
                            tt-comm-cond.action,
                            tt-comm-cond.BaseChange,
                            tt-comm-cond.firstdelay,
                            tt-comm-cond.NegBaseRate NE "Нет",
                            OUTPUT vDatePS,
                            OUTPUT vBaseRatePS,
                            OUTPUT vRatePS).

         IF vRatePS NE 0 THEN
            FIND FIRST tt-comm-rate WHERE tt-comm-rate.commission EQ tt-comm-cond.commission
                                      AND tt-comm-rate.since      EQ tt-loan-cond.since
            EXCLUSIVE-LOCK NO-WAIT NO-ERROR.

            IF AVAIL tt-comm-rate THEN
               ASSIGN
                  tt-comm-rate.rate-comm = vRatePS.
      END.        
      ELSE vOk = Yes.
      IF vOk  THEN
      DO:
         br-comm:REFRESH().
         &IF DEFINED(MANUAL-REMOTE) &THEN
         RUN UpdateBrowser(br-comm:HANDLE).
         &ENDIF
      END.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON CTRL-F3 OF br-comm IN FRAME fMain
ANYWHERE
DO:
   DEFINE VARIABLE vRwd AS ROWID      NO-UNDO.
   DEFINE VARIABLE vTmp AS ROWID     NO-UNDO.
   IF mModeBrowse NE {&MOD_EDIT} THEN
      RETURN NO-APPLY.
   IF NUM-RESULTS("br-comm") EQ 1 THEN
   DO:
      vRwd = ROWID(tt-comm-rate).
      tt-comm-rate.commission = "".
      tt-comm-rate.rate-comm = 0.
      tt-comm-rate.local__template = YES.
      tt-comm-rate.Local__Id = GetInstanceId("tt-comm-rate") + 1.
      DISP
         tt-comm-rate.commission
         "" @ mNameCommi
         tt-comm-rate.rate-comm
         WITH BROWSE br-comm.
   END.
   ELSE
   DO:
      DELETE tt-comm-rate.
      br-comm:DELETE-SELECTED-ROW(1).
      vRwd = ROWID(tt-comm-rate).
   END.
   {&OPEN-QUERY-br-comm}
   REPOSITION br-comm TO ROWID vRwd.
   &IF DEFINED(MANUAL-REMOTE) &THEN
   RUN UpdateBrowser(br-comm:HANDLE).
   &ENDIF
   APPLY "entry" TO FOCUS.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON CTRL-J OF br-comm IN FRAME fMain
ANYWHERE
DO:
   APPLY "LEAVE" TO FOCUS.
   IF RETURN-VALUE = {&RET-ERROR} THEN
      RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON ENTER OF br-comm IN FRAME fMain
ANYWHERE
DO:
   DEFINE VARIABLE vRow AS ROWID      NO-UNDO.
   APPLY "LEAVE" TO FOCUS.
   IF RETURN-VALUE = {&RET-ERROR} THEN
      RETURN NO-APPLY.
   IF FOCUS:NAME EQ "rate-comm" THEN
   DO:
      vRow = ROWID(tt-comm-rate).
      APPLY "CURSOR-RIGHT" TO br-comm.
      IF vRow EQ ROWID(tt-comm-rate) THEN
         APPLY "TAB" TO SELF.
   END.
   ELSE IF FOCUS:NAME EQ "min_value" THEN
   DO:
      vRow = ROWID(tt-comm-rate).
      APPLY "CURSOR-DOWN" TO br-comm.
      IF vRow EQ ROWID(tt-comm-rate)
         THEN APPLY "TAB"        TO SELF.
         ELSE APPLY "BACK-TAB"   TO SELF.
   END.
   ELSE IF FOCUS:NAME EQ "comm-rate-curr" THEN
   DO:
      vRow = ROWID(tt-comm-rate).
      APPLY "CURSOR-DOWN" TO br-comm.
      IF vRow EQ ROWID(tt-comm-rate) 
         THEN APPLY "TAB"        TO SELF.
         ELSE APPLY "BACK-TAB"   TO SELF.
   END.
   ELSE
      APPLY "TAB" TO SELF.
   RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON ENTRY OF br-comm IN FRAME fMain
DO:
   &IF DEFINED(MANUAL-REMOTE) = 0 &THEN
    DEF BUFFER comm-rate FOR comm-rate.
    DEF VAR    vCommCurr AS CHAR NO-UNDO.
    DEF VAR    vLoanCurr AS CHAR NO-UNDO.
    IF SELF:NAME EQ "br-comm" THEN
    DO:
       vLoanCurr = tt-uploan.currency:SCREEN-VALUE.
       FOR EACH tt-comm-rate:
         ASSIGN
            tt-comm-rate.since = tt-loan-cond.since
            tt-comm-cond.since = tt-loan-cond.since
         .
         IF     {assigned vLoanCurr} 
            AND NOT mIsProcStCh
         THEN DO:
            IF iMode EQ {&MOD_ADD} THEN
            DO:
                  /* Ищем предыдущую комиссию */
               FIND LAST comm-rate WHERE
                         comm-rate.commission EQ tt-comm-rate.commission
                     AND comm-rate.kau        EQ tt-uploan.contract + "," + tt-uploan.cont-code
                     AND comm-rate.since      LT tt-comm-rate.since
               NO-LOCK NO-ERROR.
                  /* Сбрасываем для каждой комиссии в значение ? */
               vCommCurr = ?.
                  /* Если комиссия уже была заведена, то берем ее валюту. */
               IF AVAIL comm-rate THEN
                  vCommCurr = GetXAttrValueEx("comm-rate",
                                              STRING(comm-rate.comm-rate-id),
                                              "comm-rate-curr",
                                              "").
               IF     AVAIL comm-rate
                  AND vCommCurr NE ? THEN
                  ASSIGN  
                     tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = vCommCurr 
                     tt-comm-rate.comm-rate-curr = vCommCurr
                  .
               ELSE IF NOT CAN-DO(mKomisNacVal,tt-comm-rate.commission) THEN 
                  ASSIGN  
                     tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = 
                        tt-uploan.currency:SCREEN-VALUE
                     tt-comm-rate.comm-rate-curr = tt-uploan.currency:SCREEN-VALUE
                  .
            END.
            ELSE IF tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = "?"
            THEN 
               ASSIGN  
                  tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = ""
                  tt-comm-rate.comm-rate-curr = ""
               .
         END.
         APPLY "DOWN" TO tt-comm-rate.rate-comm IN BROWSE br-comm.
      END.
      {&OPEN-QUERY-br-comm}
      br-comm:REFRESH().
      RUN PutHelp(
         "F1" + (IF mModeBrowse EQ {&MOD_EDIT} THEN "│Ctrl-F2 - Добавить│Ctrl-F3 - Удалить│Ctrl-F9 - Редактировать" ELSE (IF mSwitchF9 THEN "│F9" ELSE "")),
         FRAME {&MAIN-FRAME}:HANDLE).
      IF mModeBrowse EQ {&MOD_EDIT} THEN
      DO:
         APPLY "ENTRY" TO tt-comm-rate.rate-comm IN BROWSE br-comm.
         RETURN NO-APPLY.
      END.
    END.
    IF iMode EQ {&MOD_VIEW} THEN
      FOR EACH tt-comm-rate:
         IF tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm EQ ? THEN
            tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = "".
      END.
   &ENDIF
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON F1 OF br-comm IN FRAME fMain
ANYWHERE
DO:
   DEF VAR vLoanCurr AS CHARACTER NO-UNDO.
   IF SELF:NAME EQ "commission" AND mModeBrowse EQ {&MOD_EDIT} THEN
   DO:
      /* Если contract КредРО - то ставим Кредит, иначе что было */
      mContr = IF STRING(tt-uploan.contract) EQ "КредРО"
                  THEN "Кредит"
                  ELSE STRING(tt-uploan.contract).
      DO TRANS:
         RUN browseld.p (
            "commission",
            "currency" + CHR(1) + "contract" + CHR(1) + "enable-editing",
            STRING(tt-uploan.currency:SCREEN-VALUE) + CHR(1) + mContr + CHR(1) + "enable-editing",
            "currency" + CHR(1) + "contract",
            iLevel).
         IF LASTKEY = 10 AND pick-value <> ? THEN
            SELF:SCREEN-VALUE = pick-value.
      END.
   END.
   IF SELF:NAME EQ "comm-rate-curr" THEN
   DO:
      DO TRANS:
         pick-value = ?.
         RUN currency.p('Учетный',3).
   
         IF    LASTKEY = 10    
            AND pick-value <> ? THEN
            SELF:SCREEN-VALUE = pick-value.
      END.
   END.
   IF SELF:NAME EQ "comm-rate-curr" THEN
   DO:
      vLoanCurr = tt-uploan.currency:SCREEN-VALUE.
      IF {assigned vLoanCurr} THEN
      DO:
         IF SELF:SCREEN-VALUE EQ vLoanCurr THEN
            SELF:SCREEN-VALUE = "".
         ELSE
            SELF:SCREEN-VALUE = vLoanCurr.
      END.
   END.
   RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON ROW-LEAVE OF br-comm IN FRAME fMain
DO:
   DEF VAR vCommRateCurr AS CHARACTER NO-UNDO.
   vCommRateCurr = tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm.
   IF  AVAIL tt-comm-rate 
   AND CAN-DO(mKomisNacVal,tt-comm-rate.commission)
   AND {assigned vCommRateCurr} THEN
   DO:
      IF LASTKEY NE KEYCODE("ESC") THEN
      DO:
         RUN Fill-SysMes IN h_tmess ("","","0",
         SUBSTITUTE("Комиссия &1 может быть только в нац.валюте.",tt-comm-rate.commission)).
         APPLY 'ENTRY' TO tt-comm-rate.comm-rate-curr IN BROWSE br-comm.
         RETURN NO-APPLY.
      END.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON LEAVE OF br-comm IN FRAME fMain
ANYWHERE
DO:
  mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
  {loan-trg.pro
     &LeaveBrowseComm = YES
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
  }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&IF DEFINED(MANUAL-REMOTE) = 0 &THEN

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON ROW-ENTRY OF br-comm IN FRAME fMain
DO:                                                             
   tt-comm-rate.comm-rate-curr:READ-ONLY IN BROWSE br-comm 
      = tt-comm-rate.rate-fixed:SCREEN-VALUE IN BROWSE br-comm EQ "%".
   APPLY 'ENTRY' TO tt-comm-rate.rate-comm IN BROWSE br-comm. 
   RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ENDIF

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL br-comm TERMINAL-SIMULATION
ON VALUE-CHANGED OF br-comm IN FRAME fMain
ANYWHERE DO:
   IF SELF:NAME EQ "rate-fixed" THEN
   DO:
      ASSIGN
         tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = ""
         tt-comm-rate.comm-rate-curr:READ-ONLY IN BROWSE br-comm = 
            tt-comm-rate.rate-fixed:SCREEN-VALUE IN BROWSE br-comm EQ "%"
      .
      RETURN /*NO-APPLY */.
   END.
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &ValueChangedBrowseComm = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
   mIsProcStCh = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.CondEndDate
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.CondEndDate TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.CondEndDate IN FRAME fMain /* Нов.дата оконч. */
DO:
   {&BEG_BT_LEAVE}
   IF iMode EQ {&MOD_ADD} THEN
   DO:
      IF    DATE(tt-loan-cond.CondEndDate:SCREEN-VALUE) LE mPrevEndDate
         OR DATE(tt-loan-cond.CondEndDate:SCREEN-VALUE) EQ ? THEN
      DO:
         RUN Fill-SysMes ("", "", "0",
                          "Дата должна быть больше даты окончания договора - " +
                          STRING (tt-uploan.end-date) + ".") NO-ERROR.
         {return_no_apply.i '{&RET-ERROR}'}
      END.
   END.
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.PartAmount
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PartAmount TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.PartAmount IN FRAME fMain /* Нов.дата оконч. */
DO:
   {&BT_LEAVE} 
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &RecalcAnnuitet = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PartAmount TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.PartAmount IN FRAME fMain /* cred-date */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.FirstPeriod
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.FirstPeriod TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.FirstPeriod IN FRAME fMain /* Нов.дата оконч. */
DO:
   
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &RecalcAnnuitet = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.FirstPeriod TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.FirstPeriod IN FRAME fMain /* cred-date */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.cred-date
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-date TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.cred-date IN FRAME fMain /* cred-date */
DO:
  {&BT_LEAVE}
  mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
  {loan-trg.pro
     &RecalcAnnuitet = YES
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
  }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-date TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.cred-date IN FRAME fMain /* cred-date */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.cred-mode
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-mode TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.cred-mode IN FRAME fMain /* cred-mode */
DO:
   /* изменяем видимые поля в зависимости от значения cred-mode (Плат. период - осн.долг) */
   CASE tt-loan-cond.cred-mode:SCREEN-VALUE:
      WHEN "КоличДней" THEN
         ASSIGN 
            tt-loan-cond.DateDelay        :VISIBLE = NO
            tt-loan-cond.cred-curr-next   :VISIBLE = NO
            tt-loan-cond.delay1           :VISIBLE = YES
            tt-loan-cond.cred-work-calend :VISIBLE = YES
            tt-loan-cond.grperiod$        :VISIBLE = NO
         .
      WHEN "ДатаОконч" THEN
         ASSIGN 
            tt-loan-cond.DateDelay        :VISIBLE = YES
            tt-loan-cond.cred-curr-next   :VISIBLE = YES
            tt-loan-cond.delay1           :VISIBLE = NO
            tt-loan-cond.cred-work-calend :VISIBLE = NO
            tt-loan-cond.grperiod$        :VISIBLE = NO
         .
      WHEN "ПериодДн" THEN
      DO:
         ASSIGN 
            tt-loan-cond.DateDelay        :VISIBLE = NO
            tt-loan-cond.cred-curr-next   :VISIBLE = NO
            tt-loan-cond.delay1           :VISIBLE = YES
            tt-loan-cond.cred-work-calend :VISIBLE = NO
            tt-loan-cond.grperiod$        :VISIBLE = YES
         .
         DISPLAY tt-loan-cond.grperiod$ WITH FRAME {&MAIN-FRAME}.
      END.
   END CASE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.cred-month
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-month TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.cred-month IN FRAME fMain /* cred-month */
DO:
  {&BEG_BT_LEAVE}
  IF  ( tt-loan-cond.cred-period:INPUT-VALUE EQ "К"
    AND tt-loan-cond.cred-month:INPUT-VALUE GT 3
    OR  tt-loan-cond.cred-period:INPUT-VALUE EQ "ПГ"
    AND tt-loan-cond.cred-month:INPUT-VALUE GT 6
    OR  tt-loan-cond.cred-period:INPUT-VALUE EQ "Г"
    AND tt-loan-cond.cred-month:INPUT-VALUE GT 12 )
    OR ((tt-loan-cond.cred-period:INPUT-VALUE EQ "К"
    OR   tt-loan-cond.cred-period:INPUT-VALUE EQ "ПГ"
    OR   tt-loan-cond.cred-period:INPUT-VALUE EQ "Г")
    AND  tt-loan-cond.cred-month:INPUT-VALUE  LE 0) THEN
  DO:
     RUN Fill-SysMes ("", "", "0", "В указанном периоде нет месяца с указанным номером.") NO-ERROR.
     {return_no_apply.i '{&RET-ERROR}'}
  END.
  {&BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-month TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.cred-month IN FRAME fMain /* cred-month */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME cred-offset_
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL cred-offset_ TERMINAL-SIMULATION
ON F1 OF cred-offset_ IN FRAME fMain
,int-offset_,delay-offset_,delay-offset-int_
DO:
   DEF VAR vi AS INT64    NO-UNDO.
   /* переключение значений */
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      vi = LOOKUP(SELF:SCREEN-VALUE,mOffsetVld).
      vi = vi + 1.
      IF vi GT NUM-ENTRIES(mOffsetVld) THEN vi = 1.
      SELF:SCREEN-VALUE = ENTRY(vi,mOffsetVld).
      APPLY "VALUE-CHANGED" TO SELF.
      RETURN NO-APPLY.
   END.
   {&BT_F1}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL cred-offset_ TERMINAL-SIMULATION
ON LEAVE OF cred-offset_ IN FRAME fMain
DO:
   {&BEG_BT_LEAVE}
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      /* валидация значения */
      IF NOT CAN-DO(mOffsetVld,SELF:SCREEN-VALUE)  THEN
      DO:
         RUN GetXAttr (tt-loan-cond.class-code, "cred-offset",BUFFER xattr).
         RUN Fill-SysMes IN h_tmess ("", "", "0",
            "Значение реквизита ~"" + xattr.name + "~" класса ~"" + xattr.class-code +
            "~" не соответствует списку допустимых значений ~"" + mOffsetVld + "~"").
         RETURN NO-APPLY {&RET-ERROR}.
      END.
      
      {&BT_LEAVE}
      mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
      {loan-trg.pro
         &RecalcAnnuitet = YES
         &LogVarChanged  = mChangedField
         &tt-loan        = tt-uploan
         &tt-loan-cond   = tt-loan-cond
         &tt-comm-rate   = tt-comm-rate
         &tt-amount      = tt-term-amt
         &br-comm        = br-comm
      }
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL cred-offset_ TERMINAL-SIMULATION
ON VALUE-CHANGED OF cred-offset_ IN FRAME fMain
DO:
   /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
   ASSIGN
      tt-loan-cond.cred-offset:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                 THEN {&CB-NONE}
                                                 ELSE SELF:SCREEN-VALUE
      tt-loan-cond.cred-offset              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                 THEN ""
                                                 ELSE SELF:SCREEN-VALUE.
   mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL int-offset_ TERMINAL-SIMULATION
ON VALUE-CHANGED OF int-offset_ IN FRAME fMain
DO:
   /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
   ASSIGN
      tt-loan-cond.int-offset:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                             THEN {&CB-NONE}
                                             ELSE SELF:SCREEN-VALUE
      tt-loan-cond.int-offset              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                             THEN ""
                                             ELSE SELF:SCREEN-VALUE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL delay-offset_ TERMINAL-SIMULATION
ON VALUE-CHANGED OF delay-offset_ IN FRAME fMain
DO:
   /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
   ASSIGN
      tt-loan-cond.delay-offset:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                               THEN {&CB-NONE}
                                               ELSE SELF:SCREEN-VALUE
      tt-loan-cond.delay-offset              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                               THEN ""
                                               ELSE SELF:SCREEN-VALUE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL delay-offset-int_ TERMINAL-SIMULATION
ON VALUE-CHANGED OF delay-offset-int_ IN FRAME fMain
DO:
   /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
   ASSIGN
      tt-loan-cond.delay-offset-int:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                   THEN {&CB-NONE}
                                                   ELSE SELF:SCREEN-VALUE
      tt-loan-cond.delay-offset-int              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                   THEN ""
                                                   ELSE SELF:SCREEN-VALUE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.cred-period
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-period TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.cred-period IN FRAME fMain /* Осн.долг */
DO:
   {&BEG_BT_LEAVE}

   ASSIGN
      mNameCredPeriod:SCREEN-VALUE =
         GetDomainCodeName(tt-loan-cond.class-code,
                           "cred-period",
                           tt-loan-cond.cred-period:SCREEN-VALUE)
   .
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
     &RecalcAnnuitet = YES
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
   }

   {&END_BT_LEAVE}

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.cred-period TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.cred-period IN FRAME fMain /* Осн.долг */
DO:
  ASSIGN
     tt-loan-cond.cred-month:SCREEN-VALUE = "1"
     mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-uploan.currency
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-uploan.currency TERMINAL-SIMULATION
ON LEAVE OF tt-uploan.currency IN FRAME fMain /* Вал */
DO:
   DEFINE VARIABLE vName AS CHARACTER  NO-UNDO.
   APPLY "LEAVE" TO FRAME {&MAIN-FRAME}.
   IF RETURN-VALUE EQ {&RET-ERROR}
      THEN RETURN NO-APPLY.
   IF LASTKEY = KEYCODE("ESC") OR iMode EQ {&MOD_VIEW} THEN RETURN.
   vName = GetBufferValue("currency",
                          "WHERE currency.currency EQ '" +
                              INPUT FRAME {&MAIN-FRAME} tt-uploan.currency + "'",
                          "i-currency").
  IF vName EQ ? THEN
  DO:
     SELF:SCREEN-VALUE = "".
     MESSAGE "Валюта отсутствует в справочнике"
        VIEW-AS ALERT-BOX INFO BUTTONS OK.
     RETURN NO-APPLY {&RET-ERROR}.
  END.

   tt-comm-rate.comm-rate-curr:READ-ONLY IN BROWSE br-comm = tt-uploan.currency:SCREEN-VALUE EQ "".
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-uploan.currency TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-uploan.currency IN FRAME fMain /* Валюта */
DO:
  mIsProcStCh = NO.
END.


/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.DateDelay
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.DateDelay TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.DateDelay IN FRAME fMain /* DateDelay */
,tt-loan-cond.DateDelayInt
DO:
   {&BEG_BT_LEAVE}

   /* номер дня в месяце на может быть > 31 или <1 */
   IF INT64(SELF:SCREEN-VALUE) GT 31 THEN SELF:SCREEN-VALUE = "31".
   IF INT64(SELF:SCREEN-VALUE) LT 1  THEN SELF:SCREEN-VALUE = "1".

   /* номер дня (в текущем месяце) окончания плат.периода не может быть
   ** больше номера дня начала платежного периода */
   IF     tt-loan-cond.cred-date     :VISIBLE
      AND tt-loan-cond.cred-curr-next:VISIBLE
      AND tt-loan-cond.DateDelay     :VISIBLE
      AND tt-loan-cond.cred-curr-next:SCREEN-VALUE EQ ENTRY(1,tt-loan-cond.cred-curr-next:FORMAT,"/")
      AND INT64(tt-loan-cond.cred-date:SCREEN-VALUE) GT INT64(tt-loan-cond.DateDelay:SCREEN-VALUE)
   THEN DO:
      RUN Fill-SysMes IN h_tmess ("", "", "", "Дата окончания платежного периода (день " +
                                  tt-loan-cond.DateDelay:SCREEN-VALUE + ") не может быть~n " +
                                  "меньше даты его начала (день " + tt-loan-cond.cred-date:SCREEN-VALUE + ").").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   IF     tt-loan-cond.int-date     :VISIBLE
      AND tt-loan-cond.int-curr-next:VISIBLE
      AND tt-loan-cond.DateDelayInt :VISIBLE
      AND tt-loan-cond.int-curr-next:SCREEN-VALUE EQ ENTRY(1,tt-loan-cond.int-curr-next:FORMAT,"/")
      AND INT64(tt-loan-cond.int-date:SCREEN-VALUE) GT INT64(tt-loan-cond.DateDelayInt:SCREEN-VALUE)
   THEN DO:
      RUN Fill-SysMes IN h_tmess ("", "", "", "Дата окончания платежного периода (день " +
                                  tt-loan-cond.DateDelayInt:SCREEN-VALUE + ") не может быть~n " +
                                  "меньше даты его начала (день " + tt-loan-cond.int-date:SCREEN-VALUE + ").").
      RETURN NO-APPLY {&RET-ERROR}.
   END.

   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME delay-offset-int_
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL delay-offset-int_ TERMINAL-SIMULATION
ON LEAVE OF delay-offset-int_ IN FRAME fMain
DO:
   {&BEG_BT_LEAVE}
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      /* валидация значения */
      IF NOT CAN-DO(mOffsetVld,SELF:SCREEN-VALUE)  THEN
      DO:
         RUN GetXAttr (tt-loan-cond.class-code,"delay-offset-int",BUFFER xattr).
         RUN Fill-SysMes IN h_tmess ("", "", "0",
            "Значение реквизита ~"" + xattr.name + "~" класса ~"" + xattr.class-code +
            "~" не соответствует списку допустимых значений ~"" + mOffsetVld + "~"").
         RETURN NO-APPLY {&RET-ERROR}.
      END.
      /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
      ASSIGN
         tt-loan-cond.delay-offset-int:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                         THEN {&CB-NONE}
                                                         ELSE SELF:SCREEN-VALUE
         tt-loan-cond.delay-offset-int              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                         THEN ""
                                                         ELSE SELF:SCREEN-VALUE.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME delay-offset_
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL delay-offset_ TERMINAL-SIMULATION
ON LEAVE OF delay-offset_ IN FRAME fMain
DO:
   {&BEG_BT_LEAVE}
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      /* валидация значения */
      IF NOT CAN-DO(mOffsetVld,SELF:SCREEN-VALUE)  THEN
      DO:
         RUN GetXAttr (tt-loan-cond.class-code,"delay-offset",BUFFER xattr).
         RUN Fill-SysMes IN h_tmess ("", "", "0",
            "Значение реквизита ~"" + xattr.name + "~" класса ~"" + xattr.class-code +
            "~" не соответствует списку допустимых значений ~"" + mOffsetVld + "~"").
         RETURN NO-APPLY {&RET-ERROR}.
      END.
      /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
      ASSIGN
         tt-loan-cond.delay-offset:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                     THEN {&CB-NONE}
                                                     ELSE SELF:SCREEN-VALUE
         tt-loan-cond.delay-offset              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                     THEN ""
                                                     ELSE SELF:SCREEN-VALUE.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.delay1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.delay1 TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.delay1 IN FRAME fMain /* delay1 */
DO:
   mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.disch-type
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.disch-type TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.disch-type IN FRAME fMain /* Форма расчета */
DO:
   {&BEG_BT_LEAVE}
   IF GetBufferValue("disch-type",
                     "where disch-type = " + SELF:SCREEN-VALUE,
                     "name") EQ ? THEN
   DO:
      MESSAGE "Форма расчета отсутствует в справочнике"
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   mNameDischType:SCREEN-VALUE =
      GetBufferValue("disch-type",
                     "where disch-type = " + SELF:SCREEN-VALUE,
                     "name").
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-uploan.end-date
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-uploan.end-date TERMINAL-SIMULATION
ON LEAVE OF tt-uploan.end-date IN FRAME fMain /* По */
DO:
   {&BEG_BT_LEAVE}
   IF tt-loan-cond.since:INPUT-VALUE GT tt-uploan.end-date:INPUT-VALUE THEN
   DO:
      RUN Fill-SysMes IN h_tmess ("", "", "0", "Дата окончание не может быть меньше даты начала").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   IF mUpEndDate NE ? AND
      tt-uploan.end-date:INPUT-VALUE GT mUpEndDate THEN
   DO:
      RUN Fill-SysMes IN h_tmess ("", "", "0", "Дата закрытия течения  не может быть больше даты закрытия договора").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
         /* Изменение даты окончания договора в меньшую сторону */
   IF     iMode EQ {&MOD_EDIT}
      AND tt-uploan.end-date:INPUT-VALUE LT tt-uploan.end-date
   THEN DO:
               /* Если есть пролонгации датой больше новой даты окончания договора */
      IF CAN-FIND(FIRST pro-obl WHERE pro-obl.contract   EQ tt-loan-cond.contract
                                  AND pro-obl.cont-code  EQ tt-loan-cond.cont-code
                                  AND pro-obl.idnt       EQ 3
                                  AND pro-obl.n-end-date GT tt-uploan.end-date:INPUT-VALUE)
      THEN DO:
                  /* Не позволяем изменение даты, т.к. при этом платеж пролонгированный будет удален */
         RUN Fill-SysMes IN h_tmess ("", "", "0", "Существуют пролонгации обязательств на даты больше новой даты окончания договора. Сначала удалите пролонгации вручную.").
         tt-uploan.end-date:SCREEN-VALUE = STRING(tt-uploan.end-date).
         {return_no_apply.i '{&RET-ERROR}'}
      END.
   END.
   {&BT_LEAVE}
  
   {loan-trg.pro
     &RecalcAnnuitet = YES
     &RecalcDMY      = YES     
     &OpenDate       = STRING(tt-uploan.open-date)
     &EndDate        = tt-uploan.end-date:SCREEN-VALUE                  
     &SrokChange     = mSrokChange
     &HandCalcAnnuitet = mHandCalcAnnuitet
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
   }

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-uploan.end-date TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-uploan.end-date IN FRAME fMain /* По */
DO:
   ASSIGN
      mSrokChange   = YES
      mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.int-mode
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-mode TERMINAL-SIMULATION
ON F1 OF tt-loan-cond.int-mode IN FRAME fMain /* int-mode */
,tt-loan-cond.cred-mode
DO:
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      SELF:READ-ONLY = NO.
      mCall_F1_IN_Frame = YES.
      APPLY "F1" TO FRAME {&MAIN-FRAME}.
      mCall_F1_IN_Frame = NO.
      SELF:READ-ONLY = YES.
      RETURN NO-APPLY.
   END.
   {&BT_F1}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-mode TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.int-mode IN FRAME fMain /* int-mode */
DO:
   {&BEG_BT_LEAVE}
   IF tt-loan-cond.int-mode:INPUT-VALUE EQ "ПериодДн" THEN
   DO:
      RUN Fill-SysMes ("", "", "0", "Для % нельзя выбрать тип ПериодДн.") NO-ERROR.
      {return_no_apply.i '{&RET-ERROR}'}
   END.
   {&BT_LEAVE}
   /* изменяем видимые поля в зависимости от значения int-mode (Плат. период - проценты) */
   IF tt-loan-cond.int-mode:SCREEN-VALUE  EQ "КоличДней"
   THEN ASSIGN tt-loan-cond.DateDelayint     :VISIBLE = NO
               tt-loan-cond.int-curr-next    :VISIBLE = NO
               tt-loan-cond.delay            :VISIBLE = YES
               tt-loan-cond.int-work-calend  :VISIBLE = YES.
   ELSE ASSIGN tt-loan-cond.delay            :VISIBLE = NO
               tt-loan-cond.int-work-calend  :VISIBLE = NO
               tt-loan-cond.DateDelayint     :VISIBLE = YES
               tt-loan-cond.int-curr-next    :VISIBLE = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.int-month
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-month TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.int-month IN FRAME fMain /* int-month */
DO:
  {&BEG_BT_LEAVE}
  IF  ( tt-loan-cond.int-period:INPUT-VALUE EQ "К"
    AND tt-loan-cond.int-month:INPUT-VALUE GT 3
    OR  tt-loan-cond.int-period:INPUT-VALUE EQ "ПГ"
    AND tt-loan-cond.int-month:INPUT-VALUE GT 6
    OR  tt-loan-cond.int-period:INPUT-VALUE EQ "Г"
    AND tt-loan-cond.int-month:INPUT-VALUE GT 12 )
    OR ((tt-loan-cond.int-period:INPUT-VALUE EQ "К"
    OR   tt-loan-cond.int-period:INPUT-VALUE EQ "ПГ"
    OR   tt-loan-cond.int-period:INPUT-VALUE EQ "Г")
    AND  tt-loan-cond.int-month:INPUT-VALUE  LE 0) THEN
  DO:
     RUN Fill-SysMes ("", "", "0", "В указанном периоде нет месяца с указанным номером.") NO-ERROR.
     {return_no_apply.i '{&RET-ERROR}'}
  END.
  {&BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-month TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.int-month IN FRAME fMain /* int-month */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME int-offset_
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL int-offset_ TERMINAL-SIMULATION
ON LEAVE OF int-offset_ IN FRAME fMain
DO:
   {&BEG_BT_LEAVE}
   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN DO:
      /* валидация значения */
      IF NOT CAN-DO(mOffsetVld,SELF:SCREEN-VALUE)  THEN
      DO:
         RUN GetXAttr (tt-loan-cond.class-code,"int-offset",BUFFER xattr).
         RUN Fill-SysMes IN h_tmess ("", "", "0",
            "Значение реквизита ~"" + xattr.name + "~" класса ~"" + xattr.class-code +
            "~" не соответствует списку допустимых значений ~"" + mOffsetVld + "~"").
         RETURN NO-APPLY {&RET-ERROR}.
      END.
      /* записываем правильное значение в "настоящее" поле ({&CB-NONE} вместо "--") */
      ASSIGN
         tt-loan-cond.int-offset:SCREEN-VALUE = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                   THEN {&CB-NONE}
                                                   ELSE SELF:SCREEN-VALUE
         tt-loan-cond.int-offset              = IF SELF:SCREEN-VALUE EQ mOffsetNone
                                                   THEN ""
                                                   ELSE SELF:SCREEN-VALUE.
   END.
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.int-period
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-period TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.int-period IN FRAME fMain /* Проценты */
DO:
   {&BEG_BT_LEAVE}
   IF tt-loan-cond.int-period:INPUT-VALUE EQ "ДН" THEN
   DO:
      RUN Fill-SysMes ("", "", "0", "Для % нельзя выбрать тип ДН.") NO-ERROR.
      {return_no_apply.i '{&RET-ERROR}'}
   END.
  {&BT_LEAVE}
  ASSIGN
     mNameIntPeriod:SCREEN-VALUE =
        GetDomainCodeName(tt-loan-cond.class-code,
                          "int-period",
                          tt-loan-cond.int-period:SCREEN-VALUE)
  .
  mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
  {loan-trg.pro
    &RecalcAnnuitet = YES
    &LogVarChanged  = mChangedField
    &tt-loan        = tt-uploan
    &tt-loan-cond   = tt-loan-cond
    &tt-comm-rate   = tt-comm-rate
    &tt-amount      = tt-term-amt
    &br-comm        = br-comm
  }

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.int-period TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.int-period IN FRAME fMain /* Проценты */
DO:
  ASSIGN
     tt-loan-cond.int-month:SCREEN-VALUE = "1"
     mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.isklmes$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.isklmes$ TERMINAL-SIMULATION
ON F1 OF tt-loan-cond.isklmes$ IN FRAME fMain /* Исключить месяцы */
DO:
  DO TRANSACTION:
     RUN term-exc.p (iMode,
                     tt-loan-cond.contract,
                     tt-loan-cond.cont-code,
                     tt-loan-cond.since,
                     INPUT-OUTPUT TABLE ttTermObl,
                     INPUT 4).
     IF CAN-FIND(FIRST ttTermObl) THEN
         SELF:SCREEN-VALUE = "yes".
     ELSE SELF:SCREEN-VALUE = "no".

     mChangedField = YES.
     mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
     {loan-trg.pro
         &RecalcAnnuitet = YES
         &LogVarChanged  = mChangedField
         &tt-loan        = tt-uploan
         &tt-loan-cond   = tt-loan-cond
         &tt-comm-rate   = tt-comm-rate
         &tt-amount      = tt-term-amt
         &br-comm        = br-comm
      }
  END.
  RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.isklmes$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.isklmes$ IN FRAME fMain /* Исключить месяцы */
DO:
  IF SELF:SCREEN-VALUE = "yes" THEN DO:
     APPLY "F1" TO SELF.
  END.
  ELSE DO:
      FOR EACH ttTermObl:
          DELETE ttTermObl.
      END.

      mChangedField = YES.
      mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
      {loan-trg.pro
         &RecalcAnnuitet = YES
         &LogVarChanged  = mChangedField
         &tt-loan        = tt-uploan
         &tt-loan-cond   = tt-loan-cond
         &tt-comm-rate   = tt-comm-rate
         &tt-amount      = tt-term-amt
         &br-comm        = br-comm
      }
  END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.kollw#gtper$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.kollw#gtper$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.kollw#gtper$ IN FRAME fMain /* kollw#gtper$ */
DO:
   {&BEG_BT_LEAVE}
      /* валидация значения */
   IF INT64(SELF:SCREEN-VALUE) GE GetQntPer(DATE(tt-uploan.open-date),
                                          DATE(tt-uploan.end-date),
                                          IF tt-loan-cond.cred-date:VISIBLE EQ YES
                                             THEN INT64(tt-loan-cond.cred-date:SCREEN-VALUE)
                                             ELSE 0,
                                          tt-loan-cond.cred-period:SCREEN-VALUE + ":" + tt-loan-cond.cred-month:SCREEN-VALUE,
                                          tt-loan-cond.since)
      AND INT64(SELF:SCREEN-VALUE) NE 0 THEN
   DO:
      RUN Fill-SysMes IN h_tmess ("", "", "0",
         "Число льготных периодов должно быть меньше числа полных периодов").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &RecalcAnnuitet = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.kollw#gtper$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.kollw#gtper$ IN FRAME fMain /* kollw#gtper$ */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.kollw#gtperprc$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.kollw#gtperprc$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.kollw#gtperprc$ IN FRAME fMain /* kollw#gtperprc$ */
DO:
   {&BEG_BT_LEAVE}
      /* валидация значения */
   IF INT64(SELF:SCREEN-VALUE) GE GetQntPer(DATE(tt-uploan.open-date),
                                          DATE(tt-uploan.end-date),
                                          IF tt-loan-cond.int-date:VISIBLE EQ YES
                                             THEN INT64(tt-loan-cond.int-date:SCREEN-VALUE)
                                             ELSE 0,
                                          tt-loan-cond.int-period:SCREEN-VALUE + ":" + tt-loan-cond.int-month:SCREEN-VALUE,
                                          tt-loan-cond.since)
      AND INT64(SELF:SCREEN-VALUE) NE 0 THEN
   DO:
      RUN Fill-SysMes IN h_tmess ("", "", "0",
         "Число льготных периодов должно быть меньше числа полных периодов").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   {&BT_LEAVE}
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &RecalcAnnuitet = YES
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.kollw#gtperprc$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.kollw#gtperprc$ IN FRAME fMain /* kollw#gtperprc$ */
DO:
  mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.kredplat$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.kredplat$ TERMINAL-SIMULATION
ON F5 OF tt-loan-cond.kredplat$ IN FRAME fMain /* kredplat$ */
DO:
   DEF VAR mPerCnt      AS INT64    NO-UNDO. /* счетчик периодов */
   DEF VAR vi_lgt       AS INT64    NO-UNDO. /* число льготных периодов по ОД */
   DEF VAR vGrDateS     AS DATE     NO-UNDO. /* дата начала графика погошения */
   DEF VAR vGrDatePo    AS DATE     NO-UNDO. /* дата окончания графика погошения */

   vi_lgt = INT64(tt-loan-cond.kollw#gtper$:SCREEN-VALUE).   /* определение числа льготных периодов по ОД */

   IF tt-loan-cond.grperiod$ AND tt-loan-cond.grdatas$ NE ? THEN
      vGrDateS = tt-loan-cond.grdatas$ - 1.
   ELSE
      vGrDateS = tt-uploan.open-date.
   IF tt-loan-cond.grperiod$ AND tt-loan-cond.grdatapo$ NE ? THEN
      vGrDatePo = tt-loan-cond.grdatapo$.
   ELSE
      vGrDatePo = tt-uploan.end-date.
   mPerCnt = GetQntPer (vGrDateS,
                        vGrDatePo,
                        IF tt-loan-cond.cred-date:VISIBLE EQ YES THEN INT64(tt-loan-cond.cred-date:SCREEN-VALUE)
                                                              ELSE 0,
                        tt-loan-cond.cred-period:SCREEN-VALUE + ":" + tt-loan-cond.cred-month:SCREEN-VALUE,
                        tt-loan-cond.since) - vi_lgt.

      /* предвычисление суммы платежа */
   SELF:SCREEN-VALUE = STRING(DEC(tt-term-amt.amt-rub:SCREEN-VALUE) / mPerCnt).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME mLimit
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL mLimit TERMINAL-SIMULATION
ON LEAVE OF mLimit IN FRAME fMain /* Лимит в. */
DO:
   IF iMode EQ {&MOD_ADD} THEN
       mLimitRest:SCREEN-VALUE = mLimit:SCREEN-VALUE.

  IF (  iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT})
     AND tt-uploan.rewzim$:SCREEN-VALUE EQ "ЛимВыдЗад" THEN
   DO:
      /* При редактировании поля выполняется проверка если сумма операций выдачи
      ** начиная с даты состояния больше введенного лимита выдается сообщение */
      mOperSumm = 0.
      FOR EACH loan-int WHERE loan-int.contract  EQ tt-uploan.contract
                          AND loan-int.cont-code EQ tt-uploan.cont-code
                          AND loan-int.id-d      EQ 0
                          AND loan-int.id-k      EQ 3
                          AND loan-int.mdate     GE tt-uploan.since
      NO-LOCK:
         mOperSumm = mOperSumm + loan-int.amt-rub.
      END.
      IF mOperSumm > DEC(mLimit:SCREEN-VALUE) THEN
      DO:
         RUN Fill-SysMes IN h_tmess ("","","0","Сумма операций выдачи кредита " + STRING(mOperSumm) + " после даты состояния " + STRING(tt-uploan.since) + " больше лимита выдачи, ввод невозможен").
         RETURN NO-APPLY.
      END.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.PaySum
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PaySum TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.PaySum IN FRAME fMain /* Платеж */
DO:
   DEF VAR vSum AS DEC NO-UNDO.

   {&BEG_BT_LEAVE}

   IF     DECIMAL(tt-loan-cond.PaySum:SCREEN-VALUE) LE 0 
      AND DATE(tt-loan-cond.since:SCREEN-VALUE) LT tt-uploan.end-date
   THEN
   DO:
      RUN Fill-SysMes ("", "", "1",
                       "Сумма платежа должна быть заполнена.") NO-ERROR.
      {return_no_apply.i '{&RET-ERROR}'}
   END.

   vSum = CalcSumAmt(tt-loan-cond.since:INPUT-VALUE,
                     tt-loan-cond.PayType,               /* Тип условия до изменения */
                     tt-loan-cond.PayType:INPUT-VALUE,   /* Тип условия после изменения */
                     tt-loan-cond.PaySum,                /* Сумма условия до изменения */
                     tt-loan-cond.PaySum:INPUT-VALUE).   /* Сумма условия после изменения */
   IF (   tt-loan-cond.PayType:SCREEN-VALUE = "Погашение" 
       OR tt-loan-cond.PayType:SCREEN-VALUE = "ДосрПогаш" )
      AND vSum < 0
   THEN DO:
      MESSAGE "Основной долг меньше суммы погашения:" SKIP
              tt-term-amt.amt-rub " < " tt-loan-cond.PaySum:SCREEN-VALUE
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   {&END_BT_LEAVE}

   tt-term-amt.amt-rub:SCREEN-VALUE = STRING (vSum).

   /* Для QBIS запускаем триггер VALUE-CHANGED вручную, т.к. он там не отрабатывает */
   &IF DEFINED(MANUAL-REMOTE) &THEN
      mChangedField = tt-loan-cond.PaySum NE DEC(tt-loan-cond.PaySum:SCREEN-VALUE).
      IF mChangedField THEN APPLY "VALUE-CHANGED" TO tt-loan-cond.PaySum IN FRAME fMain.
   &ENDIF

   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PaySum TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.PaySum IN FRAME fMain /* Платеж */
DO:
  mChangedField = YES.
  mSetPaySum    = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.PayType
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PayType TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.PayType IN FRAME fMain /* PayType */
DO:
   DEF VAR vSum AS DEC NO-UNDO.

  {&BEG_BT_LEAVE}
   IF NOT AVAIL last-cond AND tt-loan-cond.PayType:SCREEN-VALUE NE "Выдача" THEN
   DO:
      MESSAGE "Для первого условия тип платежа может быть только 'Выдача'"
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   vSum = CalcSumAmt(tt-loan-cond.since:INPUT-VALUE,
                     tt-loan-cond.PayType,               /* Тип условия до изменения */
                     tt-loan-cond.PayType:INPUT-VALUE,   /* Тип условия после изменения */
                     tt-loan-cond.PaySum,                /* Сумма условия до изменения */
                     tt-loan-cond.PaySum:INPUT-VALUE).   /* Сумма условия после изменения */
   IF (   tt-loan-cond.PayType:SCREEN-VALUE = "Погашение" 
       OR tt-loan-cond.PayType:SCREEN-VALUE = "ДосрПогаш" )
      AND vSum < 0
   THEN DO:
      MESSAGE "Основной долг меньше суммы погашения:" SKIP
              tt-term-amt.amt-rub " < " tt-loan-cond.PaySum:SCREEN-VALUE
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   ELSE DO:
      IF mSetPaySum EQ NO 
         AND tt-loan-cond.PayType:SCREEN-VALUE = "Остаток" 
         AND iMode EQ {&MOD_ADD} THEN
      DO:
         FIND LAST term-obl WHERE term-obl.contract  EQ tt-uploan.contract
                              AND term-obl.cont-code EQ tt-uploan.cont-code
                              AND term-obl.idnt      EQ 2
                              AND term-obl.end-date  LE DATE(tt-loan-cond.since:SCREEN-VALUE)
         NO-LOCK NO-ERROR.
         
         IF AVAIL term-obl THEN
          ASSIGN 
            tt-loan-cond.PaySum:SCREEN-VALUE = STRING(term-obl.amt-rub)
            mSetPaySum = YES.
      END.
   END.
   {&END_BT_LEAVE}
   tt-term-amt.amt-rub:SCREEN-VALUE = STRING (vSum).
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.            
   {loan-trg.pro
      &LogVarChanged  = mChangedField
      &tt-loan        = tt-uploan
      &tt-loan-cond   = tt-loan-cond
      &tt-comm-rate   = tt-comm-rate
      &tt-amount      = tt-term-amt
      &br-comm        = br-comm
   }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.PayType TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.PayType IN FRAME fMain /* PayType */
DO:
  IF NOT CAN-FIND(FIRST vloan-cond WHERE vloan-cond.contract  EQ tt-uploan.contract
                                      AND vloan-cond.cont-code EQ tt-uploan.cont-code )
   THEN
      vFirstCond = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.since
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.since TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.since IN FRAME fMain /* С */
DO:
   {&BEG_BT_LEAVE}
   
   DEFINE VARIABLE vCheckDt AS DATE NO-UNDO.
   
   ASSIGN
      vCheckDt = DATE(SELF:SCREEN-VALUE) NO-ERROR.
      
   IF ERROR-STATUS:ERROR THEN 
   DO:
      RUN Fill-SysMes IN h_tmess("","","","Ошибка ввода даты условия").      
      RETURN NO-APPLY {&RET-ERROR}.
   END.

   IF     iMode EQ {&MOD_ADD} 
      AND mSdvigSince NE tt-loan-cond.since:SCREEN-VALUE 
      AND FGetSetting("ИзмДНач","","Нет") EQ "Да" 
   THEN
   DO:
      DEF VAR vStart_Date AS DATE NO-UNDO.
      DEF VAR vMove       AS INT64 NO-UNDO.
      vStart_date = GetFstWrkDay(tt-uploan.Class-Code, tt-uploan.user-id, DATE(tt-loan-cond.since:SCREEN-VALUE), 9, 1).
      IF DATE(tt-loan-cond.since:SCREEN-VALUE) NE vStart_date THEN
      DO:
         RUN Fill-SysMes IN h_tmess("","",3,"Дата ~"С~" попала на выходной день" + "~n" + "Сдвинуть на ближайший рабочий ?|Сдвигать вперед,Сдвигать назад,Не Сдвигать").
         vMove = IF pick-value = "2" THEN -1 ELSE IF pick-value = "1" THEN 1 ELSE 0.
         IF vMove NE 0 THEN
            tt-loan-cond.since:SCREEN-VALUE = STRING(GetFstWrkDay(tt-uploan.Class-Code, tt-uploan.user-id, DATE(tt-loan-cond.since:SCREEN-VALUE), 9, vMove)).
         mSdvigSince = tt-loan-cond.since:SCREEN-VALUE.
         /*запомним что задавали вопрос о сдвиге на эту дату*/
      END.
   END.
   IF SELF:INPUT-VALUE LT mFirstDateAvail THEN
   DO:
      MESSAGE "Дата начала не cоответствует допустимому диапазону :" SKIP
         mFirstDateAvail " - " tt-uploan.end-date:SCREEN-VALUE
         VIEW-AS ALERT-BOX INFO BUTTONS OK.
      RETURN NO-APPLY {&RET-ERROR}.
   END.

      /* перекладываем дату условия в таблицу, иначе присутствует много мест, 
      ** где используется это значение, а не SCREEN-VALUE */
   ASSIGN
      tt-loan-cond.since
   .
   RUN FillRateDef (tt-loan-cond.since).
   tt-term-amt.amt-rub:SCREEN-VALUE = STRING(CalcSumAmt(tt-loan-cond.since:INPUT-VALUE,
                                                        tt-loan-cond.PayType,               /* Тип условия до изменения */
                                                        tt-loan-cond.PayType:INPUT-VALUE,   /* Тип условия после изменения */
                                                        tt-loan-cond.PaySum,                /* Сумма условия до изменения */
                                                        tt-loan-cond.PaySum:INPUT-VALUE)    /* Сумма условия после изменения */
                                             ).
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
     &RecalcAnnuitet = YES
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
  }
  {&END_BT_LEAVE} 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.since TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.since IN FRAME fMain /* С */
DO:
  ASSIGN
     mSrokChange   = YES
     mChangedField = YES
  .
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.vidrestrukt$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.vidrestrukt$ IN FRAME fMain /* С */
DO:
      /* Установка видимости */
   IF     LOOKUP ("ПролОбСрДог", tt-loan-cond.vidrestrukt$:SCREEN-VALUE) > 0
      OR (    iMode EQ {&MOD_EDIT} 
          AND LOOKUP ("ПролОбСрДог", tt-loan-cond.vidrestrukt$) > 0) THEN
   DO:
      tt-loan-cond.CondEndDate:VISIBLE = TRUE.
      IF iMode EQ {&MOD_ADD} THEN 
      DO:
         tt-loan-cond.CondEndDate:SENSITIVE = TRUE.
         /* Если договор пролонгируется, сбрасываем значение ДР ПослПД */
         IF     tt-loan-cond.poslpd$:VISIBLE 
            AND tt-loan-cond.poslpd$:SENSITIVE THEN
            ASSIGN
               tt-loan-cond.poslpd$              = ?
               tt-loan-cond.poslpd$:SCREEN-VALUE = ""
            .
         
      END.          
   END.
   ELSE
      ASSIGN
         tt-loan-cond.CondEndDate:SENSITIVE     = FALSE
         tt-loan-cond.CondEndDate:VISIBLE       = FALSE
      .
   /* при добавлении или какой либо реструктуризации, открываем на редактирование долю и период */
   IF tt-uploan.class-code = "loan_dbl_ann" THEN DO:
       IF (DATE(tt-loan-cond.since:SCREEN-VALUE) = tt-uploan.open-date
                OR (tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> ""
                    AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> "?")) THEN
        DO:
           ASSIGN
               tt-loan-cond.PartAmount:VISIBLE    = TRUE
               tt-loan-cond.FirstPeriod:VISIBLE   = TRUE
               tt-loan-cond.PartAmount:SENSITIVE  = TRUE 
               tt-loan-cond.FirstPeriod:SENSITIVE = TRUE
               .
        END.
        ELSE 
          ASSIGN
             tt-loan-cond.PartAmount:SENSITIVE      = FALSE
             tt-loan-cond.PartAmount:VISIBLE        = FALSE
             tt-loan-cond.FirstPeriod:SENSITIVE     = FALSE
             tt-loan-cond.FirstPeriod:VISIBLE       = FALSE
          .
         IF (tt-loan-cond.vidrestrukt$ = "" 
             OR tt-loan-cond.vidrestrukt$ = ?)
            AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> ""
            AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> "?" THEN
             RUN GetFirstPerPartAmt(tt-uploan.contract,
                                    tt-uploan.cont-code,
                                    DATE(tt-loan-cond.since:SCREEN-VALUE),
                                    OUTPUT tt-loan-cond.FirstPeriod,
                                    OUTPUT tt-loan-cond.PartAmount).
         ASSIGN
            tt-loan-cond.PartAmount:SCREEN-VALUE = STRING(tt-loan-cond.PartAmount)
            tt-loan-cond.FirstPeriod:SCREEN-VALUE = STRING(tt-loan-cond.FirstPeriod)
             .

        /* устанавливаем признак, что выбрали реструктуризацию (кроме первого условия)) 
        ** для корректного расчета суммы аннуитета*/
        IF tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> ""
            AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> "?"
            AND DATE(tt-loan-cond.since:SCREEN-VALUE) <> tt-uploan.open-date
            THEN RUN SetSysConf IN h_base("Реструктуризация","Да").
            ELSE RUN SetSysConf IN h_base("Реструктуризация","Нет").
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.vidrestrukt$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.vidrestrukt$ IN FRAME fMain /* Вид.Рестр. */
DO:
   DEF VAR mCounter  AS INT64 NO-UNDO. /* счетчик */
   {&BEG_BT_LEAVE}
   tt-loan-cond.vidrestrukt$:SCREEN-VALUE = REPLACE(tt-loan-cond.vidrestrukt$:SCREEN-VALUE, " ", "").
   IF tt-loan-cond.vidrestrukt$:SCREEN-VALUE NE "?"
   THEN DO:
      REPEAT mCounter = 1 TO NUM-ENTRIES(tt-loan-cond.vidrestrukt$:SCREEN-VALUE):
         FIND FIRST code 
              WHERE code.class   EQ "ВидРеструкт"
                AND code.parent  EQ "ВидРеструкт"
                AND code.code    EQ ENTRY(mCounter, tt-loan-cond.vidrestrukt$:SCREEN-VALUE)
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE (code) THEN DO:
            RUN Fill-SysMes ("", "", "0", "В классификаторе ВидРеструкт нет кода " + 
                             ENTRY(mCounter, tt-loan-cond.vidrestrukt$:SCREEN-VALUE) + 
                             ".") NO-ERROR.
            RETURN NO-APPLY {&RET-ERROR}.
         END.
      END.
   END.
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.poslpd$ TERMINAL-SIMULATION
ON VALUE-CHANGED OF tt-loan-cond.poslpd$ IN FRAME fMain /* ПослПД */
DO:
   mChangedField = YES.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.poslpd$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.poslpd$ IN FRAME fMain /* ПослПД */
DO:
   DEF VAR vEndDate AS DATE NO-UNDO.
   {&BEG_BT_LEAVE}
   vEndDate = IF tt-loan-cond.CondEndDate:VISIBLE THEN
                 MAX(DATE(tt-loan-cond.CondEndDate:SCREEN-VALUE),
                     DATE(tt-uploan.end-date:SCREEN-VALUE))
              ELSE
                 DATE(tt-uploan.end-date:SCREEN-VALUE).

   IF     {assigned tt-loan-cond.poslpd$:SCREEN-VALUE}
      AND DATE(tt-loan-cond.poslpd$:SCREEN-VALUE) LT vEndDate THEN
   DO:
      RUN Fill-SysMes IN THIS-PROCEDURE ("", "", "0",
                       "Последняя плановая дата " +
                       "не может быть меньше даты окончания договора").
      RETURN NO-APPLY {&RET-ERROR}.
   END.
   {&END_BT_LEAVE}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME tt-loan-cond.annuitkorr$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL tt-loan-cond.annuitkorr$ TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.annuitkorr$ IN FRAME fMain /*          Сумма */
DO:
   {&BEG_BT_LEAVE}
   {&BT_LEAVE}
   mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
   {loan-trg.pro
     &RecalcAnnuitet = YES
     &LogVarChanged  = mChangedField
     &tt-loan        = tt-uploan
     &tt-loan-cond   = tt-loan-cond
     &tt-comm-rate   = tt-comm-rate
     &tt-amount      = tt-term-amt
     &br-comm        = br-comm
  }
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&Scoped-define SELF-NAME tt-loan-cond.grperiod$
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL mStrah TERMINAL-SIMULATION
ON " ", F1 OF tt-loan-cond.grperiod$ IN FRAME fMain
DO:
   RUN per-graf.p(iMode,
                  tt-uploan.open-date,
                  tt-uploan.end-date,
                  INPUT-OUTPUT tt-loan-cond.grdatas$,
                  INPUT-OUTPUT tt-loan-cond.grdatapo$
                  ).
   tt-loan-cond.grperiod$ = tt-loan-cond.grdatas$ NE ? OR tt-loan-cond.grdatapo$ NE ?.
   DISPLAY tt-loan-cond.grperiod$ WITH FRAME fMain.
END.
   /* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL mStrah TERMINAL-SIMULATION
ON LEAVE OF tt-loan-cond.grperiod$ IN FRAME fMain
DO:
   {&BEG_BT_LEAVE}
   tt-loan-cond.grperiod$ = tt-loan-cond.grdatas$ NE ? OR tt-loan-cond.grdatapo$ NE ?.
   DISPLAY tt-loan-cond.grperiod$ WITH FRAME fMain.
   {&BT_LEAVE}
END.

   /* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK TERMINAL-SIMULATION 


/* ***************************  Main Block  *************************** */

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames.        */
ASSIGN CURRENT-WINDOW                = {&WINDOW-NAME} 
       THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to  */
/* terminate it.                                                        */
ON CLOSE OF THIS-PROCEDURE 
   RUN disable_UI.

/* These events will close the window and terminate the procedure.      */
/* (NOTE: this will override any user-defined triggers previously       */
/*  defined on the window.)                                             */
ON WINDOW-CLOSE OF {&WINDOW-NAME} 
DO:
   RUN disable_UI IN THIS-PROCEDURE.
   APPLY "CLOSE":U TO THIS-PROCEDURE.
   RETURN NO-APPLY.
END.
ON ENDKEY, END-ERROR OF FRAME fMain ANYWHERE DO:
   mRetVal = IF mOnlyForm THEN
      {&RET-ERROR}
      ELSE 
         "".
   RUN disable_UI IN THIS-PROCEDURE.
   APPLY "CLOSE":U TO THIS-PROCEDURE.
   RETURN NO-APPLY.
END.

&IF DEFINED(MANUAL-REMOTE) &THEN
ON F9 OF br-comm IN FRAME fMain ANYWHERE
DO:
   DEFINE VARIABLE vOk AS LOGICAL    NO-UNDO.

   IF (iMode <> {&MOD_ADD} AND iMode <> {&MOD_EDIT}) OR NOT AVAIL tt-comm-rate THEN 
      RETURN NO-APPLY.
   RUN f-crate.p (INPUT BUFFER tt-comm-rate:HANDLE,br-comm:ROW,OUTPUT vOk).
   IF vOk  THEN 
   DO:
      br-comm:REFRESH().
      &IF DEFINED(MANUAL-REMOTE) &THEN
      RUN UpdateBrowser(br-comm:HANDLE).
      &ENDIF
   END.
END.
ON INSERT OF br-comm IN FRAME fMain ANYWHERE
DO:
   APPLY "CTRL-F2" TO br-comm.
   RETURN NO-APPLY.
END.
ON DEL OF br-comm IN FRAME fMain ANYWHERE
DO:
   APPLY "CTRL-F3" TO br-comm.
   RETURN NO-APPLY.
END.
&ENDIF


/* Best default for GUI applications is...                              */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:

   /* Commented by KSV: Инициализация системных сообщений */
   RUN Init-SysMes("","","").

   /* Commented by KSV: Корректируем вертикальную позицию фрейма */
   iLevel = GetCorrectedLevel(FRAME fMain:HANDLE,iLevel).
   FRAME fMain:ROW = iLevel.
   /* Делаем TITLE COLOR bright-white */
   FRAME fMain:TITLE-DCOLOR = {&bright-white}.

   /*mitr: инструмент для получения % ставок по умолчанию для
   комиссий, прописанных в доп.реквизите loan.rate-list */
   RUN ln-init-rate.p PERSISTENT SET hDefaultRate .

/* Commented by KSV: Читаем данные */
   RUN GetObject.
   /* большой кусок перенесен в PostGetObject */

   /* Заполняем COMBO-BOX'ы данными из метасхемы */
   RUN FillComboBox(FRAME {&MAIN-FRAME}:HANDLE).

      /* Исключаем пролонгацию из списка для недепозитных договоров */
   IF tt-uploan.contract NE "Депоз"
      AND CAN-DO(tt-loan-cond.PayType:LIST-ITEMS, "Пролонгац") THEN
      tt-loan-cond.PayType:LIST-ITEMS = REPLACE(tt-loan-cond.PayType:LIST-ITEMS, ",Пролонгац", "").

   /* Commented by KSV: Показываем экранную форму */
   STATUS DEFAULT "".
   RUN enable_UI.

   /* Commented by KSV: Открываем те поля, которые разрешено изменять
   ** в зависимости от режима открытия */
   RUN EnableDisable.
   /* Commented by KSV: Рисуем разделители. Разделители задаются как FILL-IN
   ** с идентификатором SEPARATOR# с атрибутом VIES-AS TEXT */
   RUN Separator(FRAME fMain:HANDLE,"1").

   IF NOT THIS-PROCEDURE:PERSISTENT THEN
      WAIT-FOR CLOSE OF THIS-PROCEDURE FOCUS mFirstTabItem.
END.

/* Commented by KSV: Закрываем службу системных сообщений */
RUN End-SysMes.

RUN disable_ui.

/* Commented by KSV: Удаляем экземпляр объекта */
IF VALID-HANDLE(mInstance) AND NOT mOnlyForm THEN 
   RUN DelEmptyInstance(mInstance).

/* Commented by KSV: Выгружаем библиотеки */
{intrface.del}

/*mitr: выгрузка инструментов*/
PUBLISH 'done'.

/* Commented by KSV: Возвращаем значение вызывающей процедуре */
RETURN mRetVal.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI TERMINAL-SIMULATION  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  RUN DeleteOldDataProtocol IN h_base ("ОкруглениеДоРублей").
  /* Hide all frames. */
  HIDE FRAME fMain.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI TERMINAL-SIMULATION  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  DISPLAY separator-2 mNameCredPeriod cred-offset_ delay-offset_ mNameIntPeriod 
          int-offset_ delay-offset-int_ mLimit mNameDischType mLimitRest 
          separator-4 
      WITH FRAME fMain IN WINDOW TERMINAL-SIMULATION.
  IF AVAILABLE tt-loan-cond THEN 
    DISPLAY tt-loan-cond.since tt-loan-cond.NDays tt-loan-cond.NMonthes 
          tt-loan-cond.NYears tt-loan-cond.PayType tt-loan-cond.PaySum 
          tt-loan-cond.cred-period tt-loan-cond.cred-date 
          tt-loan-cond.cred-month tt-loan-cond.cred-offset 
          tt-loan-cond.kollw#gtper$ tt-loan-cond.cred-mode 
          tt-loan-cond.cred-work-calend tt-loan-cond.cred-curr-next 
          tt-loan-cond.delay1 tt-loan-cond.DateDelay tt-loan-cond.delay-offset 
          tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ 
          tt-loan-cond.int-period tt-loan-cond.int-date tt-loan-cond.int-month 
          tt-loan-cond.int-offset tt-loan-cond.kollw#gtperprc$ 
          tt-loan-cond.int-mode tt-loan-cond.int-work-calend 
          tt-loan-cond.int-curr-next tt-loan-cond.delay 
          tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int 
          tt-loan-cond.isklmes$ tt-loan-cond.disch-type 
          tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate 
          tt-loan-cond.annuitkorr$ tt-loan-cond.grperiod$ tt-loan-cond.poslpd$
          tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
      WITH FRAME fMain IN WINDOW TERMINAL-SIMULATION.
  IF AVAILABLE tt-term-amt THEN 
    DISPLAY tt-term-amt.amt-rub 
      WITH FRAME fMain IN WINDOW TERMINAL-SIMULATION.
  IF AVAILABLE tt-uploan THEN 
    DISPLAY tt-uploan.end-date tt-uploan.currency tt-uploan.rewzim$ 
      WITH FRAME fMain IN WINDOW TERMINAL-SIMULATION.
  ENABLE tt-loan-cond.since tt-uploan.end-date tt-loan-cond.PayType 
         tt-loan-cond.PaySum tt-term-amt.amt-rub tt-uploan.currency separator-2 
         br-comm tt-loan-cond.cred-period tt-loan-cond.cred-date 
         tt-loan-cond.cred-month tt-loan-cond.cred-offset cred-offset_ 
         tt-loan-cond.kollw#gtper$ tt-loan-cond.cred-mode 
         tt-loan-cond.cred-work-calend tt-loan-cond.cred-curr-next 
         tt-loan-cond.delay1 tt-loan-cond.DateDelay tt-loan-cond.delay-offset 
         delay-offset_ tt-loan-cond.kredplat$ tt-loan-cond.annuitplat$ 
         tt-loan-cond.int-period tt-loan-cond.int-date tt-loan-cond.int-month 
         tt-loan-cond.int-offset int-offset_ tt-loan-cond.kollw#gtperprc$ 
         tt-loan-cond.int-mode tt-loan-cond.int-work-calend 
         tt-loan-cond.int-curr-next tt-loan-cond.delay 
         tt-loan-cond.DateDelayInt tt-loan-cond.delay-offset-int 
         delay-offset-int_ tt-loan-cond.isklmes$ mLimit tt-loan-cond.disch-type 
         mLimitRest tt-loan-cond.vidrestrukt$ tt-loan-cond.CondEndDate 
         tt-loan-cond.PartAmount tt-loan-cond.FirstPeriod
         separator-4 tt-loan-cond.annuitkorr$ tt-loan-cond.grperiod$ tt-loan-cond.poslpd$
      WITH FRAME fMain IN WINDOW TERMINAL-SIMULATION.
  {&OPEN-BROWSERS-IN-QUERY-fMain}
  VIEW TERMINAL-SIMULATION.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE EntryAnnuitetSumma TERMINAL-SIMULATION 
PROCEDURE EntryAnnuitetSumma :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vHelp  AS CHAR NO-UNDO.

   IF mPrevSumma <> ? AND 
      mPrevSumma <> 0 THEN
   DO:
      SetHelpStrAdd(mHelpStrAdd + IF NOT mSummSource THEN 
                                     "F5 - Восстановить из предыдущих условий"
                                  ELSE
                                     "F5 - Пересчитать заново").
      RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
   END.
         /* Просто пересчет суммы аннуитетного платежа */
   ELSE IF    iMode EQ {&MOD_ADD}
           OR iMode EQ {&MOD_EDIT}
   THEN DO:
      SetHelpStrAdd(mHelpStrAdd + "F5 Пересчет суммы платежа").
      RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE LeaveAnnuitetSumma TERMINAL-SIMULATION 
PROCEDURE LeaveAnnuitetSumma :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vHelp  AS CHAR NO-UNDO.

   IF mPrevSumma <> ? AND 
      mPrevSumma <> 0 THEN
   DO:
      SetHelpStrAdd(REPLACE(mHelpStrAdd,IF NOT mSummSource THEN 
                                     "F5 - Восстановить из предыдущих условий"
                                  ELSE
                                     "F5 - Пересчитать заново","")).
      RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
   END.
         /* Просто пересчет суммы аннуитетного платежа */
   ELSE IF    iMode EQ {&MOD_ADD}
           OR iMode EQ {&MOD_EDIT}
   THEN DO:
      SetHelpStrAdd(REPLACE(mHelpStrAdd,"F5 Пересчет суммы платежа","")).
      RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE GetTermObl TERMINAL-SIMULATION 
PROCEDURE GetTermObl :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vTermDate AS DATE NO-UNDO.

   /* Если добавляем запись, то подтягиваем месяцы исключения 
   ** из предыдущего условия */
   IF iMode = {&MOD_ADD} THEN DO:
       FIND LAST bloan-cond WHERE
                 bloan-cond.contract = tt-loan-cond.contract
             AND bloan-cond.cont-code = tt-loan-cond.cont-code
             AND bloan-cond.since < tt-loan-cond.since
             NO-LOCK NO-ERROR.
       IF AVAIL bloan-cond THEN vTermDate = bloan-cond.since.
   END.
   ELSE vTermDate = tt-loan-cond.since.
   
   /* Очищяем временную таблицу */
   FOR EACH ttTermObl:
       DELETE ttTermObl.
   END.

/* Заполняем временную таблицу - месяцы для исключения и с особым режимом */
   FOR EACH term-obl WHERE 
            term-obl.contract = tt-loan-cond.contract
        AND term-obl.cont-code = tt-loan-cond.cont-code 
        AND term-obl.idnt >= 200 
        AND term-obl.idnt <= 201
        AND term-obl.end-date = vTermDate
       NO-LOCK:   

       BUFFER-COPY term-obl TO ttTermObl.
       
       ttTermObl.end-date = tt-loan-cond.since.

       IF iMode = {&MOD_ADD} AND 
          ttTermObl.idnt = 200 
          THEN ttTermObl.sop-date = tt-loan-cond.since.
       
       RELEASE ttTermObl.
        
   END.

   IF iMode = {&MOD_ADD} AND CAN-FIND(FIRST ttTermObl) THEN
       tt-loan-cond.isklmes$:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "yes".

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE LocalEnableDisable TERMINAL-SIMULATION 
PROCEDURE LocalEnableDisable :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE VARIABLE vMeasure    AS CHARACTER  NO-UNDO. /* Затычка для get-one-limit */
   DEFINE VARIABLE vOperSumm   AS DECIMAL    NO-UNDO. /* Значение лимита */
   DEFINE VARIABLE vLoanCurr   AS CHARACTER  NO-UNDO.

   DEF BUFFER xtt-comm-rate FOR tt-comm-rate.
      
   IF tt-uploan.contract = "Депоз" AND FGetSetting("СкрПол", "", ?) EQ "ДА" THEN 
      ASSIGN
         mHiddenField                   :VISIBLE IN FRAME {&MAIN-FRAME} = TRUE
         tt-loan-cond.cred-period       :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         mNameCredPeriod                :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-date         :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-month        :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-offset       :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         cred-offset_                   :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.kollw#gtper$      :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-mode         :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-work-calend  :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.cred-curr-next    :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.delay1            :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.DateDelay         :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.delay-offset      :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         delay-offset_                  :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.kredplat$         :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.int-mode          :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.int-work-calend   :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.int-curr-next     :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.delay             :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.DateDelayInt      :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.delay-offset-int  :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         delay-offset-int_              :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.isklmes$          :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
         tt-uploan.rewzim$              :VISIBLE IN FRAME {&MAIN-FRAME} = FALSE
      .
   ELSE
      mHiddenField:VISIBLE IN FRAME {&MAIN-FRAME} = FALSE.

   IF     AVAIL tt-uploan
      AND       tt-uploan.poslpdzapo$ THEN
      ASSIGN
         tt-loan-cond.poslpd$:VISIBLE   IN FRAME {&MAIN-FRAME} = TRUE
         tt-loan-cond.poslpd$:SENSITIVE IN FRAME {&MAIN-FRAME} = TRUE
      .
   ELSE
      ASSIGN
         tt-loan-cond.poslpd$:VISIBLE   IN FRAME {&MAIN-FRAME} = FALSE
         tt-loan-cond.poslpd$:SENSITIVE IN FRAME {&MAIN-FRAME} = FALSE
      .

   IF NOT vFirstCond THEN
      DISABLE tt-term-amt.amt-rub WITH FRAME {&MAIN-FRAME}.
   IF NOT mLastCond AND iMode NE {&MOD_ADD} THEN
      DISABLE tt-loan-cond.PayType WITH FRAME {&MAIN-FRAME}.
   IF NOT mLastCond THEN
   DO:
      DISABLE tt-loan-cond.PayType WITH FRAME {&MAIN-FRAME}.
      DISABLE tt-loan-cond.PaySum  WITH FRAME {&MAIN-FRAME}.
   END.
   
   IF mBrowseCommRateOFF THEN
   DO:
      RUN BT_HiddAndDisableField(tt-loan-cond.int-period:HANDLE IN FRAME {&MAIN-FRAME}).
      RUN BT_HiddAndDisableField(mNameIntPeriod:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-date:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-month:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.delay:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-offset:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.disch-type:HANDLE).
      RUN BT_HiddAndDisableField(mNameDischType:HANDLE).
      RUN BT_HiddAndDisableField(int-offset_:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.kollw#gtperprc$:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-mode:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-work-calend:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.DateDelayInt:HANDLE).
      RUN BT_HiddAndDisableField(tt-loan-cond.int-curr-next:HANDLE).
      RUN BT_HiddAndDisableField(delay-offset-int_:HANDLE).
      IF br-comm:VISIBLE IN FRAME {&MAIN-FRAME} THEN
      DO:
         DISABLE br-comm WITH FRAME {&MAIN-FRAME}.
         br-comm:VISIBLE IN FRAME {&MAIN-FRAME} = NO.
         separator-4:VISIBLE IN FRAME {&MAIN-FRAME} = NO.
         RUN BT_UpForm(tt-loan-cond.cred-period:HANDLE,6).
         FRAME {&MAIN-FRAME}:HEIGHT = FRAME {&MAIN-FRAME}:HEIGHT - 6.
         RUN PutHelp("",FRAME {&MAIN-FRAME}:HANDLE).
      END.
   END.
   ELSE
   DO:
      ENABLE br-comm WITH FRAME {&MAIN-FRAME}.
      mModeBrowse = IF iMode EQ {&MOD_EDIT} OR iMode EQ {&MOD_ADD} THEN {&MOD_EDIT}
         ELSE {&MOD_VIEW}.
      IF mModeBrowse EQ {&MOD_EDIT} THEN
      DO:
         RUN ReadOnly(FRAME {&MAIN-FRAME}:HANDLE,"br-comm","br-comm",NO).
         tt-comm-rate.commission:READ-ONLY IN BROWSE br-comm = NO.
         tt-comm-rate.rate-comm:READ-ONLY IN BROWSE br-comm = NO.
         tt-comm-cond.floattype:READ-ONLY IN BROWSE br-comm = YES.
      END.
      ELSE
         RUN ReadOnly(FRAME {&MAIN-FRAME}:HANDLE,"br-comm","br-comm",YES).
   END.
   IF iMode = {&MOD_ADD} THEN
      tt-loan-cond.annuitkorr$:SCREEN-VALUE = ?.
   ELSE
      IF GetXAttrValueEx("loan-cond", 
                         tt-loan-cond.contract + "," + tt-loan-cond.cont-code + "," + STRING(tt-loan-cond.since), 
                         "АннуитКорр",
                         "") EQ "" THEN
         tt-loan-cond.annuitkorr$:SCREEN-VALUE = ?.
   IF tt-loan-cond.shemaplat$ THEN 
   DO:
      IF iMode = {&MOD_ADD} THEN
      DO:
         /* Установим округление, если оно есть */
         IF GetXattrInit(tt-uploan.class-code,"ОкругДоРуб") EQ "Да" THEN
            RUN SetSysConf IN h_base ("ОкруглениеДоРублей","YES"). 
         FIND FIRST xtt-comm-rate WHERE
                    xtt-comm-rate.commission = "%Кред"
         NO-ERROR.

         IF AVAIL xtt-comm-rate THEN
            RUN CalcAnnuitet(
                       tt-uploan.contract,
                       tt-uploan.cont-code,
                       DATE(tt-loan-cond.since:SCREEN-VALUE),
                       DATE(tt-uploan.end-date:SCREEN-VALUE),
                       DEC(tt-term-amt.amt-rub:SCREEN-VALUE),
                       xtt-comm-rate.rate-comm,
                       INT64(tt-loan-cond.cred-date:SCREEN-VALUE),
                       tt-loan-cond.cred-period:SCREEN-VALUE,
                       tt-loan-cond.cred-month:SCREEN-VALUE,
                       INT64(tt-loan-cond.kollw#gtper$:SCREEN-VALUE),
                       LOOKUP(tt-loan-cond.cred-offset:SCREEN-VALUE,tt-loan-cond.cred-offset:LIST-ITEMS),
                       INT64(tt-loan-cond.annuitkorr$:SCREEN-VALUE),
                       DEC(tt-uploan.sum-depos),
                       INT64(tt-loan-cond.FirstPeriod),
                       DEC(tt-loan-cond.PartAmount),
                       OUTPUT tt-loan-cond.annuitplat$).
         tt-loan-cond.annuitplat$:SCREEN-VALUE = STRING(tt-loan-cond.annuitplat$).
      END.
      IF NOT mEnableEndDate THEN
      DO:
         ASSIGN 
            tt-uploan.end-date:SENSITIVE = NO
            tt-uploan.end-date:SCREEN-VALUE = STRING(mCondDate) WHEN mCondDate <> ?
            .  
      END.
   END.
   ELSE
      tt-loan-cond.annuitkorr$:VISIBLE = NO.


   mAnnSumm = tt-loan-cond.annuitplat$.
         
   IF tt-loan-cond.isklmes$:SCREEN-VALUE IN FRAME {&FRAME-NAME} = "yes" 
      OR iMode = {&MOD_ADD}
      THEN DO:
       
      RUN GetTermObl.
      
   END.
        
   /* изменяем видимые поля в зависимости от значения cred-mode (Плат. период - осн.долг) */
   CASE tt-loan-cond.cred-mode:SCREEN-VALUE:
      WHEN "КоличДней" THEN
         ASSIGN 
            tt-loan-cond.DateDelay        :VISIBLE = NO
            tt-loan-cond.cred-curr-next   :VISIBLE = NO
         .
      WHEN "ДатаОконч" THEN
         ASSIGN 
            tt-loan-cond.delay1           :VISIBLE = NO
            tt-loan-cond.cred-work-calend :VISIBLE = NO
         .
      WHEN "ПериодДн" THEN
         ASSIGN 
            tt-loan-cond.DateDelay        :VISIBLE = NO
            tt-loan-cond.cred-curr-next   :VISIBLE = NO
            tt-loan-cond.cred-work-calend :VISIBLE = NO
         .
   END CASE.
   /* изменяем видимые поля в зависимости от значения int-mode (Плат. период - проценты) */
   IF tt-loan-cond.int-mode:SCREEN-VALUE  EQ "КоличДней"
   THEN ASSIGN tt-loan-cond.DateDelayint     :VISIBLE = NO
               tt-loan-cond.int-curr-next    :VISIBLE = NO.
   ELSE ASSIGN tt-loan-cond.delay            :VISIBLE = NO
               tt-loan-cond.int-work-calend  :VISIBLE = NO.

   ASSIGN
      /* подставляем в поля "Сдвиг" вместо неопределенного значения значение перем. mOffsetNone */
      cred-offset_                 :SCREEN-VALUE  =  IF NOT {assigned tt-loan-cond.cred-offset}
                                            THEN mOffsetNone
                                            ELSE tt-loan-cond.cred-offset:SCREEN-VALUE
      int-offset_                  :SCREEN-VALUE  =  IF NOT {assigned  tt-loan-cond.int-offset}
                                            THEN mOffsetNone
                                            ELSE tt-loan-cond.int-offset:SCREEN-VALUE
      delay-offset_                :SCREEN-VALUE  =  IF NOT {assigned  tt-loan-cond.delay-offset}
                                            THEN mOffsetNone
                                            ELSE tt-loan-cond.delay-offset:SCREEN-VALUE
      delay-offset-int_            :SCREEN-VALUE  =  IF NOT {assigned  tt-loan-cond.delay-offset-int}
                                            THEN mOffsetNone
                                            ELSE tt-loan-cond.delay-offset-int:SCREEN-VALUE
      cred-offset_                 :READ-ONLY     = YES
      int-offset_                  :READ-ONLY     = YES
      delay-offset_                :READ-ONLY     = YES
      delay-offset-int_            :READ-ONLY     = YES
      /* скрываем поля */
      tt-loan-cond.cred-offset     :VISIBLE       = NO
      tt-loan-cond.int-offset      :VISIBLE       = NO
      tt-loan-cond.delay-offset    :VISIBLE       = NO
      tt-loan-cond.delay-offset-int:VISIBLE       = NO.
   
   IF tt-uploan.class-code EQ "loan-transh-ann" THEN
      tt-loan-cond.annuitplat$     :VISIBLE       = NO.
   
   IF (iMode NE {&MOD_ADD} AND  iMode NE {&MOD_EDIT})
   THEN
      ASSIGN 
         cred-offset_          :SENSITIVE = NO
         int-offset_           :SENSITIVE = NO
         delay-offset_         :SENSITIVE = NO
         delay-offset-int_     :SENSITIVE = NO
      .
   /* Если создание условия, закрываем поля, при редактировании даты не могут меняться */
   IF iMode = {&MOD_ADD} THEN
      ASSIGN
         tt-loan-cond.NDays   :SENSITIVE = NO
         tt-loan-cond.NMonthes:SENSITIVE = NO
         tt-loan-cond.NYears  :SENSITIVE = NO
      .
   
   IF tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm EQ "?" THEN
      tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = "".
   /* инициализация доп.рекв. ВидРеструк значение даты окончания договора */
   IF    iMode EQ {&MOD_ADD}
   THEN DO:
      tt-loan-cond.CondEndDate:SCREEN-VALUE = STRING(tt-uploan.end-date).
   END.

      /* Установка видимости */
   IF LOOKUP ("ПролОбСрДог", tt-loan-cond.vidrestrukt$:SCREEN-VALUE) > 0 THEN
   DO:
      tt-loan-cond.CondEndDate:VISIBLE   = TRUE.
      tt-loan-cond.CondEndDate:SENSITIVE = IF iMode EQ {&MOD_ADD} THEN TRUE ELSE FALSE.
   END.
   ELSE 
   DO:
      IF     iMode NE {&MOD_ADD} 
         AND tt-loan-cond.CondEndDate <> ? THEN 
          ASSIGN
             tt-loan-cond.CondEndDate:VISIBLE = TRUE.
      ELSE ASSIGN
         tt-loan-cond.CondEndDate:VISIBLE = FALSE.
   END.
   /* видимость доли и периода */
   IF tt-uploan.class-code = "loan_dbl_ann" THEN DO:
       /* видимость доли и периода */
       IF (DATE(tt-loan-cond.since:SCREEN-VALUE) = tt-uploan.open-date
                OR (tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> ""
                    AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> "?"))  THEN
        DO:
           ASSIGN
               tt-loan-cond.PartAmount:VISIBLE  = TRUE 
               tt-loan-cond.FirstPeriod:VISIBLE = TRUE
               tt-loan-cond.PartAmount:SENSITIVE  = TRUE 
               tt-loan-cond.FirstPeriod:SENSITIVE = TRUE
               .
        END.
        ELSE 
          ASSIGN
             tt-loan-cond.PartAmount:SENSITIVE      = FALSE
             tt-loan-cond.PartAmount:VISIBLE        = FALSE
             tt-loan-cond.FirstPeriod:SENSITIVE     = FALSE
             tt-loan-cond.FirstPeriod:VISIBLE       = FALSE
             .
        /* устанавливаем признак реструктуризации (кроме первого условия)) 
        ** для корректного расчета суммы аннуитета */
        IF tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> ""
            AND tt-loan-cond.vidrestrukt$:SCREEN-VALUE <> "?"
            AND DATE(tt-loan-cond.since:SCREEN-VALUE) <> tt-uploan.open-date
            THEN RUN SetSysConf IN h_base("Реструктуризация","Да").
            ELSE RUN SetSysConf IN h_base("Реструктуризация","Нет").
   END.
   ELSE
   DO:
      ASSIGN
         tt-loan-cond.PartAmount:SENSITIVE      = FALSE
         tt-loan-cond.PartAmount:VISIBLE        = FALSE
         tt-loan-cond.FirstPeriod:SENSITIVE     = FALSE
         tt-loan-cond.FirstPeriod:VISIBLE       = FALSE
         .
   END.
   /* Лимиты выдачи */
   IF   ( iMode EQ {&MOD_EDIT}
      OR  iMode EQ {&MOD_VIEW}
      OR  iMode EQ {&MOD_ADD})
     AND (tt-uploan.rewzim$:SCREEN-VALUE EQ "ЛимВыдЗад" OR
          tt-uploan.rewzim$:SCREEN-VALUE EQ "НевозЛиния") THEN
   DO:
      /* Получим установленный лимит */
      RUN get-one-limit-loan ("loan",
                              tt-uploan.contract + "," + tt-uploan.cont-code,
                              "limit-l-distr",
                              tt-loan-cond.since,
                              "",
                              OUTPUT vMeasure,
                              OUTPUT mLimit).
      mLimit:SCREEN-VALUE = STRING(mLimit).
      
      /* Теперь просуммируем все операции выдачи, в т.ч. по траншам
      ** и вычтем их из лимита - получим оставшийся лимит */
      FOR EACH loan-int WHERE loan-int.contract  EQ tt-uploan.contract
                          AND loan-int.cont-code EQ tt-uploan.cont-code
                          AND loan-int.id-d      EQ 0
                          AND loan-int.id-k      EQ 3
                          AND loan-int.mdate     LE tt-uploan.since
      NO-LOCK:
         vOperSumm = vOperSumm + loan-int.amt-rub.
      END.
      IF tt-uploan.cont-type EQ "Течение" THEN
         FOR EACH loan-int WHERE loan-int.contract  EQ     tt-uploan.contract
                             AND loan-int.cont-code BEGINS tt-uploan.cont-code + " "
                             AND loan-int.id-d      EQ     0
                             AND loan-int.id-k      EQ     3
                             AND loan-int.mdate     LE     tt-uploan.since
         NO-LOCK:
            vOperSumm = vOperSumm + loan-int.amt-rub.
         END.
      ASSIGN
         mLimitRest              = mLimit - vOperSumm
         mLimitRest:SCREEN-VALUE = STRING(mLimitRest).
   END.
   IF   ( iMode EQ {&MOD_EDIT}
      OR  iMode EQ {&MOD_VIEW}
      OR  iMode EQ {&MOD_ADD})
     AND tt-uploan.rewzim$:SCREEN-VALUE EQ "ВозобнЛиния" THEN
   DO:
      /* Получим установленный лимит */
      RUN get-one-limit-loan ("loan",
                              tt-uploan.contract + "," + tt-uploan.cont-code,
                              "limit-l-debts",
                              tt-loan-cond.since,
                              "",
                              OUTPUT vMeasure,
                              OUTPUT mLimit).

      /* Доступный лимит это параметр 19 */
      RUN STNDRT_PARAM (tt-uploan.contract,
                        tt-uploan.cont-code,
                        19,
                        tt-uploan.since,
                        OUTPUT mLimitRest,
                        OUTPUT md1,
                        OUTPUT md2).

      ASSIGN
         mLimit:SCREEN-VALUE = STRING(mLimit)
         mLimitRest:SCREEN-VALUE = STRING(mLimitRest).
   END.

   IF NOT (   tt-uploan.rewzim$:SCREEN-VALUE EQ "ЛимВыдЗад"
           OR tt-uploan.rewzim$:SCREEN-VALUE EQ "ВозобнЛиния"
           OR tt-uploan.rewzim$:SCREEN-VALUE EQ "НевозЛиния") THEN
      ASSIGN
         mLimit:VISIBLE IN FRAME fMain     = NO
         mLimitRest:VISIBLE IN FRAME fMain = NO
      .
      /* показываем, если редактирование, или просмотр
      ** и установлен платежный период = ПериодДн */
   IF iMode NE {&MOD_ADD} AND tt-loan-cond.cred-mode EQ "ПериодДн" AND tt-loan-cond.shemaplat$ NE YES THEN
   DO:
         /* TOGGLE-BOXы потом не перерисрвываются, поэтому рисуем здесь */
      tt-loan-cond.grperiod$:VISIBLE IN FRAME {&MAIN-FRAME} = NO.
      tt-loan-cond.grperiod$:VISIBLE IN FRAME {&MAIN-FRAME} = YES.
   END.
   ELSE
       tt-loan-cond.grperiod$:VISIBLE = NO. 


    IF {&IS_QBIS_MODE} THEN DO:
      mTxtPercent = "Проценты" .
      mTxtPercent:Format IN FRAME fMain = "x(9)"  .
      mTxtPercent:column IN FRAME fMain =  4  .
    END.
    DISPLAY mTxtPercent WITH FRAME {&MAIN-FRAME} .

    vLoanCurr = tt-uploan.currency:SCREEN-VALUE.
    /* Для валютных договоров инициализируем ресурсы */
    FOR EACH tt-comm-rate:
       IF iMode EQ {&MOD_ADD} OR iMode EQ {&MOD_EDIT} THEN
       DO:
          IF    NOT {assigned vLoanCurr} 
             OR tt-comm-rate.comm-rate-curr:SCREEN-VALUE 
                   IN BROWSE br-comm EQ "?" THEN 
             tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = "".
          ELSE IF {assigned vLoanCurr} THEN
             tt-comm-rate.comm-rate-curr:SCREEN-VALUE IN BROWSE br-comm = 
                tt-uploan.currency:SCREEN-VALUE.
       END.
       ELSE
       DO:
          IF tt-comm-rate.comm-rate-curr EQ ? OR 
             tt-comm-rate.comm-rate-curr EQ "?" THEN
             tt-comm-rate.comm-rate-curr = "".
       END. 
    END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE LocalGetObject TERMINAL-SIMULATION 
PROCEDURE LocalGetObject :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   /*
   mPrepareInstance = "comm-rate,term-amt,Xuploan".
   */
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE LocalSetObject TERMINAL-SIMULATION 
PROCEDURE LocalSetObject :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vRet        AS CHAR   NO-UNDO.
   DEF VAR vRwd        AS ROWID  NO-UNDO.
   DEF VAR vId         AS INT64    NO-UNDO.
   DEF VAR vHs         AS HANDLE NO-UNDO.
   DEF VAR vSum        AS DEC    NO-UNDO.
   DEF VAR vTermAmt    AS CHAR   NO-UNDO.
   DEF VAR vCheckMon   AS LOG    NO-UNDO.
   DEF VAR vTableH     AS HANDLE NO-UNDO .
   DEF VAR vOk         AS LOG    NO-UNDO.
   
   DEF BUFFER b-comm-rate FOR tt-comm-rate.
   /* для того, чтобы сохранить из временной таблицы значения реквизитов,
   ** не объектами полями, нужно добавить их в список след. образом : */
   SetFormDefList(SUBSTITUTE("&1,&2,&3,&4,&5",
                  GetFormDefList(),
                  "tt-loan-cond.cred-offset,tt-loan-cond.int-offset",
                  "tt-loan-cond.delay-offset,tt-loan-cond.delay-offset-int", 
                  "tt-loan-cond.grdatas$,tt-loan-cond.grdatapo$",
                  "tt-comm-rate.comm-rate-curr")).
      /* если задан платежный период "ПериодДн", то сверяем его с предыдущим условием */
   DO WITH FRAME {&MAIN-FRAME}:
      IF (tt-loan-cond.cred-mode:SCREEN-VALUE EQ "ПериодДн") AND AVAIL last-cond THEN
      DO:
         IF tt-loan-cond.grdatas$  NE DATE (GetXAttrValueEx("loan-cond",
                                                            mSurrLastCond,
                                                            "ГрДатаС",
                                                            ?))
            OR 
            tt-loan-cond.grdatapo$ NE DATE (GetXAttrValueEx("loan-cond",
                                                            mSurrLastCond,
                                                            "ГрДатаПо",
                                                            ?))
            THEN 
         DO:
            RUN Fill-SysMes IN h_tmess ("","","0","Даты построения графика должны совпадать с предыдущим условием.").
            RETURN ERROR "Возникла ошибка при сохранении условия.".
         END.
      END.
   END.
      /* Проверка на возможность автоматической разноски сводного графика */
   RUN CheckAutoTermDistrTT (tt-uploan.contract,     /* Назначение договора */
                             tt-uploan.cont-code,    /* Номер договора */
                             OUTPUT vCheckMon).      /* Результат */
   IF NOT vCheckMon THEN
   DO:
      ASSIGN 
         mRetVal = {&RET-ERROR}
         vRet    = RETURN-VALUE
      .
      RETURN ERROR vRet.
   END.
   DO WITH FRAME {&MAIN-FRAME}:
      /* Если условие типа пролонгация, устанавливаем новую дату окончания договора */
      IF     LOOKUP ("ПролОбСрДог", tt-loan-cond.vidrestrukt$:SCREEN-VALUE) GT 0
         AND DATE (tt-loan-cond.CondEndDate:SCREEN-VALUE)                   GT mPrevEndDate
         AND DATE (tt-loan-cond.CondEndDate:SCREEN-VALUE)                   NE ?
      THEN DO:
         RUN LimitChangeDatePo IN h_limit("cond",
            tt-uploan.contract  ,
            tt-uploan.cont-code ,
            DATE (tt-loan-cond.CondEndDate:SCREEN-VALUE)  ,
            INPUT-OUTPUT tt-uploan.LimitGrafDate
            ) NO-ERROR .
            IF ERROR-STATUS :ERROR THEN
               RETURN ERROR RETURN-VALUE .
         
         /*а также пересчитываем количество дней месяцкв и лет которое охватывается услвие */
         /* Если дата окончания не поменялась, то берем с предыдущего условия */
         IF tt-uploan.end-date NE DATE(tt-loan-cond.CondEndDate:SCREEN-VALUE) THEN
         DO:
            mChangedField      = FALSE.
            {loan-trg.pro
                &RecalcDMY      = YES                       
                &SrokChange     = YES
                &OpenDate       = STRING(tt-uploan.open-date)
                &EndDate        = tt-loan-cond.CondEndDate:SCREEN-VALUE
                &HandCalcAnnuitet = NO
                &LogVarChanged  = mChangedField
                &tt-loan        = tt-uploan
                &tt-loan-cond   = tt-loan-cond
                &tt-comm-rate   = tt-comm-rate
                &tt-amount      = tt-term-amt
                &br-comm        = br-comm
            }  
         END.

         /*меняем дату окончания договора*/
         ASSIGN
            tt-uploan.end-date = DATE (tt-loan-cond.CondEndDate:SCREEN-VALUE)
            mProlong           = TRUE
         .    
         
      END.
      ELSE
         mProlong = FALSE.
   END.
   IF tt-loan-cond.shemaplat$ THEN
   DO WITH FRAME {&MAIN-FRAME}:
      ASSIGN 
         vHs = mInstance
         vHs = vHs:DEFAULT-BUFFER-HANDLE:BUFFER-FIELD("shemaplat$")
         .
      IF VALID-HANDLE(vHs) THEN
         vHs:PRIVATE-DATA = {&FORM-DEF} NO-ERROR.

      
      IF NOT mEnableEndDate THEN
        tt-uploan.end-date = mPrevEndDate. 

      ASSIGN 
         vHs = mInstance
         vHs = vHs:DEFAULT-BUFFER-HANDLE:BUFFER-FIELD("end-date")
         .
      IF VALID-HANDLE(vHs) AND iMode <> {&MOD_TEMPL} AND mEnableEndDate THEN
      DO:
         ASSIGN 
            vHs:PRIVATE-DATA = {&FORM-DEF} NO-ERROR
            .
          tt-loan-cond.end-date = tt-uploan.end-date.
      END.

      ASSIGN
         tt-loan-cond.int-period  = tt-loan-cond.cred-period 
         tt-loan-cond.int-month   = tt-loan-cond.cred-month
         tt-loan-cond.int-date    = tt-loan-cond.cred-date
         tt-loan-cond.delay       = tt-loan-cond.delay1
         tt-loan-cond.int-offset  = tt-loan-cond.cred-offset
         .
      FIND FIRST b-comm-rate WHERE
                 b-comm-rate.commission = "%Кред"
      NO-ERROR.
      IF AVAIL b-comm-rate THEN
      DO:
         RUN CalcAnnuitet(tt-uploan.contract,
                          tt-uploan.cont-code,
                          DATE(tt-loan-cond.since:SCREEN-VALUE),
                          DATE(tt-uploan.end-date:SCREEN-VALUE),
                          DEC(tt-term-amt.amt-rub:SCREEN-VALUE),
                          b-comm-rate.rate-comm,
                          INT64(tt-loan-cond.cred-date:SCREEN-VALUE),
                          tt-loan-cond.cred-period:SCREEN-VALUE,
                          tt-loan-cond.cred-month:SCREEN-VALUE,
                          INT64(tt-loan-cond.kollw#gtper$:SCREEN-VALUE),
                          LOOKUP(tt-loan-cond.cred-offset:SCREEN-VALUE,tt-loan-cond.cred-offset:LIST-ITEMS),
                          INT64(tt-loan-cond.annuitkorr$:SCREEN-VALUE),
                          DEC(tt-uploan.sum-depos),
                          INT64(tt-loan-cond.FirstPeriod),
                          DEC(tt-loan-cond.PartAmount),
                          OUTPUT vSum).
         IF RETURN-VALUE <> "" THEN
         DO:
            ASSIGN
               mRetVal = {&RET-ERROR}
               vRet    = RETURN-VALUE
            .
            RETURN ERROR vRet.
        END.
      END.
      IF NOT mEnableEndDate THEN
         tt-uploan.end-date = mPrevEndDate. 

        /* Проверка ограничения по сроку аннуитета, имеет смысл только для 
        ** класса "loan_mortgage", для других классов пропускается */
     IF AVAIL b-comm-rate THEN
     DO:
        RUN CheckTermLimit(tt-uploan.class-code,
                           DATE(tt-loan-cond.since:SCREEN-VALUE),
                           DATE(tt-uploan.end-date:SCREEN-VALUE),
                           b-comm-rate.rate-comm,
                           OUTPUT vCheckMon,
                           OUTPUT mRetVal
                           ).
        IF vCheckMon THEN
           RETURN ERROR mRetVal.
        ELSE IF mRetVal NE "" THEN
           RUN Fill-SysMes IN h_tmess ("", "", "", mRetVal).
     END.
     
   END.
   IF NOT mBrowseCommRateOFF THEN
   DO:
      vId = mId + 1.
      FOR EACH b-comm-rate WHERE BY b-comm-rate.commission:
         b-comm-rate.since = tt-loan-cond.since.
         b-comm-rate.currency = tt-uploan.currency.
         b-comm-rate.local__id = vId.
         b-comm-rate.local__RowId = ?.
         vId =  vId + 1.
      END.
      FIND FIRST b-comm-rate NO-LOCK NO-ERROR.
      {&OPEN-QUERY-br-comm}
      REPOSITION br-comm TO ROWID ROWID(b-comm-rate).
      APPLY "ENTRY" TO br-comm IN FRAME {&MAIN-FRAME}.

      FOR EACH b-comm-rate WHERE BY b-comm-rate.Local__ID:
         IF mModeBrowse EQ {&MOD_EDIT} THEN
         DO:
            mChangedField = IF mHandCalcAnnuitet THEN NO ELSE mChangedField.
            {loan-trg.pro
               &CheckCommRate  = YES
               &LogVarChanged  = mChangedField
               &tt-loan        = tt-uploan
               &tt-loan-cond   = tt-loan-cond
               &tt-comm-rate   = tt-comm-rate
               &tt-amount      = tt-term-amt
               &br-comm        = br-comm
            }
         END.
      END.
   END.
   tt-loan-cond.user__mode = {&MOD_EDIT}.
   IF iMode EQ {&MOD_ADD} THEN
   DO:
      IF NOT mProlong THEN
         vTermAmt = GetBuffersValue("term-obl",
                                    "FOR EACH term-obl WHERE
                                              term-obl.contract  EQ '" + tt-uploan.contract + "' 
                                       AND    term-obl.cont-code EQ '" + tt-uploan.cont-code + "' 
                                       AND    term-obl.idnt      EQ 2 
                                       AND    term-obl.amt-rub   NE 0 
                                       AND    term-obl.end-date  EQ " + STRING(tt-loan-cond.since) + 
                                    " BY term-obl.nn DESC",
                                    "term-obl.rowid,term-obl.nn") 
                                    NO-ERROR.
      ELSE 
          vTermAmt = GetBuffersValue("term-obl",
                                     "FOR EACH term-obl WHERE
                                               term-obl.contract  EQ '" + tt-uploan.contract + "' 
                                       AND     term-obl.cont-code EQ '" + tt-uploan.cont-code + "' 
                                       AND     term-obl.idnt      EQ 2 
                                       AND     term-obl.end-date  EQ " + STRING(tt-loan-cond.since) + 
                                     " BY term-obl.nn DESC",
                                     "term-obl.rowid,term-obl.nn") 
                                    NO-ERROR.
      IF     tt-loan-cond.since:INPUT-VALUE GE tt-uploan.end-date:INPUT-VALUE 
         AND NOT mProlong THEN
         ASSIGN
            tt-term-amt.user__mode = {&MOD_DELETE}
            tt-term-amt.amt-rub    = ?
         .

      IF vTermAmt EQ ? THEN
         tt-term-amt.end-date = tt-loan-cond.since.
      ELSE
      DO:
         tt-term-amt.local__rowid = TO-ROWID(ENTRY(1,vTermAmt,CHR(2))).
         tt-term-amt.nn = INT64(ENTRY(2,vTermAmt,CHR(2))).
      END.
   END.

   /* Если корректировали автоматически созданное условие, снимаем пометку  что оно автоматическое */
   IF iMode EQ {&MOD_EDIT} THEN
      IF GetXAttrValue("loan-cond",
                       tt-loan-cond.contract + ","
                       + tt-loan-cond.cont-code + ","
                       + STRING (tt-loan-cond.since),
                       "AutoCond")  EQ "Да" THEN
      DO:
         UpdateSignsEx(tt-loan-cond.class-code,
                       tt-loan-cond.contract + ","
                       + tt-loan-cond.cont-code + ","
                       + STRING (tt-loan-cond.since),
                       "AutoCond",
                       "Нет"
                         ) .
      END.

   mSrc:BUFFER-COPY(mDst).

   RUN SetTermObl.

   IF tt-loan-cond.cred-offset EQ {&CB-NONE} THEN 
      tt-loan-cond.cred-offset = "".
   IF tt-loan-cond.int-offset EQ {&CB-NONE} THEN 
      tt-loan-cond.int-offset = "".
   IF tt-loan-cond.delay-offset EQ {&CB-NONE} THEN 
      tt-loan-cond.delay-offset = "".
   IF tt-loan-cond.delay-offset-int EQ {&CB-NONE} THEN 
      tt-loan-cond.delay-offset-int = "".

   FOR EACH tt-comm-cond:
         /* ищем предыдущую ставку, отличную от текущей */
      FIND LAST comm-cond WHERE 
                comm-cond.contract   EQ tt-comm-cond.contract
                                          AND comm-cond.cont-code  EQ tt-comm-cond.cont-code
                                AND comm-cond.commission EQ tt-comm-cond.commission
            AND comm-cond.since      LE tt-comm-cond.since
      NO-LOCK NO-ERROR.
         IF AVAIL comm-cond THEN
      DO:
         IF comm-cond.since EQ tt-comm-cond.since
         THEN
            tt-comm-cond.local__rowid = ROWID(comm-cond).
         ELSE IF    comm-cond.FloatType EQ tt-comm-cond.FloatType
                AND comm-cond.Action    EQ tt-comm-cond.Action
                 OR comm-cond.FloatType EQ tt-comm-cond.FloatType
                AND comm-cond.FloatType
                AND tt-comm-cond.Action EQ ""
         /* 
           Новое правило расчета ПС  НЕ НУЖНО:
           1. Если тип ставки и действие остались такими же.
           2. Если ставка осталась плавающей, а действия нет.
              Т.е. например при создании условия с новой %% ставкой.
         */
         THEN
               /* признак удаления при сохранении */
            tt-comm-cond.user__mode = {&MOD_DELETE}.
      END.
      ELSE
         IF NOT tt-comm-cond.FloatType THEN
            tt-comm-cond.user__mode = {&MOD_DELETE}.
   END.

   FIND FIRST tt-comm-rate WHERE
              tt-comm-rate.commission EQ "%МинОД"
   NO-ERROR.
   IF     AVAIL tt-comm-rate
   THEN DO:
      IF  tt-uploan.rewzim$ NE "ВозобнЛиния"
      THEN DO:
         IF  tt-uploan.rewzim$ = ? OR tt-uploan.rewzim$ = ""
         THEN
            ASSIGN
            tt-uploan.rewzim$:SCREEN-VALUE = "ВозобнЛиния"
            tt-uploan.rewzim$              = "ВозобнЛиния"
            .
         ELSE DO:
            RUN Fill-SysMes IN h_tmess ("", "", "", "Ставка минимального погашения ОД обрабатывается в режиме ВозобнЛиния").
            RETURN ERROR "Ставка минимального погашения ОД обрабатывается в режиме ВозобнЛиния".
         END.
      END.
      ELSE DO:
         /* Сохранение лимитов */
         IF     mLimit EQ ?
            AND tt-loan-cond.PayType EQ "выдача"
         THEN DO:
            mLimit = tt-loan-cond.PaySum.
            RUN SaveLoanLimit (tt-uploan.contract,
                               tt-uploan.cont-code,
                               tt-loan-cond.since,
                               tt-uploan.currency,
                               "limit-l-debts",
                               mLimit,
                               OUTPUT vOk).
            IF NOT vOk THEN
            DO:
               RUN Fill-SysMes IN h_tmess ("","","0","Возникла ошибка при сохранении лимита задолженности. Лимит не сохранен.").
            RETURN ERROR "Возникла ошибка при сохранении лимита задолженности. Лимит не сохранен.".
            END.
         END.
      END.
   END.

   FOR FIRST tt-comm-rate WHERE 
             tt-comm-rate.rate-comm EQ ? 
   NO-LOCK:
      RUN Fill-SysMes IN h_tmess ("","","0",
                                  "Не задано значение процентной ставки " + 
                                  tt-comm-rate.commission).
      RETURN ERROR.
   END.
   RETURN.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE Local_F9 TERMINAL-SIMULATION 
PROCEDURE Local_F9 :
                  /* Проверка прав на редактирование договора подчиненного */
   IF     USERID("bisquit") NE tt-uploan.user-id
      AND NOT GetSlavePermission(USERID("bisquit"),tt-uploan.user-id,"w")
   THEN RETURN ERROR.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE PostGetObject TERMINAL-SIMULATION 
PROCEDURE PostGetObject :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vSurr AS CHAR NO-UNDO.

   DEF BUFFER bloan-cond FOR loan-cond.

   IF    iMode EQ {&MOD_ADD}
      OR iMode EQ {&MOD_EDIT}
   THEN
   DO 
      ON ERROR UNDO, RETURN ERROR:
      /* список допустимых значений для полей Сдвиг */
      RUN GetXAttr (tt-loan-cond.class-code,"cred-offset",BUFFER xattr).
      mOffsetVld = xattr.Validation.   /* получить список допустимых значений полей "Сдвиг" */
      IF LOOKUP("",mOffsetVld) GT 0 THEN 
         ENTRY(LOOKUP("",mOffsetVld),mOffsetVld) = mOffsetNone. /* вместо значения "" используем "--" */
      ELSE 
         RUN Fill-SysMes IN h_tmess ("", "", "", "Ошибка в списке допустимых значений полей Сдвиг").

      ASSIGN
         tt-loan-cond.cred-curr-next   = IF tt-loan-cond.cred-curr-next EQ ?
                                            THEN YES
                                            ELSE tt-loan-cond.cred-curr-next
         tt-loan-cond.int-curr-next    = IF tt-loan-cond.int-curr-next EQ ?
                                            THEN YES
                                            ELSE tt-loan-cond.int-curr-next
         tt-loan-cond.cred-work-calend = IF tt-loan-cond.cred-work-calend EQ ?
                                            THEN YES
                                            ELSE tt-loan-cond.cred-work-calend
         tt-loan-cond.int-work-calend  = IF tt-loan-cond.int-work-calend EQ ?
                                            THEN YES
                                            ELSE tt-loan-cond.int-work-calend.
   END.

      /* Запоминаем значение ставки %МинОд */
   mMinODChange = 0.
   IF iMode EQ {&MOD_EDIT} THEN
   DO:
      FIND FIRST tt-comm-rate WHERE
                 tt-comm-rate.commission EQ "%МинОД"
      NO-ERROR.
      IF AVAIL tt-comm-rate THEN
         mMinODChange = tt-comm-rate.rate-comm.
   END.


   IF tt-loan-cond.isklmes$ = ? THEN tt-loan-cond.isklmes$ = NO.

      /* заполнение комиссий */
   mId = GetInstanceId("tt-comm-rate").
   mSrc = iInstance:DEFAULT-BUFFER-HANDLE.
   mSrc:FIND-FIRST.
   mDst = BUFFER tt-uploan:HANDLE.
   IF NOT AVAIL tt-uploan THEN
      CREATE tt-uploan.
   mDst:FIND-FIRST.
   mDst:BUFFER-COPY(mSrc).
   IF     NOT CAN-FIND (FIRST tt-comm-rate) 
      AND tt-uploan.class-code EQ "loan-tran-lin-ann" THEN
   DO:
      FIND FIRST loan WHERE loan.contract  EQ tt-loan-cond.contract
                        AND loan.cont-code EQ tt-loan-cond.cont-code
      NO-LOCK NO-ERROR.
      RUN SET_COMM_RATE(BUFFER loan, tt-uploan.open-date).
      mId = GetInstanceId("tt-comm-rate").
   END.
   mBrowseCommRateOFF = NOT {assigned tt-uploan.rate-list}.
   FOR EACH tt-comm-rate NO-LOCK:
      tt-comm-rate.min_value = DEC(GetXAttrValueEx ("comm-rate",
                                                    GetSurrogateBuffer("comm-rate", (BUFFER tt-comm-rate:HANDLE)),
                                                    "МинЗнач",
                                                    "0")).
   END.
   FIND LAST last-cond WHERE 
             last-cond.contract  EQ tt-uploan.contract
         AND last-cond.cont-code EQ tt-uploan.cont-code
         AND ROWID(last-cond) NE tt-loan-cond.local__rowid
   NO-LOCK NO-ERROR.
   IF AVAIL last-cond THEN DO:
       /* Выбрасываем из поиска автоматическое условие (для продукта с двумя суммами аннуитета) */
       IF  tt-uploan.class-code EQ "loan_dbl_ann"
            AND GetXattrValue("loan-cond",
                              last-cond.contract + ","
                              + last-cond.cont-code + ","
                              + STRING (last-cond.since),
                              "AutoCond")  EQ "Да" THEN 
        DO:
           blc:
           FOR EACH  bloan-cond WHERE 
                     bloan-cond.contract  EQ tt-uploan.contract
                 AND bloan-cond.cont-code EQ tt-uploan.cont-code
                 AND bloan-cond.since     LT last-cond.since
                 AND ROWID(bloan-cond)    NE tt-loan-cond.local__rowid
           NO-LOCK
           BY bloan-cond.since DESC:
              mSurrLastCond = bloan-cond.contract + "," + bloan-cond.cont-code + "," + STRING (bloan-cond.since).
              LEAVE blc.
           END.
           IF NUM-ENTRIES(mSurrLastCond) = 3 THEN
              FIND FIRST last-cond WHERE 
                         last-cond.contract  = ENTRY(1,mSurrLastCond)
                     AND last-cond.cont-code = ENTRY(2,mSurrLastCond)
                     AND last-cond.since     = DATE(ENTRY(3,mSurrLastCond))
               NO-LOCK NO-ERROR.                          
        END.
        ELSE 
           mSurrLastCond = last-cond.contract + "," + last-cond.cont-code + "," + STRING (last-cond.since).
   END.
     
   IF iMode EQ {&MOD_ADD} THEN
   DO:
      mRateList = GetXattrEx(tt-uploan.class-code,"rate-list","Initial").
      tt-loan-cond.contract = tt-uploan.contract.
      tt-loan-cond.cont-code = tt-uploan.cont-code.

      mUpEndDate = ?.
      IF NUM-ENTRIES(tt-uploan.cont-code," ") EQ 2 THEN
      DO:
         mI = INT64(ENTRY(2,tt-uploan.cont-code," ")) NO-ERROR.
         IF mI GT 0 THEN
            mUpEndDate = DATE(
               GetBufferValue(
                  "loan",
                  "WHERE loan.contract EQ '" + tt-uploan.contract + "' AND " +
                  "      loan.cont-code EQ '" + ENTRY(1,tt-uploan.cont-code," ") + "'",
                  "end-date")) NO-ERROR.
      END.

      mOpenDate = tt-uploan.open-date.
      IF AVAIL last-cond THEN
      DO:
         ASSIGN
            mLastDate                  = last-cond.since
            tt-loan-cond.cred-period   = last-cond.cred-period
            tt-loan-cond.cred-date     = last-cond.cred-date
            tt-loan-cond.delay1        = last-cond.delay1
            tt-loan-cond.int-period    = last-cond.int-period
            tt-loan-cond.int-date      = last-cond.int-date
            tt-loan-cond.delay         = last-cond.delay
            tt-loan-cond.PayType       = GetXAttrValueEx("loan-cond", 
                                                         mSurrLastCond, 
                                                         "PayType", 
                                                         "")
            tt-loan-cond.PaySum        = DEC (GetXAttrValueEx("loan-cond", 
                                                              mSurrLastCond, 
                                                              "PaySum", 
                                                              "0")
                                              )
            tt-loan-cond.poslpd$       = DATE(GetXAttrValueEx("loan-cond",
                                                              mSurrLastCond,
                                                              "ПослПД",
                                                              ?)
                                             ) WHEN GetXattrInit(tt-uploan.class-code,
                                                                 "ПослПДЗаПо") EQ "ДА"
         
         NO-ERROR.
      END.
      mFirstDateAvail = 
         (IF mLastDate EQ ? THEN mOpenDate ELSE mLastDate + 1).
      tt-loan-cond.since = mFirstDateAvail.
      tt-term-amt.amt-rub = DEC(GetBuffersValue(
         "term-obl",
         "FOR EACH term-obl WHERE
                   term-obl.contract EQ '" + tt-uploan.contract + "' AND
                   term-obl.cont-code EQ '" + tt-uploan.cont-code + "' AND
                   term-obl.idnt EQ 2 AND term-obl.amt-rub NE 0 AND
                   term-obl.end-date LE " + STRING(tt-loan-cond.since) + " NO-LOCK BY term-obl.end-date DESC",
         "term-obl.amt-rub")) NO-ERROR.
      IF tt-term-amt.amt-rub = ? THEN tt-term-amt.amt-rub = 0.
      IF NOT mBrowseCommRateOFF THEN
      DO:
         DO mI = 1 TO NUM-ENTRIES(mRateList):
            FIND FIRST tt-comm-rate WHERE tt-comm-rate.commission = "" NO-ERROR.
            IF NOT AVAIL tt-comm-rate THEN
            DO:
               CREATE tt-comm-rate.
               tt-comm-rate.local__id = mI.
               CREATE tt-comm-cond.
               tt-comm-cond.local__id = mI.
            END.
            ASSIGN 
               tt-comm-rate.commission = ENTRY(mI,mRateList)
               tt-comm-rate.acct       = "0"
               tt-comm-cond.commission = ENTRY(mI,mRateList)
               tt-comm-cond.NegBaseRate = ""
               .
            tt-comm-rate.rate-fixed = GET_HEAD_COMM_TYPE (tt-comm-rate.commission,
                                                          tt-uploan.currency,
                                                          tt-loan-cond.since).
            /* Хотя может сделать для всех */
            IF tt-loan-cond.shemaplat$ AND 
               ENTRY(mI,mRateList) = "%Кред" THEN 
            DO:
                 tt-comm-rate.rate-comm = GET_COMM(
                          "%Кред",
                          ?,
                          tt-uploan.currency,
                          tt-uploan.contract + "," + tt-uploan.cont-code,
                          0.00,
                          0,
                          mLastDate).
            END.
            
         END.
         FOR EACH tt-comm-rate:
            tt-comm-rate.since = tt-loan-cond.since.
         END.
         FOR EACH tt-comm-cond:
            tt-comm-cond.since = tt-loan-cond.since.
         END.
      END.
   END.

   DO WITH FRAME {&MAIN-FRAME}:
      IF    tt-loan-cond.since:SCREEN-VALUE NE ?
        AND tt-uploan.end-date:SCREEN-VALUE  NE ? 
        AND ( tt-loan-cond.NDays  EQ 0
        AND  tt-loan-cond.NMonth EQ 0
        AND  tt-loan-cond.NYears EQ 0 )
         OR ( tt-loan-cond.NDays EQ ?
         OR tt-loan-cond.NMonth EQ ?
         OR tt-loan-cond.NYears EQ ? ) THEN
      DO:
         FIND LAST bloan-cond WHERE bloan-cond.contract  EQ tt-loan-cond.contract
                                AND bloan-cond.cont-code EQ tt-loan-cond.cont-code
                                AND bloan-cond.since     LT DATE(tt-loan-cond.since:SCREEN-VALUE)
         NO-LOCK NO-ERROR.
         IF AVAIL bloan-cond THEN
         DO:
            ASSIGN
               vSurr               = bloan-cond.contract + "," + 
                                     bloan-cond.cont-code + "," +
                                     STRING(bloan-cond.since)
               tt-loan-cond.NDays  = INT64(GetXAttrValueEx("loan-cond",vSurr,"NDays","0"))
               tt-loan-cond.NMonth = INT64(GetXAttrValueEx("loan-cond",vSurr,"NMonthes","0"))
               tt-loan-cond.NYears = INT64(GetXAttrValueEx("loan-cond",vSurr,"NYears","0"))
            .
            DISPLAY 
               tt-loan-cond.NDays  
               tt-loan-cond.NMonth 
               tt-loan-cond.NYears 
            WITH FRAME {&MAIN-FRAME} .
         END.
         /* если на предыдущем не заполнено или изменился срок, то пересчитываем */
         IF     tt-loan-cond.NDays  EQ 0
            AND tt-loan-cond.NMonth EQ 0
            AND tt-loan-cond.NYears EQ 0 then
         DO:
            mChangedField = FALSE.
            {loan-trg.pro
               &RecalcDMY      = YES                       
               &SrokChange     = YES
               &OpenDate       = STRING(tt-uploan.open-date)
               &EndDate        = tt-uploan.end-date:SCREEN-VALUE  
               &HandCalcAnnuitet = NO
               &LogVarChanged  = mChangedField
               &tt-loan        = tt-uploan
               &tt-loan-cond   = tt-loan-cond
               &tt-comm-rate   = tt-comm-rate
               &tt-amount      = tt-term-amt
               &br-comm        = br-comm
            } 
         END.
      END.
   END.

   /* Теперь создадим информацию по плавающим ставкам */
   mI = 1.
   FOR EACH tt-comm-rate:

      FIND FIRST tt-comm-cond WHERE tt-comm-cond.commission EQ tt-comm-rate.commission
                                AND tt-comm-cond.since      EQ tt-loan-cond.since
      EXCLUSIVE-LOCK NO-WAIT NO-ERROR.

      IF NOT AVAIL tt-comm-cond THEN
      DO:
         CREATE tt-comm-cond.
         ASSIGN
            tt-comm-cond.local__id = GetInstanceId("tt-comm-cond") + mI
            mI = mI + 1
         .
      END.

      ASSIGN
         tt-comm-cond.commission = tt-comm-rate.commission
         tt-comm-cond.since      = tt-comm-rate.since
         tt-comm-cond.contract   = tt-uploan.contract
         tt-comm-cond.cont-code  = tt-uploan.cont-code
         tt-comm-cond.class-code = "comm-cond"
         tt-comm-cond.local__template = YES
      .

      FIND LAST comm-cond WHERE comm-cond.contract   EQ tt-uploan.contract
                            AND comm-cond.cont-code  EQ tt-uploan.cont-code
                            AND comm-cond.commission EQ tt-comm-cond.commission
                            AND comm-cond.since      LE tt-comm-cond.since
      NO-LOCK NO-ERROR.
      IF AVAIL comm-cond THEN
         ASSIGN
            tt-comm-cond.FloatType = comm-cond.FloatType.
   END.

   /* Предзаполняем ставки на основании классификатора ПлавСтПарам или существующих условий ПС */
   IF iMode EQ {&MOD_ADD} THEN
   DO:
      
      /* ПЕРЕНЕС ЭТОТ БЛОК ИЗ LocalEnableDisable, ЧТОБЫ ХОТЯ БЫ СОБРАТЬ ЗАПОЛНЕНИЕ 
      ** КОМИССИЙ В ОДНО МЕСТО. ПОТОМ НУЖНО ВСЕ ПЕРЕНЕСТИ В PostGetObj */

   /* Если создаем новое условие, и есть предыдущее, то инициализируем ставки
   ** в форме с предыдущего условия
   ** При этом, если ставка плавающая, то не инициализируем, а расчитываем согласно правил ПС */
      /* Если это не первое условие, то надо скопировать ставки с предыдущего условия */
      IF CAN-FIND(LAST sloan-cond WHERE sloan-cond.contract  EQ tt-uploan.contract
                                    AND sloan-cond.cont-code EQ tt-uploan.cont-code
                                    AND sloan-cond.since     LT tt-loan-cond.since) 
        AND NOT mBrowseCommRateOFF THEN
      DO:
         scomm:
         FOR EACH scomm-rate WHERE scomm-rate.kau        EQ tt-uploan.contract + "," + tt-uploan.cont-code
                               AND scomm-rate.commission NE "%Рез"
                               AND scomm-rate.commission NE "%ОРез"
                               AND scomm-rate.since      LE tt-loan-cond.since
         NO-LOCK BREAK BY scomm-rate.commission BY scomm-rate.since DESCENDING:
            IF FIRST-OF(scomm-rate.commission) THEN
            DO:
               FIND FIRST tt-comm-rate WHERE tt-comm-rate.commission EQ scomm-rate.commission
               EXCLUSIVE-LOCK NO-WAIT NO-ERROR.
               IF AVAIL tt-comm-rate THEN
               DO:
                  ASSIGN
                     tt-comm-rate.rate-comm  = scomm-rate.rate-comm
                     tt-comm-rate.rate-fixed = scomm-rate.rate-fixed
                  .
                  tt-comm-rate.min_value = DEC(GetXAttrValueEx ("comm-rate",
                                                                GetSurrogateBuffer("comm-rate", (BUFFER scomm-rate:HANDLE)),
                                                                "МинЗнач",
                                                                "0")).
               END.
               ELSE
               DO:
                  CREATE tt-comm-rate.
                  FOR EACH b-comm-rate BY b-comm-rate.Local__Id DESC:
                     LEAVE.
                  END.
                  BUFFER-COPY b-comm-rate EXCEPT local__id local__rowid commission rate-comm TO tt-comm-rate.
                  ASSIGN
                     tt-comm-rate.commission  = scomm-rate.commission
                     tt-comm-rate.since       = tt-loan-cond.since
                     tt-comm-rate.Local__UpId = tt-loan-cond.local__Id
                     tt-comm-rate.rate-comm   = scomm-rate.rate-comm
                     tt-comm-rate.rate-fixed  = scomm-rate.rate-fixed
                  .
                  tt-comm-rate.min_value = DEC(GetXAttrValueEx ("comm-rate",
                                                                GetSurrogateBuffer("comm-rate", (BUFFER scomm-rate:HANDLE)),
                                                                "МинЗнач",
                                                                "0")).
                  tt-comm-rate.Local__Id   = MAX(GetInstanceId("tt-comm-rate"),b-comm-rate.Local__Id) + 1.
                  CREATE tt-comm-cond.
                  ASSIGN
                     tt-comm-cond.class-code = "comm-cond"
                     tt-comm-cond.contract   = tt-loan-cond.contract
                     tt-comm-cond.cont-code  = tt-loan-cond.cont-code
                     tt-comm-cond.since      = tt-loan-cond.since
                     tt-comm-cond.commission = tt-comm-rate.commission
                     tt-comm-cond.Local__Id  = MAX(GetInstanceId("tt-comm-cond"),tt-comm-rate.Local__Id) + 1
                  .
               END.
            END.
            ELSE
               NEXT scomm.
         END.
      END.
      
      
      vCredPlav = GetXattrInit (tt-uploan.class-code,"КредПлав").
      IF    vCredPlav NE ""
        AND vCredPlav NE ? 
        AND NOT mBrowseCommRateOFF THEN
      DO:
         DO vCounter = 1 TO NUM-ENTRIES(vCredPlav):

            FIND FIRST code WHERE code.class EQ "ПлавСтПарам"
                              AND code.code  EQ ENTRY(vCounter,vCredPlav)
            NO-LOCK NO-ERROR.
            IF AVAIL code THEN
            DO:
               /* Заполняем ранее созданные болванки comm-cond'ов */
               FIND FIRST tt-comm-cond WHERE tt-comm-cond.commission EQ ENTRY(2,code.misc[2])
                                         AND tt-comm-cond.since      EQ tt-loan-cond.since
               EXCLUSIVE-LOCK NO-WAIT NO-ERROR.
               IF AVAIL tt-comm-cond THEN
               DO:
                  ASSIGN
                     tt-comm-cond.action     = code.misc[3]
                     tt-comm-cond.BaseChange = DEC(code.misc[4])
                     tt-comm-cond.BaseCode   = ENTRY(1,code.misc[2])
                     tt-comm-cond.contract   = tt-uploan.contract
                     tt-comm-cond.cont-code  = tt-uploan.cont-code
                     tt-comm-cond.day        = INT64(ENTRY(1,code.misc[8]))
                     tt-comm-cond.delay      = INT64(ENTRY(2,code.misc[5]))
                     tt-comm-cond.FirstDelay = INT64(ENTRY(1,code.misc[5]))
                     tt-comm-cond.FloatType  = YES
                     tt-comm-cond.month      = INT64(ENTRY(2,code.misc[8]))
                     tt-comm-cond.period     = code.misc[6]
                     tt-comm-cond.quantity   = INT64(code.misc[7])
                     tt-comm-cond.reference  = ENTRY(vCounter,vCredPlav)
                     tt-comm-cond.source     = code.misc[1]
                     tt-comm-cond.NegBaseRate = ENTRY(3,code.misc[2]) 
                                                WHEN NUM-ENTRIES(code.misc[2]) GE 3
                  .

                  /* При вводе нового(не первого) условия, надо расчитать ставку согласно правил */
                  IF CAN-FIND(LAST loan-cond WHERE loan-cond.contract  EQ tt-uploan.contract
                                               AND loan-cond.cont-code EQ tt-uploan.cont-code
                                               AND loan-cond.since     LT DATE(tt-loan-cond.since:SCREEN-VALUE)) THEN
                  DO:
                     RUN CalcFloatRate (tt-uploan.contract,
                                        tt-uploan.cont-code,
                                        tt-comm-cond.source,
                                        IF tt-comm-cond.source EQ "Общие ставки" THEN tt-comm-cond.BaseCode
                                                                                 ELSE tt-comm-cond.commission,
                                        DATE(tt-loan-cond.since:SCREEN-VALUE),
                                        tt-comm-cond.action,
                                        tt-comm-cond.BaseChange,
                                        tt-comm-cond.firstdelay,
                                        tt-comm-cond.NegBaseRate NE "Нет",
                                        OUTPUT vDatePS,
                                        OUTPUT vBaseRatePS,
                                        OUTPUT vRatePS).
                     IF vRatePS NE 0 THEN
                        FIND FIRST tt-comm-rate WHERE tt-comm-rate.commission EQ tt-comm-cond.commission
                                                  AND tt-comm-rate.since      EQ tt-comm-cond.since
                        EXCLUSIVE-LOCK NO-WAIT NO-ERROR.
                        IF AVAIL tt-comm-rate THEN
                           ASSIGN
                              tt-comm-rate.rate-comm = vRatePS.
                  END.
               END.
            END.
         END.
      END. /* Предзаполнение по ПлавСтПарам*/
   END.
   ASSIGN
      mEndDate = tt-uploan.end-date
      mAmount = tt-term-amt.amt-rub WHEN AVAIL tt-term-amt
      mKredPlat = tt-loan-cond.kredplat$
      mCredPeriod = tt-loan-cond.Cred-Period
      mCredDate = tt-loan-cond.Cred-Date
      mIntPeriod  = tt-loan-cond.int-period
      mIntDate    = tt-loan-cond.int-date
      mDelay1 = tt-loan-cond.Delay1
      mCredOffset = (IF tt-loan-cond.cred-offset EQ ? THEN "" ELSE tt-loan-cond.cred-offset)
      mIntOffset  = (IF tt-loan-cond.int-offset  EQ ? THEN "" ELSE tt-loan-cond.int-offset)
      mCredMode = tt-loan-cond.cred-mode
      mDateDelay = tt-loan-cond.DateDelay
      mCredCurrNext = tt-loan-cond.cred-curr-next
      mDelayOffset = delay-offset_
      mCredWorkCalend = tt-loan-cond.cred-work-calend
      mIntMode = tt-loan-cond.int-mode
      mDateDelayInt = tt-loan-cond.DateDelayInt
      mDelay = tt-loan-cond.delay
      mIntCurrNext = tt-loan-cond.int-curr-next
      mIntWorkCalend = tt-loan-cond.int-work-calend
      mDelayOffsetInt = delay-offset-int_

      mNameCredPeriod = 
         GetDomainCodeName(tt-loan-cond.class-code,
                           "cred-period",
                           tt-loan-cond.cred-period)
      mNameIntPeriod = 
         GetDomainCodeName(tt-loan-cond.class-code,
                           "int-period",
                           tt-loan-cond.int-period)
      mNameDischType = 
         GetBufferValue("disch-type",
                        "where disch-type = " + STRING(tt-loan-cond.disch-type),
                        "name")
      mPartition = GetXattrEx(iClass,"Partition","Initial") /* Раздел печати */
      rid-t      = Rowid2Recid("loan-cond",tt-loan-cond.local__rowid)
                      WHEN iMode = {&MOD_EDIT} OR
                           iMode = {&MOD_VIEW}
      rid-p      = Rowid2Recid("loan",tt-uploan.local__rowid)
                      WHEN iMode = {&MOD_EDIT} OR
                           iMode = {&MOD_VIEW}
   .
   IF    iMode = {&MOD_ADD} 
      AND tt-loan-cond.shemaplat$  
      AND NOT AVAIL last-cond
   THEN
      tt-loan-cond.kollw#gtper$ = 0.
   mCountPer = tt-loan-cond.kollw#gtper$.
   FIND FIRST loan-cond WHERE
              loan-cond.contract  = tt-uploan.contract
          AND loan-cond.cont-code = tt-uploan.cont-code
          AND loan-cond.since     > tt-loan-cond.since
   NO-LOCK NO-ERROR.
   mLastCond = NOT (AVAIL last-cond AND last-cond.since GT tt-loan-cond.since).
   IF AVAIL last-cond AND iMode = {&MOD_ADD} THEN
      ASSIGN
         tt-loan-cond.PayType = "Погашение"
         tt-loan-cond.PaySum = 0.
      /* здесь затычка для кривых 1-х условий с ? в сумме условия */
   IF       NOT AVAIL last-cond
        AND tt-loan-cond.PaySum EQ ? 
        AND (   iMode EQ {&MOD_EDIT} 
             OR iMode EQ {&MOD_VIEW}
            ) THEN
      ASSIGN
         tt-loan-cond.PayType = "Выдача"
         tt-loan-cond.PaySum = tt-term-amt.amt-rub
      .
   
   IF     iMode EQ {&MOD_ADD}
      AND tt-loan-cond.Cred-Period EQ "П"
      AND CAN-FIND(FIRST loan-cond WHERE
                         loan-cond.contract  EQ tt-uploan.contract
                     AND loan-cond.cont-code EQ tt-uploan.cont-code
                     AND loan-cond.since     LT tt-loan-cond.since
                   NO-LOCK) THEN
      ASSIGN
         tt-loan-cond.PayType = "Остаток"
         tt-loan-cond.PaySum = tt-term-amt.amt-rub
      .
      
   IF tt-loan-cond.PaySum EQ ? THEN
      tt-loan-cond.PaySum = 0.00.
   IF tt-loan-cond.shemaplat$   THEN
   DO:
      mPrevSumma = DEC(GetXAttrValueEx("loan-cond", 
                                       mSurrLastCond, 
                                       "АннуитПлат", 
                                       "0")
                       ) NO-ERROR.

      mEnableEndDate = IF iMode = {&MOD_ADD} 
                       THEN YES
                       ELSE mLastCond.
      IF iMode = {&MOD_VIEW} OR
         iMode = {&MOD_EDIT} THEN
      DO:
          mStr = GetInstanceProp(mInstance,"end-date").
         IF {assigned mStr} THEN
             mCondDate = DATE(mStr).

      END.
   END.

   mPrevEndDate = tt-uploan.end-date.

   /* Обработаем случай технических условий, введенных роботом, в чати просмотра поля "ОснДолг" */
   IF NOT CAN-FIND(FIRST term-obl WHERE term-obl.contract  EQ tt-loan-cond.contract
                                    AND term-obl.cont-code EQ tt-loan-cond.cont-code
                                    AND term-obl.idnt      EQ 2
                                    AND term-obl.end-date  EQ tt-loan-cond.since) THEN
   DO:
      FIND LAST plterm-obl WHERE plterm-obl.contract  EQ tt-loan-cond.contract
                             AND plterm-obl.cont-code EQ tt-loan-cond.cont-code
                             AND plterm-obl.idnt      EQ 2
                             AND plterm-obl.end-date  LE tt-loan-cond.since
      NO-LOCK NO-ERROR.
      IF AVAIL plterm-obl THEN
         tt-term-amt.amt-rub = plterm-obl.amt-rub.
   END.
   IF tt-loan-cond.grperiod$ EQ ? THEN
      tt-loan-cond.grperiod$ = NO.
      
      /* установим валюту комиссии, если не установлена */
   FOR EACH tt-comm-rate:
      /* если комиссия есть, а валюта не задана (ДР "comm-rate-curr"),
      ** значит, она в баз.валюте (т.к. пустое значение в ДР не сохраняется)*/
      IF tt-comm-rate.comm-rate-curr EQ ? THEN
         tt-comm-rate.comm-rate-curr = "".
   END.
   mKomisNacVal = FGetSetting("КомисНацВал","",?).
 
   /* Обработка ошибок */
CATCH vError AS Progress.Lang.Error:
   RUN Fill-SysMes IN h_tmess ("", "", "", "Ошибка инициализации формы!" + CHR(10) + vError:GetMessage(1)).
   DELETE OBJECT vError.
END CATCH.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE PostSetObject TERMINAL-SIMULATION 
PROCEDURE PostSetObject :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF VAR vH            AS HANDLE  NO-UNDO.
   DEF VAR vRow          AS ROWID   NO-UNDO.
   DEF VAR vRecLoan      AS RECID   NO-UNDO.
   DEF VAR vRecCond      AS RECID   NO-UNDO.
   DEF VAR vOk           AS LOG     NO-UNDO.
   DEF VAR vRet          AS CHAR    NO-UNDO.
   DEF VAR vChangeSumm   AS LOG     NO-UNDO.
   DEF VAR vChangePr     AS LOG     NO-UNDO.
   DEF VAR vChangeDate   AS LOG     NO-UNDO.
   DEF VAR vChangePer    AS LOG     NO-UNDO.
   DEF VAR vNn           AS INT64     NO-UNDO.
   DEF VAR vCondCount    AS INT64     NO-UNDO.
   DEF VAR vProlStat     AS CHAR    NO-UNDO. /* Значение НП ПролСтат */
   DEF VAR vProlOb       AS CHAR    NO-UNDO. /* Значение НП ПролОб   */
   DEF VAR vCheckLimit   AS CHAR    NO-UNDO.
   DEF VAR vPayDateMove  AS CHAR    NO-UNDO. /* ДР РасчОкончСдвиг */
   DEF VAR vSummaDog     AS CHAR    NO-UNDO. /* ДР  СуммаДог */
   DEF VAR vDblAnnSince  AS DATE    NO-UNDO.
   DEF VAR vRecalcAnn    AS LOGICAL NO-UNDO.
   DEF VAR vLCRecNew     AS RECID   NO-UNDO.
   DEF VAR vLCSummNew    AS DEC     NO-UNDO.
   DEF VAR vCnt          AS INT64   NO-UNDO.
   
   DEF BUFFER xpro-obl    FOR pro-obl.
   DEF BUFFER loan-cond   FOR loan-cond. /* Локализация буфера. */
   DEF BUFFER b-loan      FOR loan.
   DEF BUFFER b-loan-cond FOR loan-cond.
   DEF BUFFER bb-loan-cond FOR loan-cond.
   DEF BUFFER xterm-obl   FOR term-obl.
   DEF BUFFER term-obl    FOR term-obl.

   RELEASE tt-comm-rate.
   RUN SetInstanceProp(iInstance,"__mode",{&MOD_EDIT},OUTPUT vOK) NO-ERROR.
   RUN SetInstance(tt-uploan.class-code,iInstance,OUTPUT vOk).
   IF vOk <> YES THEN 
   DO:
      mRetVal = {&RET-ERROR}.
      RETURN ERROR "Ошибка сохранения условий".
   END.
   IF tt-uploan.contract = "factor" THEN
   DO:
      IF iMode = {&MOD_ADD} AND 
         CAN-DO("factor_agr,factor_deb",tt-uploan.alt-contract) THEN
      DO:
         MESSAGE "Скопировать условие на " + (IF tt-uploan.alt-contract = "factor_agr" THEN "всех дебиторов и их требования" ELSE "все требования дебитора")
            VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO
            TITLE "" UPDATE choice AS LOGICAL.
         IF choice = YES THEN
         DO:
            IF tt-uploan.alt-contract = "factor_agr" THEN
            DO:
               FOR EACH loan WHERE 
                  loan.parent-contract EQ tt-uploan.contract AND
                  loan.parent-cont-code EQ tt-uploan.cont-code 
                  NO-LOCK:
                  IF NOT CAN-FIND(loan-cond WHERE 
                                  loan-cond.contract = loan.contract AND 
                                  loan-cond.cont-code = loan.cont-code AND
                                  loan-cond.since = tt-loan-cond.since) THEN
                  DO:
                     CREATE loan-cond.
                     BUFFER-COPY tt-loan-cond  EXCEPT contract cont-code TO loan-cond 
                        ASSIGN
                           loan-cond.contract = loan.contract
                           loan-cond.cont-code = loan.cont-code
                        .
                     FOR EACH tt-comm-rate NO-LOCK:
                        CREATE comm-rate.
                        BUFFER-COPY tt-comm-rate EXCEPT kau comm-rate-id TO comm-rate 
                           ASSIGN comm-rate.kau = loan.contract + "," + loan.cont-code.
                     END.
                  END.
               END.
            END.
            ELSE
            DO:
               FOR EACH loan WHERE 
                  loan.alt-contract EQ 'factor' AND
                  loan.class-code EQ 'loan_factor' AND 
                  loan.contract EQ 'factor' AND
                  loan.parent-cont-code EQ tt-uploan.parent-cont-code AND 
                  loan.parent-contract EQ tt-uploan.parent-contract AND 
                  loan.warr-id = tt-uploan.warr-id NO-LOCK:
                  IF NOT CAN-FIND(loan-cond WHERE 
                                  loan-cond.contract = loan.contract AND 
                                  loan-cond.cont-code = loan.cont-code AND
                                  loan-cond.since = tt-loan-cond.since) THEN
                  DO:
                     CREATE loan-cond.
                     BUFFER-COPY tt-loan-cond  EXCEPT contract cont-code TO loan-cond 
                        ASSIGN
                           loan-cond.contract = loan.contract
                           loan-cond.cont-code = loan.cont-code
                        .
                     FOR EACH tt-comm-rate NO-LOCK:
                        CREATE comm-rate.
                        BUFFER-COPY tt-comm-rate EXCEPT kau comm-rate-id TO comm-rate 
                           ASSIGN comm-rate.kau = loan.contract + "," + loan.cont-code.
                     END.
                  END.
               END.
            END.
         END.
      END.
   END.
   ELSE
   DO:
      /* определяем, надо ли учитывать сдвиг даты платежа 
      ** для расчета даты окончания пробега */
      IF iMode EQ {&MOD_ADD} AND
         tt-loan-cond.cred-mode = "ДатаОконч" AND 
         NOT tt-loan-cond.cred-curr-next 
      THEN DO:
         vPayDateMove = GetXattrInit(tt-loan-cond.class-code, "РасчОкончСдвиг").
         IF vPayDateMove NE ? AND
            vPayDateMove NE "" 
         THEN DO:
            UpdateSignsEx(tt-loan-cond.class-code,
                          tt-loan-cond.contract + ","
                        + tt-loan-cond.cont-code + ","
                        + STRING (tt-loan-cond.since),
                          "РасчОкончСдвиг",
                          vPayDateMove
                          ) .
         END.
      END.

      /* Запуск графика */
      vH = GetProperty(iInstance,"__rowid","").
      vRow = vH:BUFFER-VALUE.
      vRecLoan = Rowid2Recid("Loan",vRow).
      vH = GetProperty(mInstance,"__rowid","").
      vRow = vH:BUFFER-VALUE.
      vRecCond = Rowid2Recid("Loan-Cond",vRow).

      RUN SetSysConf IN h_base(
         "ОБЯЗАТЕЛЬСТВА ПО ВОЗВРАТУ СДВИГ",
         STRING(LOOKUP(tt-loan-cond.cred-offset,tt-loan-cond.cred-offset:LIST-ITEMS IN FRAME {&MAIN-FRAME}))).
      RUN SetSysConf IN h_base(
         "ПЛАТЕЖИ ПО ПРОЦЕНТАМ СДВИГ",
         STRING(LOOKUP(tt-loan-cond.int-offset,tt-loan-cond.int-offset:LIST-ITEMS))).
      RUN SetSysConf IN h_base("СделкаММ","Да").


      IF iMode EQ {&MOD_ADD} THEN ASSIGN
         vChangeSumm = YES
         vChangePr   = YES
         vChangePer  = YES
      .
      ELSE ASSIGN
         vChangeSumm =    mAmount   NE tt-term-amt.amt-rub
                       OR mKredPlat NE tt-loan-cond.kredplat$
         vChangePr   = 
            mCredPeriod NE tt-loan-cond.Cred-Period OR
            mCredDate NE tt-loan-cond.Cred-Date OR
            mDelay1 NE tt-loan-cond.Delay1 OR
            mCredOffset NE (IF tt-loan-cond.cred-offset EQ {&CB-NONE} THEN "" ELSE tt-loan-cond.cred-offset) OR
            mCountPer NE tt-loan-cond.kollw#gtper$ OR 
            mAnnSumm NE tt-loan-cond.annuitplat$ OR
            mChangeMonth
            OR mCredMode         NE tt-loan-cond.cred-mode
            OR mDateDelay        NE tt-loan-cond.DateDelay
            OR mCredCurrNext     NE tt-loan-cond.cred-curr-next
            OR mDelayOffset      NE delay-offset_
            OR mCredWorkCalend   NE tt-loan-cond.cred-work-calend

         vChangePer =   mIntPeriod  NE tt-loan-cond.int-Period 
                     OR mIntDate    NE tt-loan-cond.int-Date
                     OR mIntOffset  NE (IF tt-loan-cond.int-offset EQ {&CB-NONE} THEN "" ELSE tt-loan-cond.int-offset)
                     OR mIntMode    NE tt-loan-cond.int-mode
                     OR mDelay      NE tt-loan-cond.delay
                     OR mDateDelayInt NE tt-loan-cond.DateDelayInt
                     OR mIntCurrNext  NE tt-loan-cond.int-curr-next
                     OR mIntWorkCalend NE tt-loan-cond.int-work-calend
                     OR mDelayOffsetInt NE delay-offset-int_

      .
      vChangeDate = mEndDate NE tt-uploan.end-date.
         /* Непонятно, почему у нас не используется обработка этого ДР через агрегацию */
      FOR EACH tt-comm-rate NO-LOCK:
         UpdateSignsEx("comm-rate-loan",
                       GetSurrogateBuffer("comm-rate", (BUFFER tt-comm-rate:HANDLE)),
                       "МинЗнач",
                       STRING(tt-comm-rate.min_value)
            ) .     
      END.

      /* IT */
      FOR EACH tt-comm-cond
         WHERE tt-comm-cond.FloatType :
          UpdateSignsEx("comm-cond",
                         tt-uploan.contract      + "," +
                         tt-uploan.cont-code     + "," +
                         tt-comm-cond.commission + "," +
                         STRING(tt-loan-cond.since),
                         "NegBaseRate",
                         tt-comm-cond.NegBaseRate).
      END.

      FOR EACH loan-cond WHERE loan-cond.contract  EQ tt-loan-cond.contract
                              AND loan-cond.cont-code EQ tt-loan-cond.cont-code
      NO-LOCK:
         vCondCount = vCondCount + 1.
      END.
      
      /* Копируем все ID записей пролонгаций, привязанных к данному договору */
      /* при этом отмечаем последнюю пролонгацию */
      FIND LAST xterm-obl NO-LOCK WHERE 
                xterm-obl.contract  EQ tt-loan-cond.contract  AND
                xterm-obl.cont-code EQ tt-loan-cond.cont-code AND
                xterm-obl.idnt      EQ 3 NO-ERROR.
      FOR EACH pro-obl NO-LOCK WHERE
           pro-obl.contract  EQ tt-loan-cond.contract  AND
           pro-obl.cont-code EQ tt-loan-cond.cont-code AND
           pro-obl.idnt      EQ 3:
           CREATE ttpro-obl.
           ASSIGN
              ttpro-obl.trow   = ROWID(pro-obl)
              ttpro-obl.fllast = (IF pro-obl.n-end-date EQ xterm-obl.end-date THEN TRUE
                                  ELSE FALSE).
      END.
      FIND FIRST loan WHERE RECID(loan) EQ vRecLoan NO-LOCK NO-ERROR .
      IF tt-uploan.class-code = "loan_dbl_ann"  THEN
      DO:
         IF iMode EQ {&MOD_ADD} OR iMode EQ {&MOD_EDIT} THEN DO:

            RUN DeleteOldDataProtocol IN h_base("Реструктуризация").

            FIND FIRST loan-cond WHERE RECID(loan-cond) EQ vRecCond NO-LOCK NO-ERROR.
               /* удаляем автоматические условия */
            blc:
            FOR EACH b-loan-cond WHERE
                     b-loan-cond.contract  EQ loan.contract
                 AND b-loan-cond.cont-code EQ loan.cont-code
                 AND b-loan-cond.since     GT loan-cond.since
            NO-LOCK :
                IF GetXattrValue("loan-cond",
                                 b-loan-cond.contract + ","
                                 + b-loan-cond.cont-code + ","
                                 + STRING (b-loan-cond.since),
                                 "AutoCond")  EQ "Да"
                THEN DO:
                   {profind.i 
                      &FWAY=FIRST &FBUF=bb-loan-cond &FLOCK=EXCLUSIVE &FNOER=TRUE
                      &FCOND="WHERE RECID(bb-loan-cond) = RECID(b-loan-cond)"}
                   IF AVAIL  bb-loan-cond THEN DO:                  
                          /* то что делаеться при ручном удалении условия */
                       RUN lc-dell.p(bb-loan-cond.contract,
                                     bb-loan-cond.cont-code ,
                                     bb-loan-cond.since
                                     ).
                       DELETE bb-loan-cond.
                   END.
                   LEAVE blc.
                END.
            END.

            RUN mm-to.p(vRecLoan,
                         vRecCond,
                         tt-term-amt.amt-rub,
                         iMode,
                         vChangeSumm,
                         vChangePr  ,
                         vChangeDate,
                         vChangePer,
                         ?,
                         vCondCount) NO-ERROR.
            vRet = RETURN-VALUE.

            /* определяем дату начала второго условия */
            RUN GetDateDblAnn(loan.contract, loan.cont-code, loan-cond.since, OUTPUT vDblAnnSince).

            /* Создаем, если нужно, автоматическое условие  */
            IF tt-loan-cond.since < vDblAnnSince THEN DO:            
                IF tt-loan-cond.since > tt-uploan.open-date
                    AND tt-loan-cond.PayType:SCREEN-VALUE = "ДосрПогаш" THEN 
                DO:
                    MESSAGE "Пересчитывать сумму аннуитетного платежа периода увеличения?"
                        VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO
                        TITLE "" UPDATE choice1 AS LOGICAL.
                    vRecalcAnn = choice1.
                END.
                ELSE vRecalcAnn = YES.
                RUN Cr_Cond_DblAnn IN h_Loan (loan.contract, 
                                              loan.cont-code, 
                                              loan-cond.since, 
                                              YES, 
                                              vRecalcAnn,
                                              vDblAnnSince,
                                              OUTPUT vLCRecNew,  
                                              OUTPUT vLCSummNew) NO-ERROR.
                IF ERROR-STATUS:ERROR THEN DO: 
                     vRet = RETURN-VALUE.
                END.
            END.          
         END.
        
      END.
      ELSE DO:          
         IF tt-loan-cond.class-code EQ "an-pkm" THEN 
         DO:
            /* перенос графиков */                      
            RUN loansvodgr.p(tt-loan-cond.contract,ENTRY(1,tt-loan-cond.cont-code," "),tt-loan-cond.since,"get").
            /* для каждого транша */ 
            FOR EACH b-loan WHERE (b-loan.contract  EQ tt-loan-cond.contract
                               AND b-loan.cont-code BEGINS ENTRY(1,tt-loan-cond.cont-code," ") + " "
                               AND NUM-ENTRIES(b-loan.cont-code," ") GT 1)
                              OR  (b-loan.contract  EQ tt-loan-cond.contract
                               AND b-loan.cont-code EQ ENTRY(1,tt-loan-cond.cont-code," "))
                NO-LOCK,
                LAST b-loan-cond WHERE b-loan-cond.contract  EQ b-loan.contract
                                   AND b-loan-cond.cont-code EQ b-loan.cont-code
                NO-LOCK BY NUM-ENTRIES(b-loan.cont-code," ") DESC: 
                     
               /* считаем кол-во условий на течении */
               vCondCount = 0.               
               FOR EACH loan-cond WHERE
                        loan-cond.contract  = b-loan.contract
                    AND loan-cond.cont-code = b-loan.cont-code
               NO-LOCK:
                  vCondCount = vCondCount + 1.
               END.
               IF NUM-ENTRIES(b-loan.cont-code, " ") EQ 1 THEN
                  RUN SetSysConf IN h_Base("НЕ ВЫВОДИТЬ ГРАФИКИ НА ЭКРАН","ДА").
               IF     NUM-ENTRIES(b-loan.cont-code, " ") GT 1 
                  AND b-loan.cont-code NE tt-loan-cond.cont-code THEN
                   FIND FIRST term-obl OF b-loan WHERE term-obl.idnt EQ 2 NO-LOCK NO-ERROR.
               /* пересчет графиков */                                         
               RUN mm-to.p(RECID(b-loan),
                           RECID(b-loan-cond),
                           (IF b-loan.cont-code EQ tt-loan-cond.cont-code OR NOT AVAIL term-obl THEN tt-term-amt.amt-rub else term-obl.amt-rub),
                           (IF b-loan.cont-code EQ tt-loan-cond.cont-code THEN iMode ELSE {&MOD_EDIT}),
                           vChangeSumm,
                           vChangePr  ,
                           vChangeDate,
                           vChangePer,
                           ?,
                           vCondCount) NO-ERROR.
               IF NUM-ENTRIES(b-loan.cont-code, " ") EQ 1 THEN
                  RUN DeleteOldDataProtocol IN h_Base("НЕ ВЫВОДИТЬ ГРАФИКИ НА ЭКРАН").
               vRet = RETURN-VALUE.
            END.
            /* снова прячем наши графики и делаем сводные графики по %% и ОД, разноску по траншам */
            RUN loansvodgr.p(tt-loan-cond.contract,ENTRY(1,tt-loan-cond.cont-code," "),tt-loan-cond.since,"set").
         END.
         ELSE
         CLCGRAPH_P: 
         DO:
            IF     tt-loan-cond.cred-period EQ "П" 
               AND FGetSetting("ПересчПроизв",?,"") EQ "Да" THEN
            DO:
               vCnt = 0.
               TERMOBL:
               FOR EACH term-obl WHERE
                        term-obl.contract  EQ tt-uploan.Contract
                    AND term-obl.cont-code EQ tt-uploan.Cont-Code
                    AND term-obl.idnt      EQ 3 
               NO-LOCK:
                  vCnt = vCnt + 1.
                  IF vCnt GE 2 THEN
                     LEAVE TERMOBL. 
               END.
               
               IF vCnt GE 2 THEN
               DO:
                  RUN Fill-SysMes IN h_tmess ("", "", "3",
                                              "В графике платежей более одной записи." +
                                              "|Оставить его без изменений,Перестроить").
                  IF pick-value EQ "1" THEN
                     LEAVE CLCGRAPH_P.
               END.
            END.

            RUN mm-to.p(vRecLoan,
                        vRecCond,
                        tt-term-amt.amt-rub,
                        iMode,
                        vChangeSumm,
                        vChangePr  ,
                        vChangeDate,
                        vChangePer,
                        ?,
                        vCondCount) NO-ERROR.
            vRet = RETURN-VALUE.
         END.
                           
          RUN SaveGraphToHistory IN h_loan (tt-uploan.Contract,
                                            tt-uploan.Cont-Code,
                                            tt-loan-cond.since,
                                            if iMode EQ {&MOD_ADD} then "ВВУСЛ" else "РУСЛ",
                                            (if iMode EQ {&MOD_ADD} then "Ввод нового условия :" else "Редактирование условия:") + tt-loan-cond.contract + "," + tt-loan-cond.cont-code + "," + STRING(tt-loan-cond.since),
                                             NO,
                                             ?,
                                             NO,
                                             OUTPUT mErrSaveHist).

          IF mErrSaveHist THEN
          DO:
             RUN Fill-SysMes IN h_tmess ("","","1", "Возникли ошибки при сохранинии графика в историю").
             RETURN {&RET-ERROR}.
          END.
      
         /* Находим охватывающий договор */
         FIND FIRST loan WHERE loan.contract  EQ tt-loan-cond.contract
                           AND loan.cont-code EQ ENTRY(1, tt-loan-cond.cont-code, " " )
         NO-LOCK NO-ERROR.
         vCheckLimit = GetXAttrValueEx("loan",
                                       loan.contract + "," + loan.cont-code,
                                       "CheckLimit",
                                       ?).
         IF NOT {assigned vCheckLimit} THEN
            vCheckLimit = GetXattrInit(loan.class-code, "CheckLimit").
         IF vCheckLimit EQ ? THEN
            vCheckLimit = "Да".
         /* Если требуется производим проверки лимита  */
         IF     GetXAttrValueEx("loan",
                                tt-uploan.contract + "," + ENTRY(1,tt-uploan.cont-code," "),
                                "Режим",
                               ?) NE ?
            AND vCheckLimit EQ "Да" THEN
         DO:
             {limverl.i tt-uploan tt-loan-cond.since tt-uploan.end-date }
             {limverl.i tt-uploan tt-uploan.end-date tt-uploan.end-date }
         END.
         RUN DeleteOldDataProtocol IN h_base("ПЛАТЕЖИ ПО ПРОЦЕНТАМ СДВИГ").
         RUN DeleteOldDataProtocol IN h_base("ОБЯЗАТЕЛЬСТВА ПО ВОЗВРАТУ СДВИГ").
         RUN DeleteOldDataProtocol IN h_base("СделкаММ").
         IF vRet EQ {&RET-ERROR} THEN
         DO:
            mRetVal = {&RET-ERROR}.
            RETURN ERROR "Ошибка сохранения условий".
         END.
      END.
   
         /* Если условие типа пролонгация, создаем запись pro-obl */
      IF mProlong
      THEN DO:
         FIND FIRST pro-obl WHERE
                    pro-obl.contract  EQ tt-loan-cond.contract
                AND pro-obl.cont-code EQ tt-loan-cond.cont-code
                AND pro-obl.idnt      EQ 3
                AND pro-obl.pr-date   EQ tt-loan-cond.since
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE pro-obl THEN
         DO:
            FIND LAST term-obl WHERE 
                      term-obl.contract  EQ tt-uploan.contract 
                  AND term-obl.cont-code EQ tt-uploan.cont-code 
                  AND term-obl.idnt      EQ 3 
            NO-LOCK NO-ERROR.
            IF NOT AVAILABLE term-obl THEN
               RETURN ERROR "Не найдено плановых платежей, невозможно создать пролонгацию".

               /* Создание записи пролонгации */
            CREATE pro-obl.

               /* Поиск пролонгации по редактируемому обязательству */
            FIND LAST xpro-obl USE-INDEX nn WHERE xpro-obl.contract  EQ term-obl.contract 
                                              AND xpro-obl.cont-code EQ term-obl.cont-code 
                                              AND xpro-obl.idnt      EQ 3
            NO-LOCK NO-ERROR.

               /* Формирование порядкового номера пролонгации */
            vNn = IF AVAIL xpro-obl THEN xpro-obl.nn + 1
                                    ELSE 1.

               /* Формирование записи пролонгации */
            DO ON ERROR UNDO, RETRY:

               IF RETRY THEN 
                  vNn = vNn + 1.

               ASSIGN
                  pro-obl.contract  = term-obl.contract
                  pro-obl.cont-code = term-obl.cont-code
                  pro-obl.idnt      = 3
                  pro-obl.nn        = vNn
               .
            END.

            ASSIGN
                  /* Дата окончания обязательства до пролонгации */
               pro-obl.end-date   = mPrevEndDate
                  /* NN пролонгирванного обязательства */
               pro-obl.new-nn     = term-obl.nn    
                  /* Новый срок окончания срочного обязательства */
               pro-obl.n-end-date = term-obl.end-date
                  /* Дата пролонгации */
               pro-obl.pr-date    = tt-loan-cond.since
            .

             UpdateSigns (
               "pro-obl" ,
               GetSurrogateBuffer("pro-obl",(BUFFER pro-obl:HANDLE)),
               "Class-Code",
               "pro-obl-dog",
               NO
               ) .
             /* Анализируем пролонгации, которые необходимо перенести с предыдущего условия */
             FOR EACH ttpro-obl:
                FIND FIRST xpro-obl WHERE
                     ROWID(xpro-obl) EQ ttpro-obl.trow 
                NO-LOCK NO-ERROR.
                /* если последняя запись предыдущего условия, то перепривязываем */
                IF ttpro-obl.fllast THEN DO:
                   IF AVAIL xpro-obl THEN do:
                      {profind.i 
                      &FWAY=CURRENT &FBUF=xpro-obl &FLOCK=EXCLUSIVE &FNOER=TRUE}
                   IF AVAIL xpro-obl THEN
                      xpro-obl.n-end-date = term-obl.end-date.
                END.
                END.
                ELSE DO:
                    /* если нет записи в графике с соотв. датой для пролонгации */
                   IF NOT CAN-FIND(FIRST xterm-obl WHERE 
                                         xterm-obl.contract  EQ xpro-obl.contract  AND
                                         xterm-obl.cont-code EQ xpro-obl.cont-code AND
                                         xterm-obl.idnt      EQ xpro-obl.idnt      AND
                                         xterm-obl.end-date  EQ xpro-obl.n-end-date) THEN DO:
                      {profind.i 
                          &FWAY=CURRENT &FBUF=xpro-obl &FLOCK=EXCLUSIVE &FNOER=TRUE}
                      IF AVAIL xpro-obl THEN 
                         DELETE xpro-obl.
                   END.
                END.                     
            END.

               /* Когда все проверили и создали/изменили, меняем статус договора */
            vProlStat = FGetSetting("Пролонг", "ПролСтат", ?).
            IF     vProlStat <> ? 
               AND vProlStat <> "" THEN
            DO:
               IF Chkstat(tt-uploan.Class-Code, vProlStat) THEN
               DO:
                  {profind.i 
                      &FWAY=FIRST &FBUF=loan &FLOCK=EXCLUSIVE &FNOER=TRUE
                      &FCOND="WHERE loan.contract  EQ tt-uploan.contract 
                                AND loan.cont-code EQ tt-uploan.cont-code"}
                  IF AVAIL loan THEN
                     loan.loan-status = vProlStat.
               END.
               ELSE
                  RUN Fill-SysMes IN h_tmess ("", "", "1",
                                              "Для данного класса договора " + tt-uploan.class-code +
                                              " отсутствует статус " + vProlStat + ". Статус не изменен.").
            END.
               /* Теперь пролонгируем договора обеспечения */
            vProlOb = FGetSetting("Пролонг", "ПролОб", "").
            IF vProlOb EQ "Все" THEN
            DO:
                  /* Идем по всем обеспечениям */
               FOR EACH term-obl WHERE 
                        term-obl.contract  EQ tt-uploan.contract
                  AND   term-obl.cont-code EQ tt-uploan.cont-code
                  AND   term-obl.idnt      EQ 5
               EXCLUSIVE-LOCK:
                     /* Меняем дату окончания на новую */
                  term-obl.end-date = tt-uploan.end-date.
               END.
            END.
   
            IF vProlOb EQ "Совпадающие" THEN
            DO:
                  /* Идем по обеспечениям договора, у которых дата окончания совпадает с датой окончания договора до пролонгации */
               FOR EACH term-obl WHERE 
                        term-obl.contract  EQ tt-uploan.contract
                  AND   term-obl.cont-code EQ tt-uploan.cont-code
                  AND   term-obl.idnt      EQ 5
                  AND   term-obl.end-date  EQ mPrevEndDate
               EXCLUSIVE-LOCK:
                     /* Меняем дату окончания на новую */
                  term-obl.end-date = tt-uploan.end-date.
               END.
            END.
         END.
      END.
   END.

      /* Сохранение лимитов для выдачи  */
   IF    iMode EQ {&MOD_ADD} 
     AND tt-uploan.rewzim$:SCREEN-VALUE EQ "ЛимВыдЗад" THEN
   DO:      
      RUN SaveLoanLimit                     (tt-uploan.contract,tt-uploan.cont-code,tt-loan-cond.since,tt-uploan.currency,"limit-l-distr",mLimit,OUTPUT vOk).
      RUN SaveLoanLimitLastCond IN h_limit  (tt-uploan.contract,tt-uploan.cont-code,tt-uploan.LimitGrafDate,tt-uploan.currency,"limit-l-distr",OUTPUT vOk).
      IF NOT vOk THEN
         RUN Fill-SysMes IN h_tmess ("","","0","Возникла ошибка при сохранении лимита выдачи. Лимит не сохранен.").
   END.

   IF    iMode EQ {&MOD_ADD}
     AND tt-uploan.rewzim$:SCREEN-VALUE EQ "ВозобнЛиния" THEN
   DO:
      RUN SaveLoanLimit (tt-uploan.contract,tt-uploan.cont-code,tt-loan-cond.since,tt-uploan.currency,"limit-l-debts",mLimit,OUTPUT vOk).
      RUN SaveLoanLimitLastCond IN h_limit  (tt-uploan.contract,tt-uploan.cont-code,tt-uploan.LimitGrafDate,tt-uploan.currency,"limit-l-debts",OUTPUT vOk).
      IF NOT vOk THEN
         RUN Fill-SysMes IN h_tmess ("","","0","Возникла ошибка при сохранении лимита задолженности. Лимит не сохранен.").
   END.

   IF    iMode EQ {&MOD_ADD}
     AND tt-uploan.rewzim$:SCREEN-VALUE EQ "НевозЛиния" THEN
   DO:
      RUN SaveLoanLimit (tt-uploan.contract,tt-uploan.cont-code,tt-loan-cond.since,tt-uploan.currency,"limit-l-distr",mLimit,OUTPUT vOk).
      RUN SaveLoanLimitLastCond IN h_limit  (tt-uploan.contract,tt-uploan.cont-code,tt-uploan.LimitGrafDate,tt-uploan.currency,"limit-l-distr",OUTPUT vOk).
      IF NOT vOk THEN
         RUN Fill-SysMes IN h_tmess ("","","0","Возникла ошибка при сохранении лимита выдачи. Лимит не сохранен.").
   END.

      /* Если менялась ставка %МинОД */
   FIND FIRST tt-comm-rate WHERE
              tt-comm-rate.commission EQ "%МинОД"
   NO-ERROR.
   IF     AVAIL tt-comm-rate
      AND tt-comm-rate.rate-comm NE mMinODChange THEN
      /* Производим пересчет графиков по траншам */
   RUN tr-grcre.p (tt-loan-cond.contract,    /* Назначение охватывающего договора */
                   tt-loan-cond.cont-code,   /* Номер охватывающего договора */
                   tt-loan-cond.since).      /* На дату */
   RELEASE tt-comm-rate.

      /* Для сводных графиков */
   IF    (iMode EQ {&MOD_ADD} OR iMode EQ {&MOD_EDIT}) 
      AND NUM-ENTRIES(tt-loan-cond.cont-code, " ") GT 1 THEN
   DO:
      FIND FIRST b-loan WHERE
                 b-loan.contract  EQ tt-loan-cond.contract
         AND     b-loan.cont-code EQ ENTRY(1, tt-loan-cond.cont-code, " ")
      NO-LOCK NO-ERROR.
      IF     AVAIL b-loan 
         AND b-loan.class-code NE "loan-transh-ann" THEN
      DO:
         IF GetXAttrValue("loan", b-loan.contract + "," + b-loan.cont-code, "СводГрАвто") EQ "Да" THEN
         DO:
               /* Проверка графика и формирование временных таблиц для разноски по траншам */
            RUN CheckTermCorr (b-loan.contract,
                               b-loan.cont-code,
                               OUTPUT vOK).
               /* Если все ОК, тогда запускаем копирование разнесенного по траншам графика из временных 
               ** таблиц в настоящие графики траншей. Предварительно с траншей удаляются старые графики */
            IF vOK THEN
            DO:
               RUN DividTermSumm (b-loan.contract,
                                  b-loan.cont-code) 
               NO-ERROR.
                  /* Обработка ошибок создания графиков */
               IF    ERROR-STATUS:ERROR
                  OR RETURN-VALUE NE "" THEN
                  RUN Fill-SysMes IN h_tmess ("", "", "-1", RETURN-VALUE).
               ELSE
                  RUN Fill-SysMes IN h_tmess ("", "", "0", 
                                              "Разноска графика завершена.").
            END.
         END.
      END.
   END.  /* Для сводных графиков */
   FIND FIRST bloan-cond WHERE
              bloan-cond.contract EQ tt-loan-cond.contract
          AND bloan-cond.cont-code EQ tt-loan-cond.cont-code
          AND bloan-cond.since LT tt-loan-cond.since          
   NO-LOCK NO-ERROR.
   /*Если редактироктировалось первое условие(тоесть с более ранней датой нет условий)*/
   IF NOT AVAIL bloan-cond THEN 
   DO:       
      vSummaDog = GetXAttrValueEx("loan",tt-uploan.contract + "," + tt-uploan.cont-code,"СуммаДог","").
      
      /* И заполнен доп реквизит СуммаДог для этого договора */
      IF {assigned vSummaDog} THEN 
      DO:
         /*То сохраняем значение первого графика в допреквизите СуммаДог*/
         FIND FIRST xterm-obl WHERE
                    xterm-obl.contract  EQ tt-uploan.contract 
                AND xterm-obl.cont-code EQ tt-uploan.cont-code 
                AND xterm-obl.idnt      EQ 2 
         NO-LOCK NO-ERROR.
                         
         IF AVAIL xterm-obl THEN
            UpdateSigns(tt-uploan.Class-Code,
                        tt-uploan.contract + "," + tt-uploan.cont-code,
                        "СуммаДог",
                        STRING(xterm-obl.amt-rub),
                        ?).
      END.
   END.

   /* создание условий и пролонгации для траншей  */
   IF     iMode                              EQ {&MOD_ADD}
      AND tt-uploan.cont-type                EQ "течение" 
      AND FGetSetting("ПролСоглТр","","Нет") EQ "Да"
      AND GetXAttrValueEx("loan", 
                          tt-uploan.contract + "," + tt-uploan.cont-code,
                          "ПролАвтТр","")    EQ "Да" 
      AND tt-loan-cond.PayType               EQ "Остаток"
      AND tt-loan-cond.vidrestrukt$          EQ "ПролОбСрДог"  THEN 
      RUN ProlTranshList IN h_loan (tt-loan-cond.contract  + "," + 
                                    tt-loan-cond.cont-code + "," +
                                    STRING(tt-loan-cond.since),
                                    OUTPUT vRet).

   RUN DeleteOldDataProtocol IN h_base ("ОкруглениеДоРублей").
   RETURN.
CATCH vError AS Progress.Lang.Error:
   RUN Fill-SysMes IN h_tmess ("", "", "", "Ошибка при работе формы! Результат может быть некорректным!" + CHR(10) + vError:GetMessage(1)).
   DELETE OBJECT vError.
END CATCH.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE SetTermObl TERMINAL-SIMULATION 
PROCEDURE SetTermObl :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   mChangeMonth = NO.

   FOR EACH ttTermObl:
       ttTermObl.end-date = tt-loan-cond.since.
   END.
   
/* если месяцев исключения нет и не было, то на этом проверки завершены */
   IF NOT CAN-FIND(FIRST ttTermObl WHERE ttTermObl.idnt = 200 NO-LOCK) 
      AND tt-monthout.contract = "" THEN .              
   

   /*если были месяцы исключений, то нужно их обновить*/
   
   /* если месяцы исключений были. но теперь мы их удалили (все) */
   ELSE IF NOT CAN-FIND(FIRST ttTermObl WHERE ttTErmObl.idnt = 200 NO-LOCK)
       THEN DO:
       FOR EACH tt-monthout:
           tt-monthout.user__mode = {&MOD_DELETE}.
       END.  
       mChangeMonth = YES.
   END.

   ELSE DO:

      /* чистим таблицу меяцев исключения */
      FOR EACH tt-monthout:
         FIND FIRST ttTermObl WHERE  
                    ttTermObl.contract = tt-monthout.contract 
                AND ttTermObl.cont-code = tt-monthout.cont-code
                AND ttTermObl.end-date = tt-monthout.end-date
                AND ttTermObl.idnt = tt-monthout.idnt
                AND ttTermObl.nn = tt-monthout.nn                
             NO-ERROR.

         IF NOT AVAIL ttTermObl THEN 
             ASSIGN mChangeMonth = YES
                    tt-monthout.user__mode = {&MOD_DELETE}.          
         
         
            
      END.

      /* заполняем таблицу услуг данными из верменной таблицы */
      FOR EACH ttTermObl WHERE 
               ttTermObl.contract = tt-loan-cond.contract
           AND ttTermObl.cont-code = tt-loan-cond.cont-code
           AND ttTermObl.idnt = 200:   
    
          FIND FIRST tt-monthout WHERE 
                     tt-monthout.contract = ttTermObl.contract 
                 AND tt-monthout.cont-code = ttTermObl.cont-code
                 AND tt-monthout.end-date = ttTermObl.end-date
                 AND tt-monthout.idnt = ttTermObl.idnt
                 AND tt-monthout.nn = ttTermObl.nn                
              NO-ERROR.


          IF NOT AVAIL tt-monthout THEN
          DO:
    
              CREATE tt-monthout.
              FOR EACH b-monthout BY b-monthout.Local__Id DESC:
                 LEAVE.
              END.
              ASSIGN
                 mChangeMonth = YES
                 tt-monthout.Local__UpId = tt-loan-cond.local__Id.
                 tt-monthout.Local__Id = IF AVAIL b-monthout THEN
                                        MAX(GetInstanceId("tt-monthout"),
                                            b-monthout.Local__Id) + 1
                                        ELSE GetInstanceId("tt-monthout") + 1.
    
          END.
          /* если хоть что-то не совпадет, то месяц менялся */
          ELSE IF tt-monthout.amt-rub    <> ttTermObl.amt-rub
               OR tt-monthout.sop-date   <> ttTermObl.sop-date
               OR tt-monthout.sop        <> ttTermObl.sop 
               OR tt-monthout.sop-offbal <> ttTermObl.sop-offbal
              THEN mChangeMonth = YES.

          BUFFER-COPY ttTermObl TO tt-monthout.
          
          RELEASE tt-monthout.
    
      END.
   END.

   /* если особых месяцев нет и не было, то на этом проверки завершены */
   IF NOT CAN-FIND(FIRST ttTermObl WHERE ttTermObl.idnt = 201 NO-LOCK) 
      AND tt-monthspec.contract = "" THEN .              
   

   /*если были особые месяцы, то нужно их обновить*/
   
   /* если особые месяцы были, но теперь мы их удалили (все) */
   ELSE IF NOT CAN-FIND(FIRST ttTermObl WHERE ttTermObl.idnt = 201 NO-LOCK)
       THEN DO:
       FOR EACH tt-monthspec:
           tt-monthspec.user__mode = {&MOD_DELETE}.
       END. 
       mChangeMonth = YES.
   END.

   ELSE DO:

      /* чистим таблицу меяцев исключения */
      FOR EACH tt-monthspec:
         FIND FIRST ttTermObl WHERE  
                    ttTermObl.contract = tt-monthspec.contract 
                AND ttTermObl.cont-code = tt-monthspec.cont-code
                AND ttTermObl.idnt = tt-monthspec.idnt
                AND ttTermObl.nn = tt-monthspec.nn
             NO-ERROR.
         IF NOT AVAIL ttTermObl THEN
             ASSIGN  mChangeMonth = YES
                     tt-monthspec.user__mode = {&MOD_DELETE}
                     . 
      END.

       /* заполняем таблицу услуг данными из верменной таблицы */
       FOR EACH ttTermObl WHERE 
                ttTermObl.contract = tt-loan-cond.contract
            AND ttTermObl.cont-code = tt-loan-cond.cont-code
            AND ttTermObl.idnt = 201:   
    
          FIND FIRST tt-monthspec WHERE 
                     tt-monthspec.contract = ttTermObl.contract 
                 AND tt-monthspec.cont-code = ttTermObl.cont-code
                 AND tt-monthspec.end-date = ttTermObl.end-date
                 AND tt-monthspec.idnt = ttTermObl.idnt
                 AND tt-monthspec.nn = ttTermObl.nn                
              NO-ERROR.

          IF NOT AVAIL tt-monthspec THEN
          DO:
    
              CREATE tt-monthspec.
              FOR EACH b-monthspec BY b-monthspec.Local__Id DESC:
                 LEAVE.
              END.
              ASSIGN
                 mChangeMonth = YES
                 tt-monthspec.Local__UpId = tt-loan-cond.local__Id.
                 tt-monthspec.Local__Id = IF AVAIL b-monthspec THEN
                                        MAX(GetInstanceId("tt-monthspec"),
                                            b-monthspec.Local__Id) + 1
                                        ELSE GetInstanceId("tt-montspec") + 1.
    
          END.
          /* если хоть что-то не совпадет, то месяц менялся */
          ELSE IF tt-monthspec.amt-rub    <> ttTermObl.amt-rub
               OR tt-monthspec.sop-date   <> ttTermObl.sop-date
               OR tt-monthspec.sop        <> ttTermObl.sop 
               OR tt-monthspec.sop-offbal <> ttTermObl.sop-offbal
              THEN mChangeMonth = YES.

          BUFFER-COPY ttTermObl TO tt-monthspec.
          
          RELEASE tt-monthspec.
    
       END.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE CheckAutoTermDistrTT TERMINAL-SIMULATION 
PROCEDURE CheckAutoTermDistrTT:
/*------------------------------------------------------------------------------
  Purpose: Проверка возможности автоматической разноски платежей по траншам    
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF INPUT  PARAM iContract AS CHAR   NO-UNDO.   /* Назначение договора */
   DEF INPUT  PARAM iContCode AS CHAR   NO-UNDO.   /* Номер договора */
   DEF OUTPUT PARAM oCheckOk  AS LOG    NO-UNDO.   /* Результат */

   DEF BUFFER b-loan          FOR loan.            /* Соглашение */
   DEF BUFFER b-loan-cond     FOR loan-cond.       /* Условие соглашения */
   DEF BUFFER b-term-obl      FOR term-obl.        /* Обязательства соглашения */

   oCheckOk = TRUE.
      /* Позиционируемся на соглашении */
   FIND FIRST b-loan WHERE
              b-loan.contract  EQ iContract
      AND     b-loan.cont-code EQ ENTRY(1, iContCode, " ")
   NO-LOCK NO-ERROR.
   IF AVAIL b-loan THEN
   DO:
         /* Проверка осуществляется только при автоматической разноске графика (ДР "СводГрАвто" = "Да") */
      IF GetXAttrValue("loan", b-loan.contract + "," + b-loan.cont-code, "СводГрАвто") EQ "Да" THEN
      DO:
         bkl:
         DO:
               /* Ищем действующее условие соглашения */
            FIND LAST b-loan-cond WHERE
                      b-loan-cond.contract  EQ b-loan.contract 
               AND    b-loan-cond.cont-code EQ b-loan.cont-code
               AND    b-loan-cond.since     LE b-loan.end-date
            NO-LOCK NO-ERROR.
            IF AVAIL b-loan-cond THEN
            DO:
                  /* Не Конец срока */
               IF tt-loan-cond.cred-period:SCREEN-VALUE IN FRAME {&frame-name} NE "Кс" THEN
               DO:
                     /* 1. Проверка совпадения параметров периодичности */
                  IF    b-loan-cond.cred-period NE     tt-loan-cond.cred-period:SCREEN-VALUE IN FRAME {&frame-name}
                     OR b-loan-cond.cred-date   NE INT64(tt-loan-cond.cred-date:SCREEN-VALUE   IN FRAME {&frame-name})
                     OR b-loan-cond.cred-month  NE INT64(tt-loan-cond.cred-month:SCREEN-VALUE  IN FRAME {&frame-name}) 
                  THEN DO:
                     pick-value = "2".        /* Предустановка меню: "2" - Нет */
                     RUN Fill-SysMes IN h_tmess ("", "", "3", 
                                                 "Не совпадают параметры даты погашения ОД на соглашении и транше.~n" +
                                                 "Автоматическая разноска невозможна.~n" +
                                                 "Продолжить?:|Да,Нет").
                     oCheckOk = IF pick-value EQ "1"  
                                   THEN TRUE
                                   ELSE FALSE.
                     IF NOT oCheckOk THEN
                        LEAVE bkl.
                  END.
               END.
                  /* Конец срока */
               ELSE IF tt-loan-cond.cred-period:SCREEN-VALUE IN FRAME {&frame-name} EQ "Кс" THEN
               DO:
                     /* Ищем в графике соглашения проверяется наличие записи на дату окончания срока транша */
                  FIND FIRST b-term-obl WHERE
                             b-term-obl.contract     EQ b-loan.contract    /* Данные */
                     AND     b-term-obl.cont-code    EQ b-loan.cont-code   /* соглашения */
                     AND     b-term-obl.idnt         EQ 3
                     AND     b-term-obl.end-date     EQ DATE(tt-uploan.end-date:SCREEN-VALUE IN FRAME {&frame-name})      /* Окончание транша */
                  NO-LOCK NO-ERROR.
                     /* Не найдено - ругаемся и выходим */
                  IF NOT AVAIL b-term-obl THEN
                  DO:
                     oCheckOk = FALSE.
                     RUN Fill-SysMes IN h_tmess ("", "", "1", 
                                                 "В графике соглашения нет записи на дату окончания транша <" +
                                                 (tt-uploan.end-date:SCREEN-VALUE IN FRAME {&frame-name}) + ">.").
                     LEAVE bkl.
                  END.
               END.
            END.

         END.
      END.
   END.
END PROCEDURE. /* CheckAutoTermDistrTT */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE FillRateDef TERMINAL-SIMULATION 
PROCEDURE FillRateDef:
/*------------------------------------------------------------------------------
  Purpose: заполнение % ставок значениями "по умолчанию"   
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEF INPUT  PARAM iDate AS DATE NO-UNDO.   /* Дата ставок */

   DEF VAR vNewRate AS DEC NO-UNDO.
   DEF VAR vNewFixed AS LOG NO-UNDO.

   IF NOT mBrowseCommRateOFF THEN
   DO:      
      FOR EACH tt-comm-rate:
         IF tt-comm-rate.rate-comm EQ 0.0 THEN
         DO:
            RUN getDefaultRate IN hDefaultRate (
               'init-rate' , /* Код справочника. */
               iDate,
               tt-uploan.class-code,
               tt-uploan.currency,  
               tt-uploan.cont-type,
               tt-comm-rate.commission,
               OUTPUT vNewRate).
            IF vNewRate NE ? 
               AND vNewRate NE tt-comm-rate.rate-comm THEN
               tt-comm-rate.rate-comm = vNewRate.

            RUN getDefaultFixed IN hDefaultRate (
               'init-fixed' , /* Код справочника. */
               iDate,
               tt-uploan.class-code,
               tt-uploan.currency,
               tt-uploan.cont-type,
               tt-comm-rate.commission,
               OUTPUT vNewFixed).
            IF vNewFixed NE ?
               AND vNewFixed NE tt-comm-rate.rate-fixed THEN
               tt-comm-rate.rate-fixed = vNewFixed.
         END.
         IF tt-comm-rate.since NE iDate THEN
            tt-comm-rate.since = iDate.
      END.
      {&OPEN-QUERY-br-comm}
      br-comm:REFRESH() IN FRAME {&MAIN-FRAME}.
   END.

END PROCEDURE. /* FillRateDef */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* ************************  Function Implementations ***************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION CheckCliAcct TERMINAL-SIMULATION 
FUNCTION CheckCliAcct RETURNS LOGICAL
  ( INPUT iAcctType AS CHAR,
    INPUT iAcct AS CHAR,
    INPUT iCurr AS CHAR,
    INPUT iCat AS CHAR,
    INPUT iId AS INT64 ) :
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
   DEFINE VARIABLE vRet AS LOGICAL    NO-UNDO.
   DEFINE VARIABLE vChk AS CHARACTER  NO-UNDO.
   vChk = GetBufferValue("code",
                         "where code.class = 'ТипСчДог' and code.parent = 'ТипСчДог'" +
                         "   and code.code = '" + iAcctType + "'",
                         "misc").
   vChk = ENTRY(1,vChk,CHR(1)).
   vRet = YES.
   IF CAN-DO("Да,Yes",vChk) THEN
      vRet =  GetBufferValue("acct",
                             "where acct = '" + iAcct + "'" + 
                             "  and currency = '" + iCurr + "'" + 
                             "  and cust-cat = '" + iCat + "'" + 
                             "  and cust-id = " + STRING(iId),
                             "acct") EQ iAcct.
   RETURN vRet.
END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION GetQntPer TERMINAL-SIMULATION 
FUNCTION GetQntPer RETURNS INT64 (
   INPUT iBegDate  AS DATE, /* дата открытия договора */
   INPUT iEndDate  AS DATE, /* зата закрытия договора */
   INPUT iPayDay   AS INT64,  /* число, кот. производ. операция (только М и К) */
   INPUT iGlInt    AS CHAR, /* интервал м/у плановыми операциями */
   INPUT iCondBegD AS DATE  /* дата начала условия, используется при расчете даты при К или ПГ
                             ** если ? то отрабатывать доп.проверка не будет */
):

   DEF VAR mCurDate     AS DATE   NO-UNDO. /* очередная дата платежа */
   DEF VAR mCurDateOld  AS DATE   NO-UNDO. /* Старая дата очередного платежа */
   DEF VAR mPerCnt      AS INT64    NO-UNDO. /* счетчик периодов */

   mCurDate = iBegDate.

      /* считаем число периодов */
   CNT:
   DO WHILE mCurDate < iEndDate:
      IF mCurDateOld EQ mCurDate 
      THEN 
         mCurDate = mCurDate + 1.
      mCurDateOld = mCurDate.
      mCurDate = FRST_DATE(mCurDate,
                           iEndDate,
                           iPayDay,
                           iGlInt,
                           iCondBegD).

      /* дата попадает в месяц без погашения */
      IF (CAN-FIND (FIRST ttTermObl WHERE ttTermObl.contract  EQ tt-uploan.contract
                                     AND ttTermObl.cont-code EQ tt-uploan.cont-code
                                     AND ttTermObl.idnt      EQ 200
                                     AND INT64(ttTermObl.amt)  EQ MONTH(mCurDate)
                                     AND ttTermObl.end-date  LE mCurDate
                   NO-LOCK)
         /* и месяца и года даты нет в списке ВКЛЮЧИТЬ */
         AND NOT CAN-FIND
                  (FIRST ttTermObl WHERE ttTermObl.contract   EQ tt-uploan.contract
                                     AND ttTermObl.cont-code  EQ tt-uploan.cont-code
                                     AND ttTermObl.idnt       EQ 201
                                     AND ttTermObl.sop-offbal EQ 1         /* ВКЛЮЧИТЬ */
                                     AND INT64(ttTermObl.amt)   EQ MONTH(mCurDate)
                                     AND INT64(ttTermObl.sop)   EQ YEAR (mCurDate)
                   NO-LOCK))
         /* или месяц и год даты есть в списке ИСКЛЮЧИТЬ */
         OR CAN-FIND
                  (FIRST ttTermObl WHERE ttTermObl.contract   EQ tt-uploan.contract
                                     AND ttTermObl.cont-code  EQ tt-uploan.cont-code
                                     AND ttTermObl.idnt       EQ 201
                                     AND ttTermObl.sop-offbal NE 1         /* ИСКЛЮЧИТЬ */
                                     AND INT64(ttTermObl.amt)   EQ MONTH(mCurDate)
                                     AND INT64(ttTermObl.sop)   EQ YEAR (mCurDate)
                   NO-LOCK)
      THEN NEXT CNT.    /* не считаем исключенные месяцы */
      mPerCnt = mPerCnt + 1.
   END.
   RETURN mPerCnt.
END FUNCTION.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _FUNCTION CalcSumAmt TERMINAL-SIMULATION 
FUNCTION CalcSumAmt RETURNS DEC (
   INPUT iDate    AS DATE, /* Дата */
   INPUT iTypeOld AS CHAR, /* Тип условия до изменения */
   INPUT iTypeNew AS CHAR, /* Тип условия после изменения */
   INPUT iAmtOld  AS DEC,  /* Сумма условия до изменения */
   INPUT iAmtNew  AS DEC   /* Сумма условия после изменения */
):

   DEF VAR vSum AS DEC NO-UNDO.

   DEF BUFFER term-obl    FOR term-obl.        /* Обязательства соглашения */

   FIND LAST term-obl WHERE
             term-obl.contract  EQ tt-uploan.contract
         AND term-obl.cont-code EQ tt-uploan.cont-code
         AND term-obl.idnt      EQ 2
         AND term-obl.end-date  LE iDate
   NO-LOCK NO-ERROR.

      /* получаем остаток */
   IF AVAIL term-obl THEN
      vSum = term-obl.amt-rub. 
   ELSE
      vSum = 0.
      /* находим плановый остаток за вычетом текущего */
   CASE iTypeOld:
      WHEN "Выдача" THEN
      DO:
         vSum = vSum - iAmtOld.
      END.
      WHEN "Остаток" THEN
      DO:
      END.
      WHEN "Погашение" THEN
      DO:
      END.
      WHEN "ДосрПогаш" THEN
      DO:
         vSum = vSum + iAmtOld.
      END.
   END CASE.
   CASE iTypeNew:
      WHEN "Выдача" THEN
      DO:
         vSum = vSum + iAmtNew.
      END.
      WHEN "Остаток" THEN
      DO:
         vSum = iAmtNew.
      END.
      WHEN "Погашение" THEN
      DO:
            /* если это редактируемое условие, то ищем плановый остаток на предыдущую дату */
         IF iMode EQ {&MOD_EDIT} THEN
         DO:
            FIND LAST term-obl WHERE
                      term-obl.contract  EQ tt-uploan.contract
                  AND term-obl.cont-code EQ tt-uploan.cont-code
                  AND term-obl.idnt      EQ 2
                  AND term-obl.end-date  LT iDate
            NO-LOCK NO-ERROR.
            IF AVAIL term-obl THEN
               vSum = term-obl.amt-rub.
            ELSE
               vSum = 0.
         END.
            /* если это добавление условия на дату планоыого платежа, то ищем плановый остаток на предыдущую дату */
         IF iMode EQ {&MOD_ADD} 
            AND CAN-FIND (FIRST term-obl WHERE
                                term-obl.contract  EQ tt-uploan.contract
                            AND term-obl.cont-code EQ tt-uploan.cont-code
                            AND term-obl.idnt      EQ 2
                            AND term-obl.end-date  EQ iDate
                          NO-LOCK) THEN
         DO:
            FIND LAST term-obl WHERE
                      term-obl.contract  EQ tt-uploan.contract
                  AND term-obl.cont-code EQ tt-uploan.cont-code
                  AND term-obl.idnt      EQ 2
                  AND term-obl.end-date  LT iDate
            NO-LOCK NO-ERROR.
            IF AVAIL term-obl THEN
               vSum = term-obl.amt-rub.
            ELSE
               vSum = 0.
         END.
         vSum = vSum - iAmtNew.
      END.
      WHEN "ДосрПогаш" THEN
      DO:
         vSum = vSum - iAmtNew.
      END.
   END CASE.
   RETURN vSum.
END FUNCTION. /* CalcSumAmt */

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
/* $LINTFILE='f-cond.p' */
/* $LINTMODE='1,5,6,3' */
/* $LINTENV ='common' */
/* $LINTVSS ='$/ws3-dpl/common/bq/' */
/* $LINTUSER='seei' */
/* $LINTDATE='12/10/2016 14:40:28.278+03:00' */
/*prosignDIze45+SB5qedObey/p9nw*/